<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jimkang.com</title>
    <atom:link href="http://jimkang.com/feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>http://jimkang.com</link>
    <description>It's dot com.</description>
    <pubDate>Sat, 08 Jul 2023 20:00:00 -0400</pubDate>
    <generator>Wintersmith - https://github.com/jnordberg/wintersmith</generator>
    <language>en</language>
    <item>
      <title>Bold marketing</title>
      <link>http://jimkang.com/weblog/articles/bold-marketing/</link>
      <pubDate>Sat, 08 Jul 2023 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/bold-marketing/</guid>
      <author></author>
      <description>&lt;p&gt;I signed up to the Stacking the Bricks newsletter. They tell you how to build a business in &lt;i&gt;a way you too can do&lt;/i&gt;.&lt;/p&gt;
&lt;p&gt;They have &lt;i&gt;one central idea&lt;/i&gt;: Visit forums of professionals known to pay for things, see what they want, and make that. I think this idea is &lt;i&gt;valid&lt;/i&gt;.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;They also bold every third paragraph and write in short sentences.&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;
This style makes me feel like I’m reading:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://smidgeo.com/&quot;&gt;&lt;b&gt;SMIDGEO&lt;/b&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://timmyfailure.com/total-failure-inc/&quot;&gt;Timmy Failure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Matt Furey, a 2010s (and maybe current?) fitness grifter &lt;i&gt;who wrote exactly like this&lt;/i&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Much like &lt;b&gt;Cal Newport&lt;/b&gt;, Stacking the Bricks have taken one good idea and &lt;i&gt;stretched&lt;/i&gt; it. Have you ever read a Cal Newport book? It is like someone took a tweet and asked &lt;b&gt;ChatGPT&lt;/b&gt; to expand it to &lt;i&gt;50,000 words&lt;/i&gt;.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Anyway, what they’re going is not the worst, considering, but the scam vibe does their single good idea a disservice.&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Want to know what I think is a &lt;i&gt;good way of imparting information&lt;/i&gt;?&lt;/p&gt;
&lt;p&gt;&lt;b&gt;&amp;#x261b; &lt;u&gt;Download this pdf to find out!&lt;/u&gt; &amp;#x261a;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;(I’m &lt;b&gt;kidding&lt;/b&gt;, but reading those emails right after watching a &lt;a href=&quot;https://ocw.mit.edu/courses/18-06-linear-algebra-spring-2010/resources/lecture-2-elimination-with-matrices/&quot;&gt;traditional lecture on linear algebra&lt;/a&gt; is quite a &lt;i&gt;contrast&lt;/i&gt;.)&lt;/p&gt;
</description>
    </item>
    <item>
      <title>CORS junk</title>
      <link>http://jimkang.com/weblog/articles/cors-junk/</link>
      <pubDate>Thu, 01 Jun 2023 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/cors-junk/</guid>
      <author></author>
      <description>&lt;p&gt;At the last three jobs I’ve been at, I’ve hit some form of this issue:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I am writing a web app.&lt;/li&gt;
&lt;li&gt;I am running locally on localhost while developing it.&lt;/li&gt;
&lt;li&gt;It needs to make an http request to a server on another origin (a “cross-origin” request, if you will).&lt;/li&gt;
&lt;li&gt;That server, at least at that moment, does not provide headers in its http responses that say “it is OK to make requests to me from localhost.”&lt;/li&gt;
&lt;li&gt;Requests from the browser to that server fail because of this CORS issue.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;
Long-term, maybe you or someone at your organization changes the server or create another instance of it that’s configured with the right CORS headers. But in the short term, maybe you don’t have control over the server.&lt;/p&gt;
&lt;p&gt;So, to keep the web dev flowing, you create a proxy that the browser can make requests to. That proxy makes the request to the server you actually want to target, collects the response, then passes that back to the browser with the appropriate CORS headers tacked on.&lt;/p&gt;
&lt;p&gt;I’ve made a few different versions of this proxy, often messily and sometimes glommed onto a web server meant for something else.&lt;/p&gt;
&lt;p&gt;Today, I made a clean version of this that you can run on your laptop: &lt;a href=&quot;https://github.com/jimkang/local-nginx-proxy&quot;&gt;local-nginx-proxy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can also use this as a reference for making more permanent proxies. (I have a bunch of Node services that sit behind proxies like this in nginx, for example, but the config is way messier.)&lt;/p&gt;
&lt;p&gt;This isn’t really how I planned to spend the morning, but every once in a great while, the exhortations of my soul are weird in a &lt;a href=&quot;http://datassette.net/businessfunk/&quot;&gt;Businessfunk&lt;/a&gt; kind of way.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Miscellaneous Findings X: Catching up somewhat</title>
      <link>http://jimkang.com/weblog/articles/miscellaneous-findings-010/</link>
      <pubDate>Tue, 30 May 2023 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/miscellaneous-findings-010/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;em&gt;This is a roundup of miscellaneous things that I’ve found out about (or have rediscovered).&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; I put the findings that translate well to speech on my podcast, &lt;span style=&quot;text-decoration: underline&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://jimkang.com/smallfindings/&quot;&gt;Small Findings&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;. The rest (which are often technical findings), I put here.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Well, I forgot about doing this, so it’s been &lt;a href=&quot;http://localhost:8080/weblog/articles/miscellaneous-findings-009/&quot;&gt;over a year&lt;/a&gt; since I’ve posted findings. So, here’s 17 of them!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Get ahead of the misinformation game</title>
      <link>http://jimkang.com/weblog/articles/get-ahead-of-the-misinformation-game/</link>
      <pubDate>Sun, 14 May 2023 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/get-ahead-of-the-misinformation-game/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;em&gt;This was also sent out as a &lt;a href=&quot;https://tinyletter.com/jimkang/letters/get-ahead-of-the-misinformation-game&quot;&gt;newsletter&lt;/a&gt;. If you’d like to get project updates like this as email, you can &lt;a href=&quot;https://tinyletter.com/jimkang/&quot;&gt;subscribe&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;
Everyone’s talking about how large language models are going to take internet misinformation to a new level in the near future!&lt;/p&gt;
&lt;p&gt;That’s true. But there’s no need to wait for all of that web scraping and model training. &lt;em&gt;You can fill your head with misinformation &lt;strong&gt;right now&lt;/strong&gt; with the Known Leaders web site!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://jimkang.com/knownleaders/&quot;&gt;https://jimkang.com/knownleaders/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Everyone knows that the most important part of a band is the leader of the band. The one that’s in the front in the band photo and does all the interviews. &lt;em&gt;But who is that person?&lt;/em&gt; This site tells you!&lt;/p&gt;
&lt;p&gt;It also tells you who various games’ main heroes are and who the protagonists are in various novels.&lt;/p&gt;
&lt;p&gt;As a bonus, it uses a &lt;a href=&quot;https://github.com/jimkang/knownleaders/&quot;&gt;simpler mechanism than machine learning&lt;/a&gt; that is far less resource-intensive, and it passes the savings onto you!
So, &lt;a href=&quot;https://jimkang.com/knownleaders/&quot;&gt;mislearn away&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;(Also, if you’re a weirdo who likes to learn about new bands, this isn’t bad for that, either.)&lt;/p&gt;
&lt;h2 id=&quot;explaining-the-joke-a-classic-way-to-make-things-funnier&quot;&gt;Explaining the joke, a classic way to make things funnier&lt;/h2&gt;
&lt;p&gt;I first wrote down the idea for this on March 23, 2016 in a now-abandoned git repo where I used to keep project ideas. (I have probably tried about a dozen task management systems since.) The joke format is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You take the name of a band.&lt;/li&gt;
&lt;li&gt;You assume that the band has a “leader”.&lt;/li&gt;
&lt;li&gt;You assume the leader’s last name is same as the band’s name, like Eddie Van Halen and Van Halen or any of the Ramones and the Ramones.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I first encountered this format in high school. My friend Tim and I thought it was mildly amusing that, instead of a band photo, the cover of &lt;a href=&quot;https://www.discogs.com/release/24966868-Slayer-Decade-Of-Aggression-Live&quot;&gt;Decade of Aggression&lt;/a&gt; is just the silhouette of one person. (Jeff Hanneman, RIP.) (&lt;a href=&quot;https://www.discogs.com/release/382379-Slayer-Decade-Of-Aggression-Live&quot;&gt;There is also a version with a band photo on it.&lt;/a&gt; I’m not sure why there’s two versions.) Tim commented that the guy on the cover was obviously Rick Slayer, the lead guitarist/lead singer of Slayer.&lt;/p&gt;
&lt;h2 id=&quot;the-making-of&quot;&gt;The making of&lt;/h2&gt;
&lt;p&gt;I got this project going during Never Graduate Week, a week-long event that the &lt;a href=&quot;https://www.recurse.com/&quot;&gt;Recurse Center&lt;/a&gt; runs for its alumni, in which the alumni do some of the things they did while they were at the Recurse Center, most of which are learning things, doing projects, and talking to other about the previous two things. I was only able to do NGW things on Tuesday, but during that day, I went to a local Boston meetup, validated this concept, and presented a rough demo.&lt;/p&gt;
&lt;p&gt;It felt pretty refreshing! On one hand, I wasn’t really breaking new ground. I’ve done a &lt;a href=&quot;https://smidgeo.com/bots/successfulbot/&quot;&gt;lot&lt;/a&gt; &lt;a href=&quot;https://smidgeo.com/bots/you-never-see-it-bot&quot;&gt;of&lt;/a&gt; &lt;a href=&quot;https://smidgeo.com/bots/autocompletejok&quot;&gt;things&lt;/a&gt; like this. However, back when I was making a lot of small word bot type things, I kind of felt like I was constantly rolling out Play-Doh worms.&lt;/p&gt;
&lt;p&gt;Lately, I have been working on a lot of projects that involve audio or graphics and feel very &lt;em&gt;long&lt;/em&gt;. So, while doing short text-oriented projects all the time isn’t for me, it is a nice break! It’s good to roll a worm once in while. And I wouldn’t have thought of doing that if I hadn’t had the external prompt of the NGW Tuesday.&lt;/p&gt;
&lt;h2 id=&quot;noise&quot;&gt;Noise&lt;/h2&gt;
&lt;p&gt;Speaking of prompts, two of the last three pieces I’ve done in the last couple of months have started from &lt;a href=&quot;https://disquiet.com/2012/01/27/the-disquiet-junto/&quot;&gt;Disquiet Junto&lt;/a&gt; assignments. Two of them are noise pieces:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jimkang.com/music/deathmtn-zzavwFoW.html&quot;&gt;Middlesex Fells&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://jimkang.com/music/deathmtn-qHSICRqb.html&quot;&gt;In a Bomb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But they’re fairly gentle — noise in the sense of brown noise, not the kind of thing that’s meant to freak out the squares. So, squares and non-squares alike should give them a listen.&lt;/p&gt;
&lt;p&gt;And there’s also a &lt;a href=&quot;https://jimkang.com/music/deathmtn-MPTiqQEx.html&quot;&gt;more traditional song&lt;/a&gt; if you’re into that.&lt;/p&gt;
&lt;p&gt;Jim&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Let's Have Fun Why Not</title>
      <link>http://jimkang.com/weblog/articles/lets-have-fun-why-not/</link>
      <pubDate>Wed, 15 Mar 2023 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/lets-have-fun-why-not/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;em&gt;This was also sent out as a &lt;a href=&quot;https://tinyletter.com/jimkang/letters/eight-small-things&quot;&gt;newsletter&lt;/a&gt;. If you’d like to get project updates like this as email, you can &lt;a href=&quot;https://tinyletter.com/jimkang/&quot;&gt;subscribe&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;
Hey, everyone!&lt;/p&gt;
&lt;p&gt;New EP here:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://jimkang.bandcamp.com/album/lets-have-fun-why-not&quot;&gt;https://jimkang.bandcamp.com/album/lets-have-fun-why-not&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(An EP is a possibly archaic term that means mini-album.)&lt;/p&gt;
&lt;p&gt;According to git, I have been working on a long programmatic piece of music since March 22, 2022. And it is still not done!&lt;/p&gt;
&lt;p&gt;So, I thought I’d take a break and finish up these songs, which are a nice contrast to that piece. They’re all buoyant, manually composed tunes, and despite what I thought between the ages of 14-30, I think we need those sometimes.&lt;/p&gt;
&lt;p&gt;I — and a lot of people out there — had an exhausting 2022. We all deserve a break. You deserve a break even if you didn’t have a year of sustained stress. So go on and have it.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://jimkang.bandcamp.com/album/lets-have-fun-why-not&quot;&gt;https://jimkang.bandcamp.com/album/lets-have-fun-why-not&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The cover is by Katt, and incidentally, she’s &lt;a href=&quot;https://sparklemarkers.com/&quot;&gt;currently available for hire&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Jim&lt;/p&gt;
&lt;h2 id=&quot;naming-and-overthinking&quot;&gt;Naming and overthinking&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;I didn’t want to clog up the newsletter announcement of a fun album with a bunch of handwringing, but for some reason, I feel it’s OK for the weblog? So, here it is.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I hesitated to put Let’s Have Fun Why Not out under my real name.&lt;/p&gt;
&lt;p&gt;I was afraid that if I put out fun stuff, then I would no longer be taken seriously and not have the small audience I do have for when I put out a piece that explores lesser known territory later this year. Ultimately, I found these reasons why I should go with it anyway:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I’m not sure I’m taken all that seriously anyway.&lt;/li&gt;
&lt;li&gt;I would have to come up with another band name if I was going to release this under another name.&lt;/li&gt;
&lt;li&gt;Part of the reason I started releasing music under my own name is that I’ve eventually hated every artist name I’ve come up with for myself.&lt;/li&gt;
&lt;li&gt;I liked what &lt;a href=&quot;https://bandcamp.com/?show=439&quot;&gt;Hannes Grossmann said about jazz artists not bothering with that stuff.&lt;/a&gt; (Sorry, he said it in an audio interview, and I can’t link to specific parts of it.)&lt;ul&gt;
&lt;li&gt;Hannes was the drummer in Necrophagist and Obscura, but he’s also put out &lt;a href=&quot;https://hannesgrossmann.bandcamp.com/album/the-crypts-of-sleep&quot;&gt;really good progressive death metal&lt;/a&gt; as just “Hannes Grossmann”.&lt;/li&gt;
&lt;li&gt;He made the point that Chick Corea was just “Chick Corea” no matter what he was playing. Chick Corea did not need to come up with a new name every time he played in a different style.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;This would have been a form of brand protection, which is gross.&lt;ul&gt;
&lt;li&gt;Put your brand up on the altar and burn it as a sacrifice!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;I’d like to see more of people just being themselves.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;out-of-nowhere-a-pantera-digression&quot;&gt;Out of nowhere: A Pantera digression&lt;/h2&gt;
&lt;p&gt;Now that I’ve written this, I feel a strange empathy for ‘90s Pantera.&lt;/p&gt;
&lt;p&gt;I remember getting Far Beyond Driven back when it came out. In addition to the music being a disappointment for me (though I’ve recently heard people I respect say it’s their favorite Pantera album), there was this strange paragraph in the liner notes.&lt;/p&gt;
&lt;p&gt;It pre-emptively defended the fact that they had covered Black Sabbath’s Planet Caravan. It had a jarring vibe.&lt;b&gt;*&lt;/b&gt; As a teen, this seemed like remarkable insecurity to me. Man, you don’t need to apologize for covering a classic just because it’s mellow!&lt;/p&gt;
&lt;p&gt;But now I understand that humans have a tendency to jealously hoard respect. This is why people have trouble coming down from whatever spot on the corporate ladder they’ve gotten to.&lt;/p&gt;
&lt;p&gt;At that pre-ubiquitous-internet time, information about metal and especially underground metal was scarce. So, for a lot of people Pantera was one of the heaviest bands they knew. And Pantera probably thought this was where their respect came from. I can see how it must have felt scary to lose any of that, especially considering that they had a &lt;a href=&quot;https://www.metal-archives.com/bands/Pantera/77&quot;&gt;previous life as glam metal band&lt;/a&gt;. (Again, this was pre-ubiquitous-internet, so this past could be hidden. Although over on Usenet, people could not stop linking to pictures of glam Pantera.)&lt;/p&gt;
&lt;p&gt;I have nowhere near as much to lose as they did. A few people have said nice things to me about the Sound of the Far Future. But I find myself not even wanting to disappoint that handful of people! And yet dishonesty won’t do them any good, either.&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;OK, I have now sufficiently overthought a &lt;a href=&quot;https://jimkang.bandcamp.com/album/lets-have-fun-why-not&quot;&gt;lark&lt;/a&gt;, so I can pack up now! Catch you next time.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;*&lt;/b&gt; At the time I had no idea, but this note was babycrimes compared to the wrongdoings Phil (the vocalist) would go on to do. And yes, I’m guessing the note was his. It had that Phil-style defensive vibe mixed with his way of misusing big words.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>The Web Audio API's linearRampToValueAtTime doesn't work on playbackRate</title>
      <link>http://jimkang.com/weblog/articles/no-ramps-for-playback-rate/</link>
      <pubDate>Thu, 23 Feb 2023 19:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/no-ramps-for-playback-rate/</guid>
      <author></author>
      <description>&lt;p&gt;As a public service, I’m explicitly stating that &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/linearRampToValueAtTime&quot;&gt;linearRampToValueAtTime&lt;/a&gt; does not work on an AudioBufferSourceNode’s &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioBufferSourceNode/playbackRate&quot;&gt;playbackRate&lt;/a&gt;, as of February 24, 2023, on Firefox. It does work on Chrome. I’ve included a simple demo here.
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;style&gt;
#message-field {
  font-weight: bold;
}

.button-container {
  display: flex;
  flex-direction: column;
  margin-bottom: 1rem;
}

.button-container button {
  font-size: larger;
  margin-bottom: 0.5rem;
}
&lt;/style&gt;

&lt;p&gt;&lt;hr&gt;
&lt;span id=&quot;message-field&quot;&gt;Loading sample…&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;button-container&quot;&gt;
  &lt;button id=&quot;play-builtin-ramp&quot; disabled&gt;Play sample with linearRampToValueAtTime&lt;/button&gt;
  &lt;button id=&quot;play-homemade-ramp&quot; disabled&gt;Play sample with homemade ramp&lt;/button&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;&lt;noscript&gt;(If you’re reading this from RSS: There’s a demo here, probably not displaying in your RSS reader. You have to click through to see it.)&lt;/noscript&gt;&lt;/p&gt;
&lt;script&gt;
var playBuiltInButton;
var playHomemadeButton;
var messageField;

(function rampDemo() {
  messageField = document.getElementById('message-field');
  playBuiltInButton = document.getElementById('play-builtin-ramp');
  playHomemadeButton = document.getElementById('play-homemade-ramp');

  getSample();
})();


async function getSample() {
  var ctx = new AudioContext();

  try {
    var res = await fetch('flute_note_tremolo.wav');
    if (!res.ok) {
      throw new Error(`Error while trying to get sample. Status: ${res.status}`);
    }
    var blob = await res.blob();
    var rawBuffer = await blob.arrayBuffer();
    ctx.decodeAudioData(rawBuffer, setBuffer);
  } catch (error) {
    messageField.textContent = error.message;
  }

  function setBuffer(decoded) {
    messageField.textContent = &quot;The sample is loaded. Click a button to play it with either the built-in ramp (which doesn't work on Firefox) or homemade ramp.&quot;;

    var builtInPlayer = Player({ runRamp: runBuiltInRamp, buffer: decoded, ctx });
    var homemadePlayer = Player({ runRamp: runHomemadeRamp, buffer: decoded, ctx });

    playBuiltInButton.addEventListener('click', builtInPlayer.play);
    playHomemadeButton.addEventListener('click', homemadePlayer.play);

    playBuiltInButton.removeAttribute('disabled');
    playHomemadeButton.removeAttribute('disabled');
  }
}

function Player({ runRamp, buffer, ctx }) {
  var timeoutKey;
  var samplerNode;

  return { play };

  function play() {
    if (timeoutKey) {
      clearTimeout(timeoutKey);
    }
    if (samplerNode) {
      samplerNode.stop();
    }

    samplerNode = ctx.createBufferSource();
    samplerNode.loop = true;
    samplerNode.buffer = buffer;

    samplerNode.connect(ctx.destination);
    samplerNode.start();
    runRamp({ ctx, samplerNode });

    timeoutKey = setTimeout(() =&gt; samplerNode.stop(), 6000);
  }
}

function runBuiltInRamp({ ctx, samplerNode }) {
  samplerNode.playbackRate.linearRampToValueAtTime(
    2.0,
    ctx.currentTime + 4
  );
}

function runHomemadeRamp({ ctx, samplerNode }) {
  homemadeLinearRamp({ param: samplerNode.playbackRate, targetVal: 2, ctx, durationSeconds: 4 });
}

// Warning: cancelScheduledValues doesn't cancel this.
function homemadeLinearRamp({ param, targetVal, ctx, durationSeconds }) {
  const startTime = ctx.currentTime;
  const startVal = param.value;
  const valDelta = targetVal - startVal;
  window.requestAnimationFrame(updateParam);

  function updateParam() {
    const elapsed = ctx.currentTime - startTime;
    const progress = elapsed / durationSeconds;
    param.value = startVal + progress * valDelta;
    if (progress &lt; 1) {
      window.requestAnimationFrame(updateParam);
    }
  }
}
&lt;/script&gt;

&lt;p&gt;If you click “Play sample with linearRampToValueAtTime”, the browser will play a flute sample and run code that attempts to change the &lt;code&gt;playbackRate&lt;/code&gt; of the &lt;code&gt;AudioBufferSourceNode&lt;/code&gt; from 1.0 to 2.0 over the course of four seconds. It should sound something like a slide whistle, but on Firefox, it just plays at a normal rate and pitch for four seconds, then jumps up to the target playbackRate, an octave up. Here’s what that code looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  samplerNode.playbackRate.linearRampToValueAtTime(
    2.0,
    ctx.currentTime + 4
  );
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;However, if you click “Play sample with homemade ramp”, which doesn’t use &lt;code&gt;linearRampToValueAtTime&lt;/code&gt; and instead sets &lt;code&gt;playbackRate.value&lt;/code&gt; during a series of callbacks from &lt;code&gt;requestAnimationFrame&lt;/code&gt;, then it slides up as expected in both Firefox and Chrome. Here’s what that code looks like, which you can use as a polyfill:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// Warning: cancelScheduledValues doesn&amp;#39;t cancel this.
function homemadeLinearRamp({ param, targetVal, ctx, durationSeconds }) {
  const startTime = ctx.currentTime;
  const startVal = param.value;
  const valDelta = targetVal - startVal;
  window.requestAnimationFrame(updateParam);

  function updateParam() {
    const elapsed = ctx.currentTime - startTime;
    const progress = elapsed / durationSeconds;
    param.value = startVal + progress * valDelta;
    if (progress &amp;lt; 1) {
      window.requestAnimationFrame(updateParam);
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(Here, &lt;code&gt;param&lt;/code&gt; should be the &lt;code&gt;playbackRate&lt;/code&gt; instance from your &lt;code&gt;AudioBufferSourceNode&lt;/code&gt;. &lt;code&gt;ctx&lt;/code&gt; should be your &lt;code&gt;AudioContext&lt;/code&gt;.)&lt;/p&gt;
&lt;p&gt;You can use View Source to see the code in context.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update, 2023-02-27:&lt;/strong&gt; Same situation in Firefox with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/StereoPannerNode&quot;&gt;StereoPannerNode&lt;/a&gt;s and the &lt;code&gt;pan&lt;/code&gt; property.&lt;/p&gt;
&lt;h2 id=&quot;not-mad&quot;&gt;Not mad&lt;/h2&gt;
&lt;p&gt;I’m not writing to complain about Firefox’s implementation! I know that team has &lt;a href=&quot;https://arstechnica.com/information-technology/2020/08/firefox-maker-mozilla-lays-off-250-workers-says-covid-19-lowered-revenue/&quot;&gt;dev resource issues&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I wrote this because I was in this situation in which I was working on a generative music piece which has gotten complex, and I was trying unsuccessfully to use this API method. I was hoping the internet would tell me definitively whether I was using it wrong or if it just didn’t work.&lt;/p&gt;
&lt;p&gt;It did not tell me anything conclusive.&lt;/p&gt;
&lt;p&gt;Searching the web just seems bad lately, both on Duck Duck Go and Google, and the closest I could get is a &lt;a href=&quot;https://stackoverflow.com/questions/37027694/audio-api-setvaluecurveattime-firefox&quot;&gt;Stack Overflow post from six years ago&lt;/a&gt; about &lt;code&gt;setValueCurveAtTime&lt;/code&gt; not working on &lt;code&gt;playbackRate&lt;/code&gt; on Firefox.&lt;/p&gt;
&lt;p&gt;So, I had to take the time to test it for myself, which I loathed having to do because I have a lot to do. But now, you don’t have to! I hope this helps, Internet Searcher of the future!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Evil meditation</title>
      <link>http://jimkang.com/weblog/articles/evil-meditation/</link>
      <pubDate>Fri, 26  Aug 2022 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/evil-meditation/</guid>
      <author></author>
      <description>&lt;p&gt;I was reading &lt;u&gt;The Mindfulness Prescription for ADHD&lt;/u&gt; (which, a couple of chapters in, seems OK), and it mentions meditation classes. Presumably, the schools that run these classes position them as positive or at least non-evil.  &lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;So, I allowed my attention to travel to this question:&lt;/strong&gt; If I started a school of evil meditation, would it be a better business than a meditation school without a specific alignment?  &lt;/p&gt;
&lt;p&gt;In practice, the school would just teach whatever normal meditation schools teach. The evil part would be a marketing stance.&lt;/p&gt;
&lt;p&gt;The students would meditate, just like at a typical meditation school, but the instructor would tell them that they were practicing “&lt;strong&gt;evil meditation&lt;/strong&gt;”. Other aspects of meditation would be labeled evil as well, like “&lt;strong&gt;evil awareness&lt;/strong&gt;”, “&lt;strong&gt;evil mindfulness&lt;/strong&gt;”, “&lt;strong&gt;evil breath&lt;/strong&gt;”,  “&lt;strong&gt;evil posture&lt;/strong&gt;.”&lt;/p&gt;
&lt;p&gt;All of the benefit claims would be the same, except with the “evil” modifier attached:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Increased &lt;strong&gt;evil clarity&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Increased &lt;strong&gt;evil focus&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Increased sense of &lt;strong&gt;evil calm&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;11% increase in &lt;strong&gt;evil resilience&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;7.5% increase in &lt;strong&gt;satisfaction with evil life&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Increased &lt;strong&gt;evil compassion&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Increased &lt;strong&gt;awareness&amp;#8230;of evil&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Improves &lt;strong&gt;evil memory&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Improves &lt;strong&gt;evil sleep&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Strengthens the &lt;strong&gt;evil immune system&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And the school facility would be decorated with skulls, “666”s, containers of blood, etc.   &lt;/p&gt;
&lt;p&gt;Would the idea of doing something evil attract people who would otherwise not try meditation? And would these new meditation students fascinated by evil compensate for the possible group of potential students turned off by evil?&lt;/p&gt;
&lt;p&gt;&lt;em&gt;To be honest, I don’t know the answer&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;However&lt;/strong&gt;, I think we can agree that no one else can know either, with the exception of &lt;em&gt;bold investors&lt;/em&gt;. And though not all bold investors will be interested in finding out, &lt;em&gt;perhaps &lt;strong&gt;evil bold investors&lt;/strong&gt; (which make up only 80-90% of bold investors) will.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Eight small things</title>
      <link>http://jimkang.com/weblog/articles/eight-small-things/</link>
      <pubDate>Mon, 14 Feb 2022 19:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/eight-small-things/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;em&gt;This was also sent out as a &lt;a href=&quot;https://tinyletter.com/jimkang/letters/eight-small-things&quot;&gt;newsletter&lt;/a&gt;. If you’d like to get project updates like this as email, you can &lt;a href=&quot;https://tinyletter.com/jimkang/&quot;&gt;subscribe&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;
Hey, everybody.&lt;/p&gt;
&lt;p&gt; I’ve been doing contract work. I’ve been transporting my kid to various places. I’ve been learning about audio digital signal processing in fits and starts.&lt;/p&gt;
&lt;p&gt;But! I’ve also done several small projects over these past few months, so I thought I’d round them up for you.&lt;/p&gt;
&lt;p&gt;In case you’re in a Clicking and Not Reading Mood, here’s a bunch of stuff to click:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jimkang.com/music/deathmtn-VAeaecCm.html&quot;&gt;Programmatically-generated shredding&lt;/a&gt; (&lt;a href=&quot;https://jimkang.com/music/deathmtn-vBdReLto.html&quot;&gt;Softer synthy version&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://smidgeo.com/notes/deathmtn/podcast.xml&quot;&gt;Notescast podcast feed&lt;/a&gt; (&lt;a href=&quot;https://podcasts.apple.com/us/podcast/notescast/id1605530179&quot;&gt;Apple Podcasts page&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://smidgeo.com/anoited/&quot;&gt;Anoited&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://jimkang.com/adventures/orm-mines/&quot;&gt;Orm Mines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://jimkang.com/weblog/articles/remind-me-in-10000-years/&quot;&gt;Remind me in 10,000 years&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://jimkang.com/curse-notice/&quot;&gt;Curse Notice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://jimkang.com/personalized-bible/fucking-bible.html&quot;&gt;The Fucking Bible&lt;/a&gt; (warning 7.5 MB)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tinyletter.com/hot-garbage&quot;&gt;Hot Garbage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For those of you in a Reading Mood, here’s an explanation of those projects.&lt;/p&gt;
&lt;h2 id=&quot;programmatically-generated-shredding&quot;&gt;Programmatically-generated shredding&lt;/h2&gt;
&lt;p&gt;As part of &lt;a href=&quot;https://synthruary.com/&quot;&gt;Synthruary&lt;/a&gt;, I generated this:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://jimkang.com/music/deathmtn-VAeaecCm.html&quot;&gt;Two Robots Loitering at Guitar Center&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you’re not familiar with Guitar Center, it’s a big box store for music equipment. People buy (often shoddy or overpriced) amps and instruments there, but they also go there just to touch a lot of guitars and show off, even if they don’t really have much to show off. (Or, at least they did. I haven’t been to one in over a decade.)&lt;/p&gt;
&lt;p&gt;Two Robots is a simulation of guitar store showoffs that know the modes and scales in every key and improvise solos that sound like etudes, just to make sure that &lt;em&gt;you&lt;/em&gt; know that they do. At one point, I thought about allowing the guitar robot to play a non-sixteenth note. But I felt that wasn’t true to the spirit of the kind of noodler I remember.&lt;/p&gt;
&lt;p&gt;It adheres to a certain mechanical aesthetic, but I think the mode changes provide drama and depth of feeling. So, I hope it’s enjoyable in addition to despite its simulationist nature!&lt;/p&gt;
&lt;p&gt;I wrote this &lt;a href=&quot;https://github.com/jimkang/midimod/blob/main/tools/micromodes.js&quot;&gt;script&lt;/a&gt; to generate the MIDI parts, but the big technical breakthrough for me was rendering those parts in a passable electric guitar sound, which I thought was unattainable for MIDI-driven music. (There’s some &lt;a href=&quot;https://jimkang.com/music/deathmtn-VAeaecCm.html&quot;&gt;details on how to do that in the music post&lt;/a&gt;, if you’re interested.)&lt;/p&gt;
&lt;p&gt;There’s also a softer, synthier version, named &lt;a href=&quot;https://jimkang.com/music/deathmtn-vBdReLto.html&quot;&gt;The Wizards’ Enlightening Conversation&lt;/a&gt;. The guy rated the guitar version “just OK” but after hearing one bar of this version, he deemed it “really good”, which goes to show how huge timbre is in listener perception, despite it commonly not being thought of as “content”.&lt;/p&gt;
&lt;p&gt;I’ve done a few other pieces for Synthruary. They’re even weirder, and you can find them on my &lt;a href=&quot;https://jimkang.com/music/&quot;&gt;music site&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;notescast&quot;&gt;Notescast&lt;/h2&gt;
&lt;p&gt;I “created” a podcast by setting up an automated process that goes through my &lt;a href=&quot;https://smidgeo.com/notes/deathmtn/&quot;&gt;microblog&lt;/a&gt; and puts the posts that have audio in them into a &lt;a href=&quot;https://smidgeo.com/notes/deathmtn/podcast.xml&quot;&gt;podcast feed&lt;/a&gt;. So, now you can have that stuff delivered conveniently to your podcast app.&lt;/p&gt;
&lt;p&gt;Like and subscribe:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://smidgeo.com/notes/deathmtn/podcast.xml&quot;&gt;https://smidgeo.com/notes/deathmtn/podcast.xml&lt;/a&gt;
&lt;a href=&quot;https://podcasts.apple.com/us/podcast/notescast/id1605530179&quot;&gt;https://podcasts.apple.com/us/podcast/notescast/id1605530179&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(Or search for “Notescast” in your podcast app.)&lt;/p&gt;
&lt;p&gt;The podcast ends up being a mix of music and talk. Maybe I’ll add the hits of the ‘90s, ‘00s’, and today, with news and weather on the ones.&lt;/p&gt;
&lt;h2 id=&quot;anoited&quot;&gt;Anoited&lt;/h2&gt;
&lt;p&gt;Along the same “nice repackaging” lines, I started Anoited:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://smidgeo.com/anoited/&quot;&gt;https://smidgeo.com/anoited/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It’s a blog about my experience playing Noita, an amazing 2D physics simulation driven game rocemmended to me by &lt;a href=&quot;https://joegester.com/&quot;&gt;Joe&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Anoited is yet another cut of my microblog, so if you subscribe to that, you already get all of the posts that are in Anoited. All I can say for it is that it has more “game aesthetic,” and the screenshots are bigger and scaled crisply, FWIW.&lt;/p&gt;
&lt;h2 id=&quot;orm-mines&quot;&gt;Orm Mines&lt;/h2&gt;
&lt;p&gt;Here is an extraterrestrial 5E D&amp;amp;D adventure designed for one kid player with a fifth-level character:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://jimkang.com/adventures/orm-mines/&quot;&gt;https://jimkang.com/adventures/orm-mines/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It was well-received, but this written artifact is sparse in details. So, maybe it’s more useful as rough inspiration for your adventure than as a thing you can just pick up and play.&lt;/p&gt;
&lt;h2 id=&quot;remind-me-in-10-000-years&quot;&gt;Remind me in 10,000 years&lt;/h2&gt;
&lt;p&gt;I wrote about some speculative automated reminders that the guy and I made:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://jimkang.com/weblog/articles/remind-me-in-10000-years/&quot;&gt;https://jimkang.com/weblog/articles/remind-me-in-10000-years/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;curse-notice&quot;&gt;Curse Notice&lt;/h2&gt;
&lt;p&gt;Here is a hyper-specific tool:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://jimkang.com/curse-notice/&quot;&gt;https://jimkang.com/curse-notice/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It’s just for making Castlevania-2-style notices like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/eight-small-things/the-morning-sun-has-vanquished-the-newsletter-drought.png&quot; alt=&quot;The morning sun has vanquished the newsletter drought.&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;the-fucking-bible&quot;&gt;The Fucking Bible&lt;/h2&gt;
&lt;p&gt; It’s the Bible — with added swearing!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://jimkang.com/personalized-bible/fucking-bible.html&quot;&gt;https://jimkang.com/personalized-bible/fucking-bible.html&lt;/a&gt; (warning 7.5 MB)&lt;/p&gt;
&lt;h2 id=&quot;hot-garbage&quot;&gt;Hot Garbage&lt;/h2&gt;
&lt;p&gt;Hot Garbage is back! The Hot Garbage team has been consistently sending out newsletters packed with interesting links every week again for a couple of months now. I sometimes contribute links. Subscribe if you have an untoward hunger for interesting links!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tinyletter.com/hot-garbage&quot;&gt;https://tinyletter.com/hot-garbage&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;bonus-hills-in-halls&quot;&gt;Bonus: Hills in halls&lt;/h2&gt;
&lt;p&gt;I don’t know if you remember me submitting images from my &lt;a href=&quot;https://smidgeo.com/bots/hills/&quot;&gt;Hills bot&lt;/a&gt; to a &lt;a href=&quot;https://jimkang.com/smallfindings/episodes/who-is-the-robot-now/&quot;&gt;call for art&lt;/a&gt;, but some of them ended up getting chosen to go up on the walls in a condo in Philadelphia.&lt;/p&gt;
&lt;p&gt;I’ll never see that place, but I like knowing that these bot creations have been made wall-size, and hopefully, the people that squeeze through what look like fairly narrow hallways have their some shapes and colors.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;Hills in halls in a condo&quot; src=&quot;13C_Kang_3.jpg&quot; width=&quot;100%&quot;&gt;&lt;/p&gt;
&lt;p&gt;Jim&lt;/p&gt;
&lt;p&gt;P.S. You should reply and let me know your haps! I likely do not know them.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Remind me in 10,000 years</title>
      <link>http://jimkang.com/weblog/articles/remind-me-in-10000-years/</link>
      <pubDate>Mon, 07 Feb 2022 19:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/remind-me-in-10000-years/</guid>
      <author></author>
      <description>&lt;p&gt;This weekend, we were riffing about soup sleeves at lunch.
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;style&gt;
.article .content img {
  width: 320px;
  margin-left: auto;
  margin-right: auto;
}
&lt;/style&gt;
(Soup sleeves are sleeves that you’ve accidentally dunked in your soup. It came up because Katt used the term to warn the guy about a potential sleeve-in-food situation.)&lt;/p&gt;
&lt;p&gt;I remarked that Soup Sleeves would be a good name for a restaurant.&lt;/p&gt;
&lt;p&gt;The guy (who is seven) urged me to open that restaurant &lt;em&gt;for real&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I replied that I’d need several years to get ready to do that.&lt;/p&gt;
&lt;p&gt;The guy was concerned that I would forget and not actually follow up on opening the restaurant. He asked me to set a reminder to open the restaurant in five years.&lt;/p&gt;
&lt;p&gt;So, I did.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/remind-me-in-10000-years/soup-sleeves.png&quot; alt=&quot;Soup sleeves reminder screenshot&quot;&gt;&lt;/p&gt;
&lt;p&gt;This reminder was weird to see because I’ve never set a reminder for that far in the future. I do have some reminders in my Fastmail calendar for a year or so from now.&lt;/p&gt;
&lt;p&gt;But the year 2027 just looks &lt;em&gt;way&lt;/em&gt; further in the future.&lt;/p&gt;
&lt;h2 id=&quot;phones-are-mayflies&quot;&gt;Phones are mayflies&lt;/h2&gt;
&lt;p&gt;With the reminder on-screen, the guy said that he was now sure I wouldn’t forget to open Soup Sleeves in five years.&lt;/p&gt;
&lt;p&gt;I replied with the caveat that I probably wouldn’t have this phone by 2027. (And most likely, I won’t be using Apple services.)&lt;/p&gt;
&lt;p&gt;He asked why.&lt;/p&gt;
&lt;p&gt;I started by saying that I could lose my phone in the next five years. Or I could drop it, and it could break, and they’re hard to repair.&lt;/p&gt;
&lt;p&gt;The guy followed up with “What if you’re careful, and you don’t lose or break it?”&lt;/p&gt;
&lt;p&gt;Huh. Well.&lt;/p&gt;
&lt;p&gt;Now we were going to have to head into Unsatisfying Explanation territory. &lt;/p&gt;
&lt;p&gt;I fished around and came up with this:&lt;/p&gt;
&lt;p&gt;“Every phone is a computer, and computers run programs, like &lt;a href=&quot;https://www.stmath.com/&quot;&gt;ST Math&lt;/a&gt;. But every year, new programs come out, and those programs need better computers to run them. People start using those programs. So I might have to start using them, too. And to use them, I’ll need a new phone in a few years that can run the new programs.”&lt;/p&gt;
&lt;p&gt;He was silent for a moment, maybe because he was thinking about it or because it was a really boring and confusing thing that I just said.&lt;/p&gt;
&lt;p&gt;&lt;hr&gt;&lt;/p&gt;
&lt;p&gt;&lt;blockquote&gt;
Personally, I found what I had just said bewildering and ridiculous. It’s senseless that we all have to use phone software that continually increases its resource demands so that we have to get new phones every two years. As an adult, I am ashamed of myself and other adults for participating in this.
&lt;/blockquote&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;h2 id=&quot;onward-through-the-depths-of-time&quot;&gt;Onward through the depths of time&lt;/h2&gt;
&lt;p&gt;Undeterred, the guy asked how far in the future we could set a reminder.&lt;/p&gt;
&lt;p&gt;I tried setting a reminder for 50 years in the future. The Reminders app accepted it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/remind-me-in-10000-years/laundry.png&quot; alt=&quot;Laundry reminder screenshot&quot;&gt;&lt;/p&gt;
&lt;p&gt;Again, it was strange to see such a high date value. It was so high that I initially parsed it as in the past, as 1972. Then, after getting the century straight, it seemed bizarrely optimistic.&lt;/p&gt;
&lt;p&gt;Emboldened, we decided to set a reminder &lt;strong&gt;1,000 years&lt;/strong&gt; in the future. The guy noted that we’d both be dead at that point, but we decided we were still going to go ahead with the reminder.&lt;/p&gt;
&lt;p&gt;I requested a reminder, half-expecting it to be rejected.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/remind-me-in-10000-years/ghosts.png&quot; alt=&quot;Ghosts reminder screenshot&quot;&gt;&lt;/p&gt;
&lt;p&gt;But no, it dutifully put it into some database, then gave us a confirmation!&lt;/p&gt;
&lt;p&gt;(I don’t actually know who is going to be saying hi to our ghosts here. Maybe whoever ends up finding the reminder?)&lt;/p&gt;
&lt;p&gt;Now it was time to push it further! I set a reminder for &lt;strong&gt;10,000 years&lt;/strong&gt; from now.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/remind-me-in-10000-years/home-galaxy.png&quot; alt=&quot;Galaxy reminder screenshot&quot;&gt;&lt;/p&gt;
&lt;p&gt;We discovered that there was indeed a limit to the app’s optimism. That limit was the last day of the &lt;strong&gt;year 4000&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;So, our reminder was knocked back to December 31, 4000. Still, that’s really far in the future, on a smartphone time scale. (Though not that far in the &lt;a href=&quot;https://jimkang.com/sound-of-the-far-future/&quot;&gt;greater scheme&lt;/a&gt; of things.)&lt;/p&gt;
&lt;p&gt;I’m not sure what I thought the situation would be in the year 4000 (or the year 12000, which is when I hoped this reminder would land). Maybe at that point, our ghosts will be able to do intergalactic travel at meaningful speeds? Or perhaps a random being will find it and experience it as a &lt;a href=&quot;https://projects.jennyholzer.com/&quot;&gt;Jenny Holzer&lt;/a&gt;-style art piece.&lt;/p&gt;
&lt;h2 id=&quot;if-this-actually-worked&quot;&gt;If this actually worked&lt;/h2&gt;
&lt;p&gt;What if you really could count on automated reminders far into the future, though? I guess we could scale back down to decades in the future, rather than millennia, for the purposes of this question.&lt;/p&gt;
&lt;p&gt;You could do things like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/remind-me-in-10000-years/tontine.png&quot; alt=&quot;Reminder to check on the tontine you joined in 30 years&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/remind-me-in-10000-years/fungal-creation.png&quot; alt=&quot;Reminder to unleash a fungal creation that required 50 years to grow&quot;&gt;&lt;/p&gt;
&lt;p&gt;These reminders would be very useful — &lt;em&gt;if things pan out exactly as you imagine they will.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Things can change unpredictably in decades. Your tontine could be invalidated by a heist. Your massive fungal network could be killed by toxins emitted by a rival fungal network.&lt;/p&gt;
&lt;p&gt;Because of that unpredictability, though, it is &lt;em&gt;extra nice&lt;/em&gt; when something actually &lt;strong&gt;is&lt;/strong&gt; predictable on that time scale. If you had reliable long-term reminders, you would be able to think, maybe I can’t count on my fungal network being there, but I can count on getting the reminder about it.&lt;/p&gt;
&lt;p&gt;I think this little bit of predictability counts for something.&lt;/p&gt;
&lt;p&gt;Unpredictability creates stress because your brain has to constantly re-evaluate a situation instead of just assessing it once, then moving on to other matters. So, the more predictability we can create in our lives (outside of art), the better.&lt;/p&gt;
&lt;p&gt;Corporations can’t deliver this for us. At a mechanical level, they don’t have the motivation to provide long-term anything. As has been discussed everywhere lately, investment creates incentives to capture monopolies and plan for the short term.&lt;/p&gt;
&lt;p&gt;So, if we’re going to have this, it’s going to have to come from elsewhere. Maybe some form of the &lt;a href=&quot;https://ploum.net/the-computer-built-to-last-50-years/&quot;&gt;50-year computer&lt;/a&gt; could provide our long-term reminders.&lt;/p&gt;
&lt;p&gt;I hope we do find a way to do reliable long-term reminders somehow. The     launch of Soup Sleeves depends on it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/remind-me-in-10000-years/this-post-in-four-years.png&quot; alt=&quot;Reminder to see what I think of this post in four years&quot;&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Miscellaneous Findings IX: Pure Data and JUCE</title>
      <link>http://jimkang.com/weblog/articles/miscellaneous-findings-009/</link>
      <pubDate>Fri, 10 Sep 2021 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/miscellaneous-findings-009/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;em&gt;This is a roundup of miscellaneous things that I’ve found out about (or have rediscovered).&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; I take notes on findings regularly, and I put the findings that translate well to speech on my podcast, &lt;span style=&quot;text-decoration: underline&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://jimkang.com/smallfindings/&quot;&gt;Small Findings&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;. The rest (which are often technical findings), I put here. They’re not always written up for maximum comprehension as a blog post, but if anything is hard to understand, please &lt;a href=&quot;mailto:jimkang@fastmail.com&quot;&gt;email me&lt;/a&gt; if you need clarification.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;During the past week at the &lt;a href=&quot;https://recurse.com/&quot;&gt;Recurse Center&lt;/a&gt;, I started learning how to use &lt;strong&gt;Pure Data&lt;/strong&gt;, a music and signal processing language, and &lt;strong&gt;JUCE&lt;/strong&gt;, a framework for making audio software. In the process, I stepped on many metaphorical rakes. Perhaps, by reading this, you can step around them.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/running-your-own-email-server/sideshow-bob-next-rake.gif&quot; alt=&quot;Sideshow Bob steps on rakes&quot;&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>ROBOT VOICE HOWTO</title>
      <link>http://jimkang.com/weblog/articles/robot-voice-how-to/</link>
      <pubDate>Wed, 25  Aug 2021 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/robot-voice-how-to/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;em&gt;This was also sent out as a &lt;a href=&quot;https://tinyletter.com/jimkang/&quot;&gt;newsletter&lt;/a&gt;. If you’d like to get project updates like this as email, you can &lt;a href=&quot;https://tinyletter.com/jimkang/&quot;&gt;subscribe&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Did you want to know how a vocoder works? (You know, that thing Newcleus used to put the robot voice in their songs.)&lt;/p&gt;
&lt;p&gt;Assuming you said yes, you’re in luck! I have a &lt;a href=&quot;https://jimkang.com/channel-vocoder&quot;&gt;step-by-step walkthrough&lt;/a&gt; that explains how the original vocoder worked right here:&lt;/p&gt;
&lt;h2 id=&quot;https-jimkang-com-channel-vocoder&quot;&gt;&lt;a href=&quot;https://jimkang.com/channel-vocoder&quot;&gt;https://jimkang.com/channel-vocoder&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;
And after you’re done going through the walkthrough, there’s a New Game+ so to speak, in which you can just use the web app as a vocoding tool.&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;This kind of vocoding produces some pretty rough stuff, though. I tried for a few hours, and I could not find a way to use it in a composition. (Contemporary sources report than Homer Dudley’s original vocoder was fairly harsh, too.)&lt;/p&gt;
&lt;p&gt;Still, I was &lt;em&gt;thrilled&lt;/em&gt; to get something going that could produce the recognizable (if not intelligible) combination of a pitched signal and an unpitched speech signal, and I look forward to attempting to make a slicker vocoder. (And then possibly a weirder vocoder.)&lt;/p&gt;
&lt;h2 id=&quot;more-modulation-&quot;&gt;More modulation!&lt;/h2&gt;
&lt;p&gt;This &lt;a href=&quot;https://jimkang.com/channel-vocoder&quot;&gt;channel vocoder explainer&lt;/a&gt; is a followup to &lt;a href=&quot;https://jimkang.com/weblog/articles/miscellaneous-findings-008/&quot;&gt;this finding&lt;/a&gt; on modulation in general. And all of these efforts are a part of my attempt to learn about signal processing during my time at the &lt;a href=&quot;https://recurse.com/&quot;&gt;Recurse Center&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I’ve really enjoyed the Recurse Center so far. Ironically, I can’t write about that right now because it tires me out.&lt;/p&gt;
&lt;h2 id=&quot;songs-collected&quot;&gt;Songs, collected&lt;/h2&gt;
&lt;p&gt;One more small note before my writing juice runs out: I put together a &lt;a href=&quot;https://jimkang.com/music/&quot;&gt;site that collects my “weekly” songs&lt;/a&gt;. &lt;a href=&quot;https://jimkang.com/music/rss/index.rss&quot;&gt;It also has an RSS feed.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Even though I fell off the weekly thing, when I was doing it, it was good for the spirit and for the composing muscles, regardless of the quality of the output, which varied wildly. I hope to get back to it once Recurse is over.&lt;/p&gt;
&lt;p&gt;I hope your haps are good. You should email some haps to me, in fact!&lt;/p&gt;
&lt;p&gt;Excelsior,&lt;br&gt;Jim&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Miscellaneous Findings VIII: Modulation</title>
      <link>http://jimkang.com/weblog/articles/miscellaneous-findings-008/</link>
      <pubDate>Sun, 08  Aug 2021 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/miscellaneous-findings-008/</guid>
      <author></author>
      <description>&lt;p&gt;This edition is brought to you by the start of my stint at the &lt;a href=&quot;https://recurse.com/&quot;&gt;Recurse Center&lt;/a&gt;! One of my goals for my time at the Recurse Center is to learn more about signal processing, and I started by finding out how modulation works.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This is a roundup of miscellaneous things that I’ve found out about (or have rediscovered).&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; I take notes on findings regularly, and I put the findings that translate well to speech on my podcast, &lt;span style=&quot;text-decoration: underline&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://jimkang.com/smallfindings/&quot;&gt;Small Findings&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;. The rest (which are often technical findings), I put here. They’re not always written up for maximum comprehension as a blog post, but if anything is hard to understand, please &lt;a href=&quot;mailto:jimkang@fastmail.com&quot;&gt;email me&lt;/a&gt; if you need clarification.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Music for the Twelve</title>
      <link>http://jimkang.com/weblog/articles/music-for-the-twelve/</link>
      <pubDate>Tue, 20 Jul 2021 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/music-for-the-twelve/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;em&gt;This was also sent out as a &lt;a href=&quot;https://tinyletter.com/jimkang/&quot;&gt;newsletter&lt;/a&gt;. If you’d like to get project updates like this as email, you can &lt;a href=&quot;https://tinyletter.com/jimkang/&quot;&gt;subscribe&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I have made a nearly two-hour long album.&lt;/p&gt;
&lt;p&gt;That sounds really long, I know. But consider this: it is a piece of music that represents events that happen 10,000 years to 10&lt;sup&gt;10&lt;sup&gt;10&lt;sup&gt;56&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt; years in the future. It is at least shorter than what it represents!
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The other thing about it is that it’s ambient music. If you’re not familiar with ambient music, it’s music that works even if you don’t pay attention to every second of it.&lt;a href=&quot;#note-1&quot;&gt;*&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So, I recommend that you put it on, and maybe pay attention to the first three minutes in which a lot of attention-getting stuff happens. Then, go about your day, and let the piece play. Sometimes you’ll notice it, sometimes you won’t. Tempo waves will come and go, and you’ll learn about things that will happen long after we’re all dead.&lt;/p&gt;
&lt;p&gt;Here it is on Bandcamp:&lt;/p&gt;
&lt;iframe style=&quot;border: 0; width: 350px; height: 470px;&quot; src=&quot;https://bandcamp.com/EmbeddedPlayer/album=1883077760/size=large/bgcol=ffffff/linkcol=0687f5/tracklist=false/transparent=true/&quot; seamless&gt;&lt;a href=&quot;https://jimkang.bandcamp.com/album/the-sound-of-the-far-future&quot;&gt;The Sound of the Far Future by Jim Kang&lt;/a&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;https-jimkang-bandcamp-com-album-the-sound-of-the-far-future&quot;&gt;&lt;a href=&quot;https://jimkang.bandcamp.com/album/the-sound-of-the-far-future&quot;&gt;https://jimkang.bandcamp.com/album/the-sound-of-the-far-future&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can stream it for free, or buy it if you want the mp3s. (If it you’re currently having any financial discomfort, email me at &lt;a href=&quot;mailto:jimkang@fastmail.com&quot;&gt;jimkang@fastmail.com&lt;/a&gt;, and I’ll get you a free copy, no questions asked.)&lt;/p&gt;
&lt;p&gt;You can also have your browser perform the piece for you “live” here:&lt;/p&gt;
&lt;h2 id=&quot;https-jimkang-com-sound-of-the-far-future-&quot;&gt;&lt;a href=&quot;https://jimkang.com/sound-of-the-far-future/&quot;&gt;https://jimkang.com/sound-of-the-far-future/&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This web app is not as portable as the recording on Bandcamp (and less future-proof), but the nice thing about it is that the piece is slightly different every time you play it. And it has subtitles that tell you the time at which each of these events will happen.&lt;/p&gt;
&lt;p&gt;This piece isn’t for everyone, but I like to imagine there’s around twelve people in the world that would really be into it. I hope those twelve people find it! So, please send this to anyone you think might like it to increase our chances of finding The Twelve.&lt;/p&gt;
&lt;p&gt;Jim&lt;/p&gt;
&lt;p&gt;&lt;b id=&quot;note-1&quot;&gt;*&lt;/b&gt; Though once you’re acclimated to ambient music, it can be rewarding to listen to every note closely. It works both ways!&lt;/p&gt;
&lt;p&gt;Sometimes, this property of ambient music&amp;mdash;that it works with peripheral attention and doesn’t require focal attention&amp;mdash;causes people and corporations to consider it less valuable and not art. This is wrong.&lt;/p&gt;
&lt;h2 id=&quot;bonus-email-content-&quot;&gt;Bonus email content!&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/music-for-the-twelve/bonus-taco.jpg&quot; alt=&quot;Bonus cat for Bonus content&quot;&gt;&lt;/p&gt;
&lt;p&gt;If you want to read even more email, here are the liner notes, which I wrote using my Serious Artist voice:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://jimkang.bandcamp.com/album/the-sound-of-the-far-future&quot;&gt;The Sound of the Far Future&lt;/a&gt; is an ambient concept album about events that scientists postulate will happen in hard-to-fathom amounts of time in the future. These events are famously collected in the Wikipedia article &lt;a href=&quot;https://en.wikipedia.org/wiki/Timeline_of_the_far_future&quot;&gt;The Timeline of the Far Future&lt;/a&gt;. They include the decay of protons, the heat death of the universe, and false vacuum decay.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The events happen between now and 10&lt;sup&gt;10&lt;sup&gt;10&lt;sup&gt;56&lt;/sup&gt;&lt;/sup&gt;&lt;/sup&gt; years from now. In this piece, these amounts of time have been scaled down so that the piece can play these events within the space of two hours. The events are represented as clusters of horns and speech.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The passage of years is represented by two to four vibraphone voices. Their rhythmic, harmonic, and timbral choices become more entropic over time, and their performance becomes wilder. (This was informed by &lt;a href=&quot;http://retiary.org/ls/writings/info_theory_music.html&quot;&gt;Laurie Spigel’s writing&lt;/a&gt; about the application of information theory to composition.) Time pushes tempo and dynamics waves through feels and moods.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Time is the tool that the piece uses to communicate the vastness of the future beyond humanity’s involvement. Events are frequent early on (until about 1 quadrillion years). Because of the limits of scientific prediction and human knowledge, predicted events are sparse beyond that point. The piece takes the listener through the space between these isolated events. The piece and the listener spend time in the present to earn a sense of these vast gulfs of future time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;The piece is played entirely by web browsers. The recording required the horns and vibraphones to be played in separate takes, though one browser can handle a “live” rendition. The &lt;a href=&quot;https://github.com/jimkang/soff/&quot;&gt;source code for the program&lt;/a&gt; that both executes the layers of composition rules and plays the music is available for anyone interested in reading or hacking.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    <item>
      <title>Rappin' at ya</title>
      <link>http://jimkang.com/weblog/articles/rappin-at-ya/</link>
      <pubDate>Sun, 11 Jul 2021 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/rappin-at-ya/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;em&gt;This was also sent out as a &lt;a href=&quot;https://tinyletter.com/jimkang/letters/rappin-at-ya&quot;&gt;newsletter&lt;/a&gt;. If you’d like to get project updates like this as email, you can &lt;a href=&quot;https://tinyletter.com/jimkang/&quot;&gt;subscribe&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;
I know&amp;mdash;we all know&amp;mdash;that it’s been a long time since I rapped at ya. &lt;em&gt;So&lt;/em&gt; long. Over a year.&lt;/p&gt;
&lt;p&gt;So, now I’m rappin’ at ya.&lt;/p&gt;
&lt;p&gt;In that time, I:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Relearned to type on a weird keyboard to avoid pain&lt;/li&gt;
&lt;li&gt;Quit my job because it was using up my life in multiple terrible ways&lt;/li&gt;
&lt;li&gt;Got through a pandemic wave, maybe, like the rest of you? (Hoping there’s no “This user has died” autoreplies to this email.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(I wrote about this stuff in my &lt;a href=&quot;https://tinyletter.com/deathmtn&quot;&gt;personal newsletter&lt;/a&gt; in gruesome detail.)&lt;/p&gt;
&lt;h2 id=&quot;a-tiny-story&quot;&gt;A tiny story&lt;/h2&gt;
&lt;p&gt;I also worked on a few projects when I could. One of them is this animated story piece that I made for Taper, a nifty zine packed with strange bits of web art. Taper is enjoyably disorienting and has a very different texture from the contemporary web. Every piece in Taper is required to be 2048 bytes or less, which is a big factor in the strangeness.&lt;/p&gt;
&lt;p&gt;My piece is about beings that do not have the same osmosed cultural knowledge about dice that we humans in 2021 do:&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;https://taper.badquar.to/6/reconstructing_the_die.html&quot;&gt;Reconstructing the ‘die’&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;To honor the spirit of the zine, I minified&lt;b&gt;&lt;a href=&quot;#note-1&quot;&gt;*&lt;/a&gt;&lt;/b&gt; the code myself, instead of using a standard industrial tool like Rollup or UglifyJS. It feels appropriately handmade that way.&lt;/p&gt;
&lt;p&gt;Keeping it under 2 KB&amp;mdash;that made me sweat. After the core of it was working, every revision felt like stuffing yet another object into a closet so burstingly full of junk that cracking it open the wrong way could drop a bunch of wrenches and bowling balls on my head.&lt;/p&gt;
&lt;p&gt;There were a few things I got out of doing it this way, though. I talked about some things that I learned about minification on &lt;a href=&quot;https://jimkang.com/smallfindings/episodes/who-is-the-robot-now/&quot;&gt;this Small Findings episode&lt;/a&gt;. (It’s near the end; the rest of it is about my experience of getting paid for freelance art.)&lt;/p&gt;
&lt;p&gt;Also, I feel that I would have coded it differently (possibly for the worse) had I been writing it in a normal, readable way.&lt;/p&gt;
&lt;p&gt;But I can’t prove that. Regardless, I appreciate the directness and total intimacy of programming this way. There were no parts of this program for which I had to say, “I don’t know what’s going on here, but I (have to) trust the library I’m using.”&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jimkang/die-mystery&quot;&gt;Here’s the source.&lt;/a&gt; You can see its devolution across commits.&lt;/p&gt;
&lt;p&gt;The piece is in some ways an outgrowth of &lt;a href=&quot;https://jimkang.com/slopcube/&quot;&gt;Slop Cube&lt;/a&gt;, a web app/bot that is always drawing cubes using 2D methods, often wonkily. Whereas Slop Cube draws them instantaneously, the being in Reconstructing draws the die step-by-step because it’s figuring it out as it goes.&lt;/p&gt;
&lt;p&gt;The story draws on human experiences with things they don’t understand. The beings conjecture about how the die works the way we do about the construction of the pyramids.&lt;/p&gt;
&lt;h2 id=&quot;things-i-keep-doing&quot;&gt;Things I keep doing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jimkang.com/smallfindings/&quot;&gt;Small Findings&lt;/a&gt;, the podcast I started back when I last emailed you, has 19 episodes now.&lt;/li&gt;
&lt;li&gt;I keep blogging in &lt;a href=&quot;https://jimkang.com/weblog/&quot;&gt;large&lt;/a&gt; and &lt;a href=&quot;https://smidgeo.com/notes/deathmtn/&quot;&gt;small&lt;/a&gt; formats.&lt;/li&gt;
&lt;li&gt;Here is an &lt;a href=&quot;https://jimkang.com/weblog/articles/dnd-with-a-kid/&quot;&gt;article&lt;/a&gt;  about playing with D&amp;amp;D with a six-year-old, a thing I started doing during the pandemic, along with an &lt;a href=&quot;https://jimkang.com/weblog/articles/dnd-with-a-kid/pom-pom-dungeon/&quot;&gt;adventure module&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://smidgeo.com/bots/&quot;&gt;These bots&lt;/a&gt; continue as always. Hit me up if you want to be on their mailing list, which goes out three times a week.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://smidgeo.com/bots/you-never-see-it-bot&quot;&gt;You Never See It Bot&lt;/a&gt; was a bot I started in December when Katt commented “They call it darjeeling, but you never see it darjeel.” My friend Wayne made the emoji the bot uses to deliver its lines.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I mostly don’t know what you folks have been up to because I’m not on the social medias. So let me know!&lt;/p&gt;
&lt;p&gt;Jim&lt;/p&gt;
&lt;p&gt;&lt;b id=&quot;note-1&quot;&gt;*&lt;/b&gt; Minification is the process of taking JavaScript code and altering so that it still works the same way but is as small as possible so that less stuff has to be downloaded by the user. This comes at the cost of readability; the resulting code is very hard for humans to understand.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Automating the removal of terrible mouth sounds from podcasts</title>
      <link>http://jimkang.com/weblog/articles/automatically-removing-terrible-mouth-sounds/</link>
      <pubDate>Mon, 31 May 2021 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/automatically-removing-terrible-mouth-sounds/</guid>
      <author></author>
      <description>&lt;p&gt;It is important to me to create &lt;a href=&quot;https://jimkang.com/smallfindings/&quot;&gt;Small Findings&lt;/a&gt; episodes that have information that I myself would want to hear. At the same time, for the sake of sustainability, it is also important to keep it cheap in terms of time and effort . That is to say, if it’s too much work, I can’t justify doing it.&lt;/p&gt;
&lt;p&gt;Therefore, I cast aside concerns about slick audio and perfect phrasing and vocal performance.&lt;/p&gt;
&lt;p&gt;Here are two other things I do to keep it small enough to fit into my life:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;style&gt;img { width: 100% }&lt;/style&gt;

&lt;ul&gt;
&lt;li&gt;I record just using my phone without a complex setup or a fixed location. This lets me record a segment wherever I happen to be, whenever I have a few moments of spare time.&lt;/li&gt;
&lt;li&gt;I automate much of the production. A &lt;a href=&quot;https://github.com/jimkang/smallfindings/blob/master/prepare-audio.sh&quot;&gt;shell script&lt;/a&gt; and &lt;a href=&quot;https://github.com/jimkang/smallfindings/blob/master/Makefile&quot;&gt;Makefile&lt;/a&gt; take the m4a files from my phone, normalize them, convert them to the proper formats, concatenate them with the theme music and stings, and make the final mp3. Sometimes, I have to step in to some part of the chain to make a manual edit, but I still save time as a result of the remaining parts being automated.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This saves a lot of time. However, one consequence of recording with a handheld phone is that sometimes I hold it too close to my face and get the dreaded “mouth crackle” in the recording, which can sound distracting at best and gross at worst to the listener.&lt;/p&gt;
&lt;p&gt;Here’s an example.&lt;/p&gt;
&lt;audio src=&quot;/weblog/articles/automatically-removing-terrible-mouth-sounds/mouth-crackle-eq-before.mp3&quot; controls&gt;&lt;/audio&gt;

&lt;p&gt;There are a lot of audio issues that I don’t think are important as people think they are, but this one cannot be ignored.&lt;/p&gt;
&lt;p&gt;To get rid of the crackle, you can either re-record the segment (which makes the podcast too expensive), or you can isolate the frequencies that the crackle lives in, then cut them out with a graphic equalizer. The crackle noise lives in the 6 kHz-12 kHz range. That coincides with the frequency range for perceived brightness in music, but luckily, this is speech, not music.&lt;/p&gt;
&lt;p&gt;To manually cut those frequencies, you can do something like this with a graphic EQ filter.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/weblog/articles/automatically-removing-terrible-mouth-sounds/mouth-crackle-eq.png&quot; alt=&quot;Graphic EQ settings for cutting mouth crackle in Audacity.&quot;&gt;&lt;/p&gt;
&lt;p&gt;However, manually doing this for every segment is laborious. It’s going to make me want to quit the podcast. Fortunately, this can be done via the &lt;a href=&quot;http://sox.sourceforge.net/&quot;&gt;SoX command line program&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here is an example bash script that will run &lt;code&gt;sox&lt;/code&gt; on every file in a directory.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash

for file in meta/before/*.wav
do
  filename=${file##*/}
  sox &amp;quot;${file}&amp;quot; \
    &amp;quot;meta/after/${filename}&amp;quot; \
    equalizer 5k 1.0q -7 \
    equalizer 6.3k 5.0q -20 \
    equalizer 8k 5.0q -20 \
    equalizer 10k 5.0q -20 \
    equalizer 12k 5.0q -20
done
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;sox&lt;/code&gt; commands take an input file, switches (none were used in this example), an output file, and optionally, an effects chain. In the command in the above script, the effects chain is five equalizer filters. Each equalizer clause specifies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The center of the frequencies to be affected&lt;/li&gt;
&lt;li&gt;The width of the band (how far from the center to go)&lt;/li&gt;
&lt;li&gt;The amount to adjust the affected band&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example, this clause, &lt;code&gt;equalizer 6.3k 5.0q -20&lt;/code&gt;, says “take the frequencies in a narrow band (5.0q) around 6.3 kHz and drop them by as much as 20 dB”. So, &lt;code&gt;sox&lt;/code&gt; will drop 20 kHz frequencies by 20 dB, and a little less so for neighboring frequencies.&lt;/p&gt;
&lt;p&gt;(The default bandwidth is 1.0q. The higher the value, the narrower the band. &lt;a href=&quot;http://digitalsoundandmusic.com/chapters/ch7/&quot;&gt;This online book&lt;/a&gt; has some nice graphs of various q values.)&lt;/p&gt;
&lt;p&gt;Again, here’s the terrible mouth crackling clip:&lt;/p&gt;
&lt;audio src=&quot;/weblog/articles/automatically-removing-terrible-mouth-sounds/mouth-crackle-eq-before.mp3&quot; controls&gt;&lt;/audio&gt;

&lt;p&gt;And here it is after running the command to turn those frequencies way down:&lt;/p&gt;
&lt;audio src=&quot;/weblog/articles/automatically-removing-terrible-mouth-sounds/mouth-crackle-eq-after.mp3&quot; controls&gt;&lt;/audio&gt;

&lt;p&gt;It’s now muddier because, as we said, we are reducing the brightness by attenuating those frequencies. However, it is now more listenable, which is the trade-off that we want.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jimkang/smallfindings/blob/9251a9c22e4467757694ceb1aedb4af3e81a77ff/prepare-audio.sh#L29&quot;&gt;Here is my eq command in context.&lt;/a&gt; I bet there are better values I can use, but that’s what I found via ten minutes of experimentation. If you have parameter suggestions, &lt;a href=&quot;mailto:jimkang@fastmail.com&quot;&gt;let me know!&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;plosives&quot;&gt;Plosives&lt;/h2&gt;
&lt;p&gt;The other problem with holding a phone rather than having a mic in a fixed position is that you sometimes get pops from speaking &lt;a href=&quot;https://www.wordnik.com/words/plosive&quot;&gt;plosives&lt;/a&gt; too close to the phone mic. A burst of air really close to a mic is unpleasant to hear in a recording.&lt;/p&gt;
&lt;p&gt;Here’s what that sounds like:&lt;/p&gt;
&lt;audio src=&quot;/weblog/articles/automatically-removing-terrible-mouth-sounds/plosive-before.mp3&quot; controls&gt;&lt;/audio&gt;

&lt;p&gt;Fortunately, there are frequencies we can attenuate to sweep these under the rug, too. Unlike the mouth crackle frequencies, plosive pops live in low frequency bands, around 100-130 Hz, in my estimation. (Note that it’s Hz, not kHz.)&lt;/p&gt;
&lt;p&gt;If we’re going to filter out stuff that low, we might as well get rid of everything else down there, too. Stuff under 80 Hz doesn’t really serve a purpose outside of music. Everything under 20 Hz is unhearable and is essentially a waste of computer energy, so you might as always roll that off.&lt;/p&gt;
&lt;p&gt;Given that, it’s preferable to just say “roll everything off lower than 130 Hz” instead of specifying several individual frequency peaks. And that is exactly what highpass filters are for.&lt;/p&gt;
&lt;p&gt;This sox command tells it to only keep frequencies above 130 Hz:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sox before.wav after.wav highpass 130 4q
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(The &lt;code&gt;4q&lt;/code&gt; says to do a steeper-than-default rolloff.)&lt;/p&gt;
&lt;p&gt;Here’s the clip with the pop again:&lt;/p&gt;
&lt;audio src=&quot;/weblog/articles/automatically-removing-terrible-mouth-sounds/plosive-before.mp3&quot; controls&gt;&lt;/audio&gt;

&lt;p&gt;And here it is after the highpass filter is run:&lt;/p&gt;
&lt;audio src=&quot;/weblog/articles/automatically-removing-terrible-mouth-sounds/plosive-after.mp3&quot; controls&gt;&lt;/audio&gt;

&lt;p&gt;It’s not entirely smooth-sounding now, but it is no longer jarringly percussive.&lt;/p&gt;
&lt;p&gt;So, now you can have scripts deal with both mouth crackling and plosive pops. Enjoy not having to do that yourself!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Miscellaneous Findings VII: Quirks</title>
      <link>http://jimkang.com/weblog/articles/miscellaneous-findings-007/</link>
      <pubDate>Sun, 02 May 2021 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/miscellaneous-findings-007/</guid>
      <author></author>
      <description>&lt;p&gt;There’s one finding about a handy D3 method, and the rest are about quirks, including one that affected getting this weblog, in this edition of Miscellaneous Findings.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This is a roundup of miscellaneous things that I’ve found out about (or have rediscovered).&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; I take notes on findings regularly, and I put the findings that translate well to speech on my podcast, &lt;span style=&quot;text-decoration: underline&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://jimkang.com/smallfindings/&quot;&gt;Small Findings&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;. The rest (which are often technical findings), I put here. They’re not always written up for maximum comprehension as a blog post, but if anything is hard to understand, please &lt;a href=&quot;mailto:jimkang@fastmail.com&quot;&gt;email me&lt;/a&gt; if you need clarification.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Miscellaneous Findings VI: Commands, Pi</title>
      <link>http://jimkang.com/weblog/articles/miscellaneous-findings-006/</link>
      <pubDate>Mon, 26 Apr 2021 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/miscellaneous-findings-006/</guid>
      <author></author>
      <description>&lt;p&gt;This time, in Miscellaneous Findings, we’ve got some command line things, plus a huge Raspberry Pi setup dump, with some related stuff about hard drives and filesystems mixed in.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This is a roundup of miscellaneous things that I’ve found out about (or have rediscovered).&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; I take notes on findings regularly, and I put the findings that translate well to speech on my podcast, &lt;span style=&quot;text-decoration: underline&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://jimkang.com/smallfindings/&quot;&gt;Small Findings&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;. The rest (which are often technical findings), I put here. They’re not always written up for maximum comprehension as a blog post, but if anything is hard to understand, please &lt;a href=&quot;mailto:jimkang@fastmail.com&quot;&gt;email me&lt;/a&gt; if you need clarification.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Art as a service</title>
      <link>http://jimkang.com/weblog/articles/art-as-a-service/</link>
      <pubDate>Mon, 12 Apr 2021 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/art-as-a-service/</guid>
      <author></author>
      <description>&lt;p&gt;I really liked this video essay I saw, and I have some thoughts about it.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;
&lt;a href=&quot;https://www.openculture.com/2021/04/the-decay-of-cinema-susan-sontag-martin-scorsese-their-lamentations-on-the-decline-of-cinema-explored-in-a-new-video-essay.html&quot;&gt;The Decay of Cinema: Susan Sontag, Martin Scorsese &amp;amp; Their Lamentations on the Decline of Cinema Explored in a New Video Essay&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;This past March, Scorsese published an essay in Harper‘s called “Il Maestro.” Ostensibly a reflection on the work of Federico Fellini, it also pays tribute to Fellini’s heyday, when on any given night in New York a young movie fan could find himself torn between screenings of the likes of La Dolce Vita, François Truffaut’s Shoot the Piano Player, Andrzej Wajda’s Ashes and Diamonds, John Cassavetes’ Shadows, and the work of other masters besides. This was early in the time when, as New Yorker critic Anthony Lane puts it, “adventurous moviegoing was part of the agreed cultural duty, when the duty itself was more of a trip than a drag, and when a reviewer could, in the interests of cross-reference, mention the names ‘Dreyer’ or ‘Vigo’ without being accused of simply dropping them for show.”&lt;/blockquote&gt;

&lt;p&gt;I was never much of a cinephile, which is my loss, and I watch less video than average. It feels like everyone is always watching some series or other all the time, whereas I might go a year between TV series. I think I see about two movies a year.&lt;/p&gt;
&lt;p&gt;The essay was striking nonetheless because I feel this has also been happening to music in the age of personalization.&lt;/p&gt;
&lt;p&gt;Everyone has the right to listen to whatever is immediately comfortable, and I’m glad that there are more options that cater to functional sound needs. However, if everyone views themselves as a customer to be satisfied, music culture will die some more, and people will miss out on all sorts of rewarding art.&lt;/p&gt;
&lt;p&gt;A small number of people will always make the music they feel should exist, though they might suffer more to make it with an even tinier audience. The bigger losers from this shift, however, are the people that could have experienced that music but never got the chance because of cultural and business practices.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.openculture.com/2021/04/the-decay-of-cinema-susan-sontag-martin-scorsese-their-lamentations-on-the-decline-of-cinema-explored-in-a-new-video-essay.html&quot;&gt;video essay&lt;/a&gt; makes this point better than I do here; you should watch it and consider the idea that challenge isn’t always bad.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>The web actually breathing usability into old tools</title>
      <link>http://jimkang.com/weblog/articles/web-creating-usability/</link>
      <pubDate>Wed, 17 Feb 2021 19:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/web-creating-usability/</guid>
      <author></author>
      <description>&lt;p&gt;People have been writing software for quite a long time, so natually, there are some amazing, rock-solid old tools out there, like &lt;a href=&quot;https://bost.ocks.org/mike/make/&quot;&gt;make&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Rsync&quot;&gt;rsync&lt;/a&gt;. This extends to diagramming software.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;style&gt;img { max-width: 100%; }&lt;/style&gt;
For years, I’ve used &lt;a href=&quot;https://graphviz.org/&quot;&gt;Graphviz&lt;/a&gt; (created &lt;a href=&quot;https://en.wikipedia.org/wiki/Graphviz&quot;&gt;“before 1991”&lt;/a&gt;), which lets you write a little declarative program that says what nodes connect to what. Then, you run a compiler that makes the diagram. It figures out for you exactly where the circles (or boxes or other shapes) and lines and labels should go.&lt;/p&gt;
&lt;p&gt;Here’s an example program:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;digraph {
  graph [fontsize=12, fontname=Ubuntu, penwidth=3];
  node [fontsize=12, fontname=Ubuntu, shape=circle];
  edge [fontsize=12, fontname=Ubuntu];
  nodesep=3;
  overlap=false;
  root=onEstablishPilesContainer;
  dim=4;
  mode=ipsep;
  sep=0.4
  bgcolor=&amp;quot;#fde725&amp;quot;;

  // Persisters
  PilesPersister -&amp;gt; DeckStore [label=&amp;quot;setPart&amp;quot;];
  PilesPersister -&amp;gt; DeckStore [label=&amp;quot;get&amp;quot;];
  deckIdsPersister -&amp;gt; localStorage [label=&amp;quot;setItem&amp;quot;];
  thingPersister -&amp;gt; localStorage [label=&amp;quot;setItem&amp;quot;];

  // Stores
  DeckCollectionStore;
  DeckStore [shape=doublecircle];
  activeDeckIdentifier;
  PileCollectionStore;
  PileStore [shape=doublecircle];


  // Responders
  onDeckCollectionChange;
  onDeckChange [shape=doublecircle];
  onPileCollectionChange;
  onPileChange [shape=doublecircle];
  onEstablishPilesContainer [shape=doublecircle];

  DeckCollectionStore -&amp;gt; onDeckCollectionChange;
  DeckCollectionStore -&amp;gt; deckIdsPersister [label=&amp;quot;write&amp;quot;];
  activeDeckIdentifier -&amp;gt; onDeckCollectionChange;
  DeckStore -&amp;gt; onDeckChange;
  DeckStore -&amp;gt; thingPersister [style=dashed, label=&amp;quot;write&amp;quot;];
  PileCollectionStore -&amp;gt; onPileCollectionChange;
  PileStore -&amp;gt; onPileChange;
  PileStore -&amp;gt; thingPersister [style=dashed, label=&amp;quot;write&amp;quot;];
  PileCollectionStore -&amp;gt; PilesPersister [style=dashed, label=&amp;quot;write&amp;quot;]


  // Renderers
  RenderDeckCollection;
  RenderDeck [shape=doublecircle];
  RenderPileCollection;
  RenderPile [shape=doublecircle];

  onDeckCollectionChange -&amp;gt; RenderDeckCollection;
  onDeckChange -&amp;gt; RenderDeck;
  RenderDeck -&amp;gt; onEstablishPilesContainer [style=dashed, label=&amp;quot;(one-time)&amp;quot;];
  onEstablishPilesContainer -&amp;gt; RenderPileCollection;
  onEstablishPilesContainer -&amp;gt; RenderPile;

  onPileCollectionChange -&amp;gt; RenderPileCollection;
  onPileChange -&amp;gt; RenderPile;

  // Updaters
  addDeck -&amp;gt; DeckCollectionStore;
  addPile -&amp;gt; PileCollectionStore [label=&amp;quot;add&amp;quot;];
  RenderDeckCollection -&amp;gt; addDeck [style=dashed];
  RenderDeck -&amp;gt; activeDeckIdentifier [style=dashed, label=&amp;quot;setPart&amp;quot;];
  RenderDeck -&amp;gt; DeckStore [style=dashed, label=&amp;quot;setPart&amp;quot;];
  RenderDeck -&amp;gt; DeckStore [style=dashed, label=&amp;quot;del&amp;quot;];
  RenderDeck -&amp;gt; DeckCollectionStore [style=dashed, label=&amp;quot;remove&amp;quot;];
  RenderPileCollection -&amp;gt; addPile [style=dashed];
  RenderPile -&amp;gt; PileCollectionStore [style=dashed, label=&amp;quot;remove&amp;quot;];
  RenderPile -&amp;gt; PileStore [style=dashed, label=&amp;quot;del&amp;quot;];
  RenderPile -&amp;gt; PileStore [style=dashed, label=&amp;quot;setPart&amp;quot;];
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That produces this diagram:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/web-creating-usability/machines.png&quot; alt=&quot;Graphviz diagram&quot;&gt;&lt;/p&gt;
&lt;p&gt;Despite knowing Graphviz, I started that diagram drawing it by hand on an e-ink tablet because I’ve been trying lately do stuff away from the computer as much as possible. It was easier than doing it in the likes of Visio or LucidChart, but every change to the subject of the diagram meant a painful redrawing of the layout. I’m diagramming my app for the purpose of finding problems and ways to reduce the complexity, so being able to update the diagram easily is important. With Graphviz, updating is usually a matter of editing a line or two, then running &lt;code&gt;neato&lt;/code&gt; or &lt;code&gt;dot&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This afternoon, I found &lt;a href=&quot;http://www.mcternan.me.uk/mscgen/&quot;&gt;Mscgen&lt;/a&gt;, a tool specifically for making sequence diagrams. It’s inspired by Graphviz and is more recent (2011), yet is still a command line tool.&lt;/p&gt;
&lt;h2 id=&quot;secret-room-for-improvement&quot;&gt;Secret room for improvement&lt;/h2&gt;
&lt;p&gt;Both of these turn out to have browser ports: &lt;a href=&quot;https://dreampuf.github.io/GraphvizOnline/&quot;&gt;GraphvizOnline&lt;/a&gt; and &lt;a href=&quot;https://mscgen.js.org/?lang=msgenny&quot;&gt;mscgen_js&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I think I saw that GraphvizOnline existed years before, but I dismissed it as some Emscripten stunt. Only after stumbling on it again recently did I realize how powerful it is. It and mscgen_js make two simple additions to their respective original programs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;They put a code editor side-by-side with the program output.&lt;/li&gt;
&lt;li&gt;They run the diagram compiler whenever you stop typing and update the image next to the code.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The result is that you can see changes as you try them. With GraphvizOnline, you can even flip through the different compilers (e.g. the one for hierarchies, the one for cyclic graphs, the one for ring diagrams) in a select control. It’s like flipping through Photoshop blending modes and watching the images update.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/web-creating-usability/graphviz-online.png&quot; alt=&quot;Graphviz Online showing code and diagram, side by side&quot;&gt;&lt;/p&gt;
&lt;p&gt;Without these web apps, to evaluate a change you have to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Edit the diagram code in your text editor.&lt;/li&gt;
&lt;li&gt;Switch to a terminal tab (or open a terminal window in vim) and run a command.&lt;/li&gt;
&lt;li&gt;Look at a separate image-viewing app to see the result.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It’s a long loop, but it’s not so bad that I wiped sweat from my brow and thought “There’s gotta be a better way!”&lt;/p&gt;
&lt;p&gt;But there was! When that loop down is cut down to…&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Edit the code&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;…Graphviz and Mscgen explode up into a new plane of extreme usability.&lt;/p&gt;
&lt;h2 id=&quot;so-javascript-is-good-sometimes-&quot;&gt;So, JavaScript is good, sometimes.&lt;/h2&gt;
&lt;p&gt;There is a lot said lately about too many web pages being saddled with unnecessary code, and rightly so. You do not need JavaScript, much less a React, Vue, or Angular app, for a web page that tells you which doctors are in your insurance network or how to reboot a phone.&lt;/p&gt;
&lt;p&gt;Even forms don’t require much JavaScript, or even none at all. (I can’t tell you how many times I’ve had to go into DevTools in order to delete or force elements to show up in some fragile web app so that I can pay a bill.) There is a case to be made for a &lt;a href=&quot;https://macwright.com/2020/08/22/clean-starts-for-the-web.html&quot;&gt;document-oriented web&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Despite their overapplication, web apps have their place. How else could have GraphvizOnline and mscgen_js have been made?&lt;/p&gt;
&lt;p&gt;Well, the developers could have wrapped the C core of the original code with GUI code for each of the platforms that web browsers support. They’d build around the original code with GTK, Cocoa, Cocoa Touch, MFC (or whatever is state-of-the-art on Windows these days &amp;mdash; WPF?), and several other SDKs.&lt;/p&gt;
&lt;p&gt;They would have distribute to each platform. For Apple platforms, the developers would either have to tell people how to bypass Gatekeeper or maybe buy an Apple Developer Program license, and obtain a certificate. For other platforms, they could get it into a package repository or perhaps just put the binary up somewhere, then proceed to convincing users that they should bother to download and execute their app. (This is quite a bit more work than saying “look at this web site.”)&lt;/p&gt;
&lt;p&gt;Once those hurdles were leapt, the reports that it doesn’t work on particular variants or configurations of users’ OSes would start coming in.&lt;/p&gt;
&lt;p&gt;This, by the way, is why I empathize with complaints about Electron apps taking up a ton of memory, while still being glad that it exists.&lt;/p&gt;
&lt;p&gt;Big companies like Salesforce (who now make Slack) and Microsoft (who make VS Code) can actually afford to make a native version of their apps for every platform. (Though attempts to herd them all could lead back to either a large and inefficient shared core or &lt;a href=&quot;https://en.wikipedia.org/wiki/Chromium_Embedded_Framework#Applications_using_CEF&quot;&gt;something similar to Electron&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;But that would reduce profits, and Milton Friedman has famously proclaimed that corporations’ sole responsibility is to maximize profit. (And as we all know, Milton Friedman is a god-pharaoh that issues forth waves that &lt;em&gt;compel all to obey&lt;/em&gt; from his sarcophagus underneath the University of Chicago.)&lt;/p&gt;
&lt;p&gt;For smaller companies, indie developers, and people who just want to make something nice for others, it’s hard to imagine better alternatives, except perhaps offline web apps (which aren’t easy for a lot of users to wrap their heads around &amp;mdash; the association between the web and internet connections is strong) or putting all of their proverbial eggs on a specific platform.&lt;/p&gt;
&lt;p&gt;I guess all I’m saying is: Web browsers are (sadly?) the closest we’ve ever gotten to a universal app platform, so I hope we can cut away their many excesses and abuses while keeping that part.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Civilized Bandcamp file unzipping</title>
      <link>http://jimkang.com/weblog/articles/bandcamp-unzip/</link>
      <pubDate>Wed, 17 Feb 2021 19:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/bandcamp-unzip/</guid>
      <author></author>
      <description>&lt;p&gt;Here’s a script that’s handy for unzipping stuff you download from Bandcamp.
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Bandcamp gives you zip files that contain no directory structure. So, the files just unzip to whatever directory you’re in. I have found that to get messy, and I now like an &lt;code&gt;artist-dir/album-dir&lt;/code&gt; structure, like I’m in the year 2000.&lt;/p&gt;
&lt;p&gt;Here’s a script I wrote to unzip Bandcamp zip files into such a structure. It uses the naming scheme of the zip file (&lt;code&gt;&amp;lt;artist name&amp;gt;&lt;/code&gt;-&lt;code&gt;&amp;lt;album name&amp;gt;&lt;/code&gt;) to determine the appropriate directory names.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash

for file in *.zip
  do
    filename=&amp;quot;${file%.*}&amp;quot;
    # Filenames can&amp;#39;t contain /. So, I wonder
    # what Bandcamp would do if they had AC/DC?
    unzippath=$(echo &amp;quot;$filename&amp;quot; |sed -e &amp;#39;s/ - /\//&amp;#39;)
    mkdir -p &amp;quot;$unzippath&amp;quot;
    unzip &amp;quot;$filename&amp;quot; -d &amp;quot;$unzippath&amp;quot;
  done
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It will run on all of the zip files in the working directory. You’ll end up with your mp3 files in directory structures like &lt;code&gt;Chaucerian Myth/The Canterbury Tales&lt;/code&gt; now.&lt;/p&gt;
&lt;p&gt;&lt;hr&gt;&lt;/p&gt;
&lt;p&gt;&lt;blockquote&gt;Here, we’re about to drift away from that tiny script into background story space! I feel like a guy that responds to “Where is the nearest gas station?” with a long explanation of local zoning policy and their own personal journey away from fossil fuels to a house powered entirely with solar panels. (I actually would like solar panels, BTW.)&lt;/p&gt;
&lt;p&gt;Unlike that guy, however, there is no way I’ll notice if you just close the tab now!&lt;/blockquote&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;This has come up because I’ve been increasingly enjoying &lt;a href=&quot;https://bandcamp.com/&quot;&gt;Bandcamp&lt;/a&gt; over the last few years, but now I’m all in on them.&lt;/p&gt;
&lt;p&gt;I’ve usually used their streaming service, but lately I’ve been downloading albums from them and importing them into &lt;a href=&quot;https://plex.tv/&quot;&gt;Plex&lt;/a&gt; to play. (I like it because lets me stream from my Raspberry Pi at home to my phone. The Bandcamp app also lets you stream to your phone but only with music you’ve bought on Bandcamp.)&lt;/p&gt;
&lt;p&gt;At first, I thought I’d dump all of my files into one directory and let Plex use ID3 tags to organize them, but you still have to get into the files sometimes, and a 4,000-file directory is total hell. Via Bandcamp purchases and CD rips (weird, I know), this pile is growing again after being frozen for half a decade and needs a little structure.&lt;/p&gt;
&lt;p&gt;I think I like this way of listening to and acquiring music, as backwards as it sounds, because I tend to consider each album more fully and give each one more of a chance, either because I bought it directly or I once bought it long ago and now have put in the work to rip a CD. And in the cases when I buy from a label-less artist, I provide magnitudes more financial compensation to the artist than I would via any streaming service.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>D&amp;D with a kid</title>
      <link>http://jimkang.com/weblog/articles/dnd-with-a-kid/</link>
      <pubDate>Mon, 15 Feb 2021 19:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/dnd-with-a-kid/</guid>
      <author></author>
      <description>&lt;p&gt;Last Wednesday, I played Dungeons and Dragons with my six-year-old kid. It went surprisingly well!
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Here’s the D&amp;amp;D module I wrote for Wednesday’s game:&lt;/p&gt;
&lt;h2 id=&quot;pom-pom-dungeon&quot;&gt;&lt;a href=&quot;http://jimkang.com/articles/dnd-with-a-kid/pom-pom-dungeon/&quot;&gt;Pom Pom Dungeon&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It was designed for a single, six-year-old player who’s never played a role-playing game and likes physicas objects. Maybe it could work for someone outside of that description? It’s worth a look, even if you have a grown-up potential older player, I say.&lt;/p&gt;
&lt;p&gt;What follows in this post, though, is a recap of the playthrough of that module.&lt;/p&gt;
&lt;h2 id=&quot;recap&quot;&gt;Recap&lt;/h2&gt;

&lt;p&gt;Last Tuesday, we had a snow day, R. did not go to school, and we spent all day inside with no plan. Those days can be exhausting. And the next day after that was another day of from school. So, I decided we needed a plan for that day, and that plan was D&amp;amp;D.&lt;/p&gt;
&lt;p&gt;My normal grown-up D&amp;amp;D group, as you might expect, has not played since the start of the pandemic. So, why not exercise some &lt;abbr title=&quot;Dungeon Mastering; conducting a D&amp;D game&quot;&gt;DMing&lt;/abbr&gt; skills? I know my friend James has run D&amp;amp;D for his kid, and although I think he’s in third or fourth grade, it went well. I’ve been listening to the &lt;a href=&quot;https://anchor.fm/thoughteater&quot;&gt;Thought Eater podcast&lt;/a&gt; lately, and, Froth, the host, mentions that he plays one of the Star Wars RPGs with his family.&lt;/p&gt;
&lt;p&gt;So, while R. and Katt worked on a light-up Lego-like project, I sketched out an adventure that morning, scrouged for props to use in the game, then ran the adventure after lunch.&lt;/p&gt;
&lt;p&gt;The adventure is built around this yellow monster, Zoom, who R. got years ago as a party favor at some birthday party. He’s built a Magnatile house for him and the other finger puppet monsters and has built a small legendarium around them over the last few years. Zoom is the &lt;abbr title=&quot;Player character&quot;&gt;PC&lt;/abbr&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/dnd-with-a-kid/monster-family.jpg&quot; alt=&quot;Zoom, WOM, and Betty&quot;&gt;&lt;/p&gt;
&lt;p&gt;Since playing a role-playing game involves a lot of things that are new to a kid already, I wanted to keep things as tangible as possible. So, I sourced physical objects to represent every object in the game. (In my regular grown-up game, we use largely abstract pieces on a grid mat to clarify character positions and don’t represent other objects.)&lt;/p&gt;
&lt;p&gt;The rooms in the dungeon were represented with these really nice Dwarven Forge tiles (that were meant to be floors in cottages) that my D&amp;amp;D group got for me a few years ago. I only had two door pieces, so when there were more than two doors in a room, I had to say “pretend this is another door” which turned out to be fine.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/dnd-with-a-kid/pom-pom-dungeon/tiles.jpg&quot; alt=&quot;Tiles&quot;&gt;&lt;/p&gt;
&lt;p&gt;I started a character sheet that just had Zoom’s name, the fact that he was a Level 1 Monster, that he can fly for a round once per day, and the six attributes: Strength, Dexterity (“how good you are at controlling your body”), Constitution (“how healthy you are”), Intelligence (“how good you are at solving problems”, Wisdom (“how good you are at making good decisions”), Charisma (“how good you are at getting other people to listen to you”). I had him roll &lt;abbr title=&quot;3 six-sided dice&quot;&gt;3d6&lt;/abbr&gt; for each, add them together, then write them down. The nice thing about players with no expectations is that ability score penalties are no big deal to them.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/dnd-with-a-kid/pom-pom-dungeon/character-sheet.jpg&quot; alt=&quot;Zoom&amp;#39;s character sheet&quot;&gt;&lt;/p&gt;
&lt;p&gt;I kicked off the adventure proper by throwing a paper airplane to Zoom. R. unfolded it without any hints and found a letter from &lt;abbr title=&quot;Winged Orange Monster&quot;&gt;WOM&lt;/abbr&gt; (a fellow finger puppet monster). WOM wrote that he was captured by the Pom Pom Monster who wanted his &lt;abbr title=&quot;Pom poms are colorful little cotton-ball-like things&quot;&gt;pom pom&lt;/abbr&gt;. WOM was being flown to the Pom Pom Dungeon as he wrote. He pled for help from Zoom.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/dnd-with-a-kid/pom-pom-dungeon/reading-note.jpg&quot; alt=&quot;Letter from WOM&quot;&gt;&lt;/p&gt;
&lt;p&gt;Any time I design an adventure for anyone of any age, I get this fear that the hook is going to be ignored. The PCs can always “whatever” the call to adventure, which happened to me a few times in my high school days. When this happens, you’ve got to come up with a way on the spot to get them to what you’ve designed.&lt;/p&gt;
&lt;p&gt;Thankfully, this didn’t happen. Zoom went straight from the Monster House to Pom Pom Dungeon and went in.&lt;/p&gt;
&lt;p&gt;The first encounter was a room with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;One exit other than the entrance&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Busytown#Minor_characters&quot;&gt;Pig-Will&lt;/a&gt; with a pom pom&lt;/li&gt;
&lt;li&gt;A goon telling Pig-Will that he’d beat him up if he didn’t give up the pom pom to the Pom Pom Monster.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(The creatures I term “goons” here are goblin/orc sorts of creatures.)&lt;/p&gt;
&lt;p&gt;I asked R. what he wanted Zoom to do. Surprisingly, he had an answer right away&amp;mdash;to bite the goon. He moved Zoom right up to the goon figure to chomp. That’s when I introduced the concept of turns. When more than one creature wants to do something in this game, we roll initiative to decide who gets to do their thing first.&lt;/p&gt;
&lt;p&gt;I moved Zoom back to the entrance, then we rolled initiative. R. won. I said he could move once and do one other thing, then it would be the other guys’ turns. He made his attack roll. (I gave out the opponent’s AC so we could get some greater than/less than/equal to practice in.) Because I decided that bites do 1d3 damage, I had to present the awkward explanation of how we don’t actually have a three-sided die, and so here is how we use a six-sided die to emulate one. (It turned out to not be that hard to understand.)&lt;/p&gt;
&lt;p&gt;Zoom took some damage in that battle. I explained that if his hit points got subtracted all the way down to zero, that Zoom would get knocked out, and the enemies might drag him outside of the dungeon and then he’d have to start all over again. R. made no reaction. He had Zoom continue the biting until the goon was knocked out. (It doesn’t make sense that biting would knock a guy out instead of killing him, but we both accepted it.)&lt;/p&gt;
&lt;p&gt;Then, Zoom picked up the stick. I was surprised that R. had him ask Pig-Will “What’s going on?” relieving me of having to hint heavily that he should talk to &lt;abbr title=&quot;Non-player character&quot;&gt;NPC&lt;/abbr&gt;s. But now that I think about it, it’s the first thing R. asks every time he joins a Zoom (the video meeting service) call.&lt;/p&gt;
&lt;p&gt;Pig-Will told him that the Pom Pom Monster and the goons had raided Pom Pom Town. They captured both pom poms and citizens and took them to Pom Pom Dungeon. Pig-Will thanked Zoom for the rescue, then walked out of the dungeon with his pom pom.&lt;/p&gt;
&lt;p&gt;(I didn’t know what pom poms were before this year. They’re basically colorful cotton balls.)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/dnd-with-a-kid/pom-pom-dungeon/pom-poms.jpg&quot; alt=&quot;Pom poms&quot;&gt;&lt;/p&gt;
&lt;p&gt;The next encounter was in a room with a fireplace in which I had hidden a golden fire helmet (which of course would grant protection against fire). There was a stone and a ladder going to the next floor.&lt;/p&gt;
&lt;p&gt;R. did get the stone, but then immediately took the exit to the next floor. I actually have no idea why I thought someone who had never played D&amp;amp;D would think to inspect a fireplace.&lt;/p&gt;
&lt;p&gt;In general, R. was very much into exits from rooms. Every time I mentioned an exit, he’d say, “I’ll go in there!” Then, I’d say, “But wait, there’s more!”&lt;/p&gt;
&lt;p&gt;I only had four pre-designed rooms. &lt;a href=&quot;http://jimkang.com/articles/dnd-with-a-kid/pom-pom-dungeon/index.html#encounter-random&quot;&gt;All of the other rooms were generated during play by rolling&lt;/a&gt; on five tables: one for the shape of the room, the number of exits, the kinds of exits, the items in the room, and the NPCs in the room. The &lt;abbr title=&quot;First Edition Advanced Dungeons and Dragons&quot;&gt;1E AD&amp;amp;D&lt;/abbr&gt; Dungeon Master’s Guide had an appendix about generating random dungeons. I always thought that would make the game a bit more playful for the DM, if at the cost of a less well-designed dungeon. Here, I wasn’t exactly sure what a well-designed dungeon would be, so I gave it a shot.&lt;/p&gt;
&lt;p&gt;With a player that is interested in covering the map quickly, it got a bit frantic, but fortunately, for whatever reason, he waited patiently while I rolled. (He did try to peek behind my screen a bunch of times, though.)&lt;/p&gt;
&lt;p&gt;A level down, he ran into a goon and &lt;a href=&quot;http://jimkang.com/articles/dnd-with-a-kid/pom-pom-dungeon/index.html#wooper&quot;&gt;Wooper&lt;/a&gt;. The goon was trying to take Wooper’s pom pom. Zoom pushed the goon down a hole to the level below, and lost a bit more &lt;abbr title=&quot;Hit points&quot;&gt;hp&lt;/abbr&gt; in the process. Then, he helped clueless Wooper back up the ladder and guided him all the way back to the entrance of the dungeon.&lt;/p&gt;
&lt;p&gt;As they went by the fireplace, I couldn’t resist having Wooper&amp;mdash;as out of character as it was&amp;mdash;mention that there was something odd about the fireplace. That heavy-handed clue had no effect; R. was singularly focused on escorting Wooper out.&lt;/p&gt;
&lt;p&gt;On his way back into the dungeon, he ran into another goon, who bonked away the last of Zoom’s hit points. He passed out and woke up in a &lt;a href=&quot;http://jimkang.com/articles/dnd-with-a-kid/pom-pom-dungeon/index.html#jail&quot;&gt;jail room&lt;/a&gt; with all of his stuff gone. The stuff consisted of a stick, a stone, and I think maybe a pom pom, but R. felt it was consequential.&lt;/p&gt;
&lt;p&gt;The jail’s only exit was a small window that looked out onto a hallway with a single guard, who was a goon that was (of course) especially stupid. After Zoom yelled some nonsense at the guard, the guard announced that he was going to go to the bathroom.&lt;/p&gt;
&lt;p&gt;When he came back, I asked what Zoom was going to do, and R. said he was going to kick the window, which I guess is an intuitive thing to do in a jail cell? I told him that it was loosening the window frame. The guard yelled at him to stop. R. said he was going to kick it some more.&lt;/p&gt;
&lt;p&gt;I dropped a very unsubtle DM &lt;em&gt;Are you sure?&lt;/em&gt;&amp;mdash;did he want to do it now or wait to see if the guard went to the bathroom again? He opted to wait, kicked out the window frame, then escaped through the hole to adventure again, this time with 3 out 8 hp.&lt;/p&gt;
&lt;p&gt;Eventually, he got to a hole without a ladder. Instead of searching for ladders in other rooms, he just used his once a day flying power. I thought &lt;em&gt;oh no don’t waste it on that&lt;/em&gt;, but you know, it did solve a problem. Older players commonly have the opposite problem: Holding an item or ability for some greater need in the future so tightly that they never actually use it.&lt;/p&gt;
&lt;p&gt;Soon after, he came across a medkit. I had him make a Wisdom check to figure out what it was, but in retrospect, what would I have done if he had failed the check? Probably just let him attempt it again until he made it, which would have made it pointless.&lt;/p&gt;
&lt;p&gt;He got the rest of his hp back. He kept the used medkit container, and from then on, he treasured all medkits. He said that medkits were his favorite item in the game.&lt;/p&gt;
&lt;p&gt;In the next hallway, he ran into Ninja. Interestingly, R. asked if he was friendly, pointing out that his face looked friendly. (I happened to use a Lego head with happy eyebrows when snapping together the Ninja minifig.) I wanted to encourage this kind of non-hostile inquiry as a first reaction, but I had imagination failure about what Friendly Ninja would be like. So, I just said that it was a really good question and stuck with Ninja’s pre-designed personality.&lt;/p&gt;
&lt;p&gt;Ninja demanded that Zoom give him something, like the medkit. Zoom replied that it was empty, so Ninja demanded the stick (which Zoom had picked up a room or so ago). Zoom refused and so battle was joined.&lt;/p&gt;
&lt;p&gt;R. wanted to Zoom bite, but took my suggestion to try the stick, which did damage with a d6 instead of a d3. The significance of this didn’t really land, and he prefers biting. This is kind of pure.&lt;/p&gt;
&lt;p&gt;This is not too different from my grown-up D&amp;amp;D group. Being adults, they realize certain weapons are statistically superior to others. However, most them started playing as adults, just four years ago (I started as a teen). So, they’re into the “role-playing and doing weird things” side of D&amp;amp;D, and will sometimes use a less damaging weapon or tactic just for fun.&lt;/p&gt;
&lt;p&gt;(Extremely specious theory: Min/maxing and power gaming are somehow the fault of puberty.)&lt;/p&gt;
&lt;p&gt;After taking a shot from the stick, Ninja successfully grabbed the stick and broke it while trying to wrest it from Zoom. Each of them ended up with half a stick. Satisfied with his material gain, Ninja tossed down a smoke bomb the next round, and both parties left the room.&lt;/p&gt;
&lt;p&gt;I was waiting for a good time to reveal the other two pre-designed encounters, but I felt like he should stack up some items before that, so I kept rolling out the random rooms. I was worried that R. would get bored, but he was surprisingly riveted by every new room.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/dnd-with-a-kid/pom-pom-dungeon/skull-jones.jpg&quot; alt=&quot;Skull Jones&quot;&gt;&lt;/p&gt;
&lt;p&gt;A few rooms later, the random NPC table coughed up the peddler, Skull Jones. For a floating skull, Skull Jones had a ridiculously large inventory which included a sword, a Wand of Wonder, and The Claw. All three of these made no impression. The Claw was a big “meme” in our house the day before; we played “claw tag” in which the person who was “it” was deemed “The Claw” and had to get the others with their hand in a claw posture.&lt;/p&gt;
&lt;p&gt;It didn’t seem to matter. Zoom just bought a single medkit and moved on.&lt;/p&gt;
&lt;p&gt;I &lt;em&gt;think&lt;/em&gt; he very soon got to the Cube Wall, one of the pre-designed encounters, but my recollection is blurry here. It’s a tall wall made of 15 cubes, each of which has a door. You need either or a ladder to reach the higher doors. Serendipitously, Skull Jones had appeared in this room, too. Zoom perused his inventory, then bought a tall ladder with his last remaining bag of gold.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/dnd-with-a-kid/pom-pom-dungeon/at-the-wall.jpg&quot; alt=&quot;At the Wall of Boxes&quot;&gt;&lt;/p&gt;
&lt;p&gt;There were two fire traps and three lightning traps among the various treasures behind the doors. He triggered one of each, made his DEX save both times for half damage, then figured out which other doors not to open and cleaned out the rest, gathering many bags of gold, pom poms, and most importantly medkits.&lt;/p&gt;
&lt;p&gt;He used the gold to buy the wand from Skull Jones, though he never used it. It’s too bad because the &lt;a href=&quot;http://jimkang.com/articles/dnd-with-a-kid/pom-pom-dungeon/index.html#wand&quot;&gt;Wand of Wonder&lt;/a&gt; brings a bit of game show into the game that I have a soft spot for.&lt;/p&gt;
&lt;p&gt;Bursting with items, Zoom checked out the adjacent rooms and found that they each had multiple goons in each, so he backed out to the hallway where he ran into…Wooper again!&lt;/p&gt;
&lt;p&gt;It turns out Wooper somehow stumbled back into the dungeon instead of finding his way back to Pom Pom Town after Zoom had taken him to the entrance. R. announced his intention to take Wooper up three levels to let him out again.&lt;/p&gt;
&lt;p&gt;Inwardly, I was like 😨. I think R. very well might have had fun with playing through those rooms again, but I was not feeling that. So, I started looking for ways to squeeze in the boss encounter.&lt;/p&gt;
&lt;p&gt;Zoom and Wooper ended up going through a multi-goon room because R. wanted to see what was in an unexplored exit. The goons demanded Wooper’s pom pom, and Zoom just handed them all of the pom poms he got out of the cube wall. The goons were occupied, and Zoom and Wooper passed peacefully. (I thought it was a fairly smooth move.)&lt;/p&gt;
&lt;p&gt;Finally, they went through a previously unexplored exit, I dropped the last pre-designed encounter there, the Pom Pom Monster’s lair. The Pom Pom Monster is a monster that likes to glue pom poms to itself. It was there with two goons and WOM, who was not feeling well.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/dnd-with-a-kid/pom-pom-dungeon/pom-pom-monster.jpg&quot; alt=&quot;The Pom Pom Monster&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/dnd-with-a-kid/boss-battle.jpg&quot; alt=&quot;Boss battle&quot;&gt;&lt;/p&gt;
&lt;p&gt;I came up with a couple of ways the Pom Pom Monster could be defeated, but R. wasn’t too interested in that. He had Wooper run for the other exit from the room, while Zoom made his Dex save to reduce damage from the Pom Pom Monster’s fire breath, then applied a medkit to WOM.&lt;/p&gt;
&lt;p&gt;WOM thanked Zoom, then mentioned he felt well enough to fly. The next round, the heroes won initiative then ran through the other exit, not bothering to fight the Pom Pom Monster and goons at all.&lt;/p&gt;
&lt;p&gt;The next room was a shaft that went four floors up to the surface. I waited to see if R. would get stuck and end up fighting the bad guys after all. Nope, he asked WOM to fly them out, which he did. Mission accomplished.&lt;/p&gt;
&lt;p&gt;I awarded XP, but I don’t really know what I’m doing in 5E. It looks like &lt;a href=&quot;https://www.dandwiki.com/wiki/5e_SRD:Goblin&quot;&gt;goblins are worth 50 XP?&lt;/a&gt; But it only takes 300 XP to get to level 2?! I guess they really want players to feel like they’re progressing quickly? Maybe the Challenge value somehow changes things? Anyway, I awarded 20 XP per goon defeated or avoided and scaled up from there. I gave 100 XP for healing WOM to escape and 100 for buying off the goons. He ended up with 450 XP; enough to level up.&lt;/p&gt;
&lt;p&gt;That was nearly four hours of total engagement from him, which isn’t easy to get. There are so many things we think he’ll like that he just ends up sliding away from after fifteen minutes. So, this feels like a good discovery.&lt;/p&gt;
&lt;p&gt;I asked him what he liked about the game, and he said that he was proud of getting Wooper out without letting anyone take his pom pom. He also liked biting the goons.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Miscellaneous Findings V: Internet</title>
      <link>http://jimkang.com/weblog/articles/miscellaneous-findings-005/</link>
      <pubDate>Sun, 13 Dec 2020 19:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/miscellaneous-findings-005/</guid>
      <author></author>
      <description>&lt;p&gt;For this round of Miscellaneous Findings, we have things related to the internet, mostly the doings of servers.&lt;br /&gt;&lt;br /&gt;
&lt;em&gt;This is a roundup of miscellaneous things that I’ve found out about (or have rediscovered).&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; I take notes on findings regularly, and I put the findings that translate well to speech on my podcast, &lt;span style=&quot;text-decoration: underline&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://jimkang.com/smallfindings/&quot;&gt;Small Findings&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;. The rest (which are often technical findings), I put here. They’re not always written up for maximum comprehension as a blog post, but if anything is hard to understand, please &lt;a href=&quot;mailto:jimkang@fastmail.com&quot;&gt;email me&lt;/a&gt; if you need clarification.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Miscellaneous Findings IV: Web odds and ends</title>
      <link>http://jimkang.com/weblog/articles/miscellaneous-findings-004/</link>
      <pubDate>Thu, 10 Dec 2020 19:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/miscellaneous-findings-004/</guid>
      <author></author>
      <description>&lt;p&gt;For this round of Miscellaneous Findings, we have a few web dev odds and ends.&lt;br /&gt;&lt;br /&gt;
&lt;em&gt;This is a roundup of miscellaneous things that I’ve found out about (or have rediscovered).&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; I take notes on findings regularly, and I put the findings that translate well to speech on my podcast, &lt;span style=&quot;text-decoration: underline&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://jimkang.com/smallfindings/&quot;&gt;Small Findings&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;. The rest (which are often technical findings), I put here. They’re not always written up for maximum comprehension as a blog post, but if anything is hard to understand, please &lt;a href=&quot;mailto:jimkang@fastmail.com&quot;&gt;email me&lt;/a&gt; if you need clarification.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Things Fall Apart and King of the Hill</title>
      <link>http://jimkang.com/weblog/articles/things-fall-apart/</link>
      <pubDate>Sat, 28 Nov 2020 19:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/things-fall-apart/</guid>
      <author></author>
      <description>&lt;p&gt;I finished reading &lt;u&gt;Things Fall Apart&lt;/u&gt; by Chinua Achebe. It’s a book that’s in high school curriculums (my partner Katt read it in high school), but I just heard about it on a non-profit’s staff page (that I can’t find anymore), oddly.&lt;/p&gt;
&lt;p&gt;There’s a personal story in it, as well as a systems story in it.
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The personal story is a well-worn one. Okonkwo is a man in an Igbo tribe in what is now Nigeria. His father was considered a failure, and so he’s motivated to be successful by his clan’s standards. He is firmly in the grip of what we now call toxic masculinity. He is deathly afraid of seeming unmanly and of his sons seeming unmanly. He’s much like &lt;a href=&quot;https://en.wikipedia.org/wiki/Hank_Hill&quot;&gt;Hank Hill&lt;/a&gt;, except he has to fight and kill people instead of extolling the Dallas Cowboys in conversation.&lt;/p&gt;
&lt;p&gt;By now, you’ve probably read and watched many stories about a person who does things because other people think they should. And thus, you know how these things go: Not Well.&lt;/p&gt;
&lt;p&gt;These stories are still compelling to most of us because we see them lived every day. How did Trump stumble into the presidency of the United States, for example? Why is he so cruel? Why does a tech worker feel that they must work at the most dominant and highest-paying companies, despite the harm that they do? Why does Joe Rogan feel the need to take HGH and do testosterone replacement therapy, despite not being an athlete?&lt;/p&gt;
&lt;p&gt;Now, we have to think about what creates the insecurity that drives this. In the case of Okonkwo, it’s a patriarchal culture that values, foremost, being a good warrior and being industrious (specifically, being a successful farmer) but also being generous. Okonkwo dutifully does everything he can to demonstrate these values, much like a corporate employee desperate for a promotion. (And he is explicitly desperate for promotions.)&lt;/p&gt;
&lt;p&gt;His father and his oldest son, which he considers worthless embarrassments, actually have a lot to recommend them when viewed from outside the core values of his clan. His father was an accomplished musician, and his son is a thoughtful kid that enjoys stories and questions village decisions that involve killing. (He’s not unlike &lt;a href=&quot;https://en.wikipedia.org/wiki/Bobby_Hill_(King_of_the_Hill)&quot;&gt;Bobby Hill&lt;/a&gt;.) In a system that had a broader set of values, perhaps Okonkwo would not have this driving shame.&lt;/p&gt;
&lt;p&gt;He admires his daughter for having “manly” characteristics like clear-headedness under pressure. Yet, he can’t openly express this and instead wishes she was born a boy. In a radically different system, perhaps he could have had simply chosen her as his heir.&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;The clan’s system has consequences beyond Okonkwo’s family when the White men arrive, seemingly out of nowhere. (Much like 19th century Korea, which suffered a similar fate, the clan was largely uninterested in outside affairs.) After wiping out a village with superior firepower, the British send Christian missionaries to the other villages in the clan. They preach their religion, which the clan finds alien and outlandish. The White men are ultimately successful, however.&lt;/p&gt;
&lt;p&gt;This is because the clan’s system disenfranchises many of its members. There are people marked as outcasts at birth. Twins are sent to the forest to die. The gods sometimes demand blood sacrifices that seem cruelly unfair. The people that have a problem with this decide to give Christianity a chance. They seed its growth within in the clan.&lt;/p&gt;
&lt;p&gt;Something similar happened in India with Islam. The Hindu caste system designated many people as untouchables. Islam offered these people a chance at equality and dignity, and thus, it caught on. The same can be said of the Nation of Islam and African Americans in the ‘60s.&lt;/p&gt;
&lt;p&gt;(And to use a much lighter and less real example, there was that &lt;a href=&quot;https://kingofthehill.fandom.com/wiki/Three_Coaches_and_a_Bobby&quot;&gt;episode of King of the Hill&lt;/a&gt; in which Bobby Hill got tired of being screamed at by an American football coach and so defected to a soccer team with a “participation trophy”-style coach, to Hank Hill’s horror.)&lt;/p&gt;
&lt;p&gt;When we think about threats to a system or nation, we often think about physical threats, like being outmatched in military technology as the Igbo were in their first encounter with the White men in this book. But inequality within a system is also a significant vulnerability.&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;I mostly discussed tragic big-picture stuff here, so I feel compelled to add: &lt;u&gt;Things Fall Apart&lt;/u&gt; is actually an enjoyable read. It’s not something that you dread reading, despite containing a lot of tragic events. The tone is kind, and the writing gives you a sense of a way of life that is now gone.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>The Spirits of the Founding Fathers</title>
      <link>http://jimkang.com/weblog/articles/founding-fathers/</link>
      <pubDate>Mon, 23 Nov 2020 19:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/founding-fathers/</guid>
      <author></author>
      <description>&lt;p&gt;In the novel &lt;u&gt;Things Fall Apart&lt;/u&gt;, the people in village of Umuofia practice ancestor worship. When it is time for a trial to settle a dispute between two villagers, judges come out dressed as the spirits of the mythical founders of the clan, complete with smoke rising from their masks. Their true identities are obscured, and they are addressed as the spirits they portray.
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Here in the present day United States, a lot of people are fanatical about the founding fathers. They believe we should decide current issues as the founding fathers would have decided, in spite of inconvenient logical consequences. For example, the founding fathers — who lived over 200 years ago — would most certainly bar women, including Amy Coney Barrett, from the Supreme Court.&lt;/p&gt;
&lt;p&gt;The people who scream about the founding fathers are often angry and brandish weapons in public. Obviously, the right thing to do is to appease them. And I believe the best way to do that is this: &lt;strong&gt;A law requiring the &lt;abbr title=&quot;Supreme Court of the United States&quot;&gt;SCOTUS&lt;/abbr&gt; to cosplay as the ghosts of the founding fathers.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Chief Justice must dress and speak as George Washington, except with an oversized head that has a little fog machine in it. The other justices (of all genders, if they’re still allowed on the court) can decide among themselves who will play Adams, Jefferson, Hamilton, and the others. (We might have to go as far down the list as John Quincy Adams.)&lt;/p&gt;
&lt;p&gt;This is it! This is the way forward! This is living our beliefs, or at least the beliefs of the most belligerent among us!&lt;/p&gt;
&lt;hr&gt;


&lt;p&gt;&lt;em&gt;Yes, that’s really it. That’s the blog post. You can close the tab now.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Autocorrelation</title>
      <link>http://jimkang.com/weblog/articles/autocorrelation/</link>
      <pubDate>Sun, 15 Nov 2020 19:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/autocorrelation/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;em&gt;I tried to explain this process on my &lt;a href=&quot;https://jimkang.com/smallfindings/episodes/100000-hot-dogs&quot;&gt;podcast&lt;/a&gt;, Small Findings, but I found that it was just way too hard to do without showing numbers. So, instead, I went through an audio analogy for the process on the podcast and moved the math explanation here.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I looked into autocorrelation a few weeks ago. My friend &lt;a href=&quot;https://blog.hughrawlinson.me/&quot;&gt;Hugh&lt;/a&gt; introduced it to me as a way to detect repeating patterns in words and sounds.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;
There are several autocorrelation algorithms, but like the book &lt;a href=&quot;http://www.whyyouhearwhatyouhear.com/&quot;&gt;Why You Hear What You Hear&lt;/a&gt; says, most people have an innate sense of autocorrelation. They can predict the recurrence of choruses in pop songs. In a city with a grid system, they can tell how often cross streets come up when walking a long way.&lt;/p&gt;
&lt;p&gt;Given an explicit mathematical process, computers can do this, too. They can also go further and can pick out patterns in domains that are beyond human comprehension, like space radiation or subsecond changes in air pressure.&lt;/p&gt;
&lt;p&gt;Now that we know &lt;em&gt;why&lt;/em&gt; we want to autocorrelate, we can get back to what it is. The “auto” part means “self” rather than “automatic”. So it’s not automatic correlation, it’s self-correlation.&lt;/p&gt;
&lt;p&gt;It’s finding out where a list of numbers lines up with itself.&lt;/p&gt;
&lt;p&gt;&lt;hr&gt;
To get a sense of how it’s supposed to work before we get into any numbers, try listening to this audio clip:&lt;/p&gt;
&lt;audio src=&quot;autocorrelation-example-1.mp3&quot; controls&gt;&lt;/audio&gt;

&lt;p&gt;You probably notice a pattern that repeats every three beats.&lt;/p&gt;
&lt;p&gt;&lt;hr&gt;
Now, let’s overlay that clip with a copy of itself that is delayed by one beat.&lt;/p&gt;
&lt;audio src=&quot;autocorrelation-example-2.mp3&quot; controls&gt;&lt;/audio&gt;

&lt;p&gt;You can probably hear that those aren’t very well-coordinated.&lt;/p&gt;
&lt;p&gt;&lt;hr&gt;
Here’s the original overlaid with a copy delayed by two beats.&lt;/p&gt;
&lt;audio src=&quot;autocorrelation-example-3.mp3&quot; controls&gt;&lt;/audio&gt;

&lt;p&gt;Again, not that correlated.&lt;/p&gt;
&lt;p&gt;&lt;hr&gt;
Here’s the original overlaid with a copy delayed by three beats.&lt;/p&gt;
&lt;audio src=&quot;autocorrelation-example-4.mp3&quot; controls &gt;&lt;/audio&gt;

&lt;p&gt;Now, I imagine that sounds fairly correlated to you! Almost like the original clip itself&lt;b&gt;&lt;a href=&quot;http://jimkang.com/articles/autocorrelation/#footnote&quot;&gt;*&lt;/a&gt;&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;So, we’d say that the signal is very correlated with itself at a lag of 3, indicating that it’s likely that there is a pattern that repeats every three beats.&lt;/p&gt;
&lt;p&gt;&lt;hr&gt;
Now, let’s do the same thing, except with numbers, like these:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1 2 3 1 2 3 1 2 3
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We can overlay that with a copy of itself at a lag of 1 like so:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1 2 3 1 2 3 1 2 3
  1 2 3 1 2 3 1 2 3
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can see intuitively that (given the scale) 2 doesn’t correlate with the 1 under it, 3 doesn’t correlate with 2, etc. A computer can’t see that, though. Instead, it can:&lt;/p&gt;
&lt;h3 id=&quot;1-calculate-the-difference-between-each-number-in-the-signal-and-the-average-of-the-signal-b-a-href-footnote-2-a-b-&quot;&gt;1) Calculate the difference between each number in the signal and the average of the signal. &lt;b&gt;&lt;a href=&quot;#footnote-2&quot;&gt;**&lt;/a&gt;&lt;/b&gt;&lt;/h3&gt;
&lt;p&gt;The average is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(1 + 2 + 3 + 1 + 2 + 3 + 1 + 2 + 3)/9 = 2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When we subtract 2 from each number in the signal, we get:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-1 +0 +1 -1 +0 +1 -1 +0 +1
   -1 +0 +1 -1 +0 +1 -1 +0 +1
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;2-multiply-the-vertical-pairs-to-see-how-well-a-number-in-the-signal-correlates-with-the-corresponding-number-in-the-offset-signal-&quot;&gt;2) Multiply the vertical pairs to see how well a number in the signal correlates with the corresponding number in the offset signal.&lt;/h3&gt;
&lt;p&gt;(We’ll ignore numbers that don’t have a correspondent in the other signal for this example.)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   +0 +1 -1 +0 +1 -1 +0 +1
    x  x  x  x  x  x  x  x
   -1 +0 +1 -1 +0 +1 -1 +0
   _______________________
   +0 +0 -1 +0 +0 -1 +0 +0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If the pairs of numbers are both on the same side of the average (greater than 2 or less than two), we’ll get a positive value, which indicates a positive correlation. If they’re on opposite sides of the average, we’ll get a negative value because those two numbers are negatively correlated.&lt;/p&gt;
&lt;h3 id=&quot;3-average-those-together-to-get-a-correlation-score-for-the-lag&quot;&gt;3) Average those together to get a correlation score for the lag&lt;/h3&gt;
&lt;p&gt;Here is our score for a lag of 1:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(0 + 0 + -1 + 0 + 0 + -1 + 0 + 0)/8 = -0.25
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To save precious web page space, I’m not going to go through getting the scores for a lag of 2. I’ll just tell it to you: &lt;strong&gt;-0.4286&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;We’ll go through the process for offset = 3, though. Here’s the original lined up with a copy that lags by 3:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1 2 3 1 2 3 1 2 3
      1 2 3 1 2 3 1 2 3
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Differences with the average:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-1 +0 +1 -1 +0 +1 -1 +0 +1
         -1 +0 +1 -1 +0 +1 -1 +0 +1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Correlation values:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;__ __ __ +1 +0 +1 +1 +0 +1 __ __ __
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The score for this is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(1 + 0 + 1 + 1 + 0 + 1)/6 = 0.66
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Lag scores table:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;code&gt;Lag&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;Score&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-0.25&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;-0.42&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;3&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;+0.66&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The score for a lag of 3 (0.66) is higher than the score for a lag of 1 (-0.25) and higher than the score for a lag of 2 (-0.4286), and all of the other lags except lag = 0 (you can calculate them to check). So, the computer can say the signal most correlates with itself at lag = 3 and guess that there is a pattern every three numbers in that signal.&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;That is one way to calculate autocorrelation, but it is too slow for many of the signal processing situations you might want to use it in. There are many other faster ways, but &lt;a href=&quot;https://etudes.tibonihoo.net/literate_musing/autocorrelations.html&quot;&gt;this way involving the Fourier transform&lt;/a&gt; is explained by Thibauld Nion using Python.&lt;/p&gt;
&lt;p&gt;I followed along with his post in a &lt;a href=&quot;https://github.com/jimkang/autoc/blob/main/meta/autoc-test.ipynb&quot;&gt;Jupyter notebook&lt;/a&gt; and &lt;a href=&quot;https://github.com/jimkang/autoc&quot;&gt;implemented this way of calculating autocorrelation in JavaScript&lt;/a&gt;. An &lt;a href=&quot;https://github.com/MaximilianBuegler/node-autocorrelation&quot;&gt;earlier Node package&lt;/a&gt; did the same, but I implemented it anyway in order to understand it better and to feel more confident about it.&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;&lt;a id=&quot;footnote&quot;&gt;&lt;b&gt;*&lt;/b&gt; I added a tiny bit more lag when overlaying the copy of the clip here, for dramatic effect. If I had overlaid it exactly at three beats, it would sound just like the original clip, except louder, and you’d be like, huh?&lt;/p&gt;
&lt;p&gt;&lt;a id=&quot;footnote-2&quot;&gt;&lt;b&gt;**&lt;/b&gt; This step in which you subtract the average is called “centering the signal” and isn’t strictly necessary, I think.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Take home tests</title>
      <link>http://jimkang.com/weblog/articles/take-home-tests/</link>
      <pubDate>Mon, 05 Oct 2020 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/take-home-tests/</guid>
      <author></author>
      <description>&lt;p&gt;I’m currently &lt;a href=&quot;https://jimkang.com/resume/&quot;&gt;looking at potential new jobs&lt;/a&gt; and started talking to a company that looked like it had potential. They asked me to do a take home test to prove that I was worth interviewing. Ultimately, I said no to that.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;In a take home test for programming positions, the employer gives the candidate instructions to write one or more programs. The amount of time required to write it varies, but is usually over an hour. In this case, the company wanted me to spend four hours on their test.&lt;/p&gt;
&lt;p&gt;This is common in the developer labor market right now. Employers use them, ostensibly, to establish a baseline of competency.&lt;/p&gt;
&lt;p&gt;At the company that I work for currently, this is done by asking developers like me to conduct 50-minute video call interviews. This way, the employer can evaluate baseline technical competence, but the candidate can also ask questions and get a sense of the company. Of course, this costs the company money in the form of developer time. If an employer is not willing to spend that money, take home tests may look appealing to them.&lt;/p&gt;
&lt;h2 id=&quot;invisible-goalposts&quot;&gt;Invisible goalposts&lt;/h2&gt;
&lt;p&gt;I have had a previous poor experience with a take home test. After two nontechnical talks with people at a company, I was given a take home test. I assumed this was the tech screen, and that no one would expect a candidate to work exhaustively on code they can’t use for anything else, for no money.&lt;/p&gt;
&lt;p&gt;So, I made something that definitively met the objective requirements stated in the test, then stopped coding. I explained the pros and cons of my decisions and sent it in.&lt;/p&gt;
&lt;p&gt;The company took a long time to evaluate it. Apparently, they had differing opinions among themselves, and thus, went back and forth a lot on it. (This, by the way, is a sign that the employer did not create any sort of rubric for evaluating this test. Without a rubric, an evaluation of a test just becomes developers doing a Rorschach test of sorts.)&lt;/p&gt;
&lt;p&gt;In the end, I was wrong about it being a tech screen, and because one of my solutions did not perform in constant time, I was eliminated.&lt;/p&gt;
&lt;p&gt;Here’s what I wrote to them:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For your future candidates, I think it would be a good idea if you were clearer in the problem description that a constant time tracking solution is actually what you want and that you will not continue in the process if you don’t provide that. It says “Whatever solution you choose, please note its performance characteristics in your README” and leaves it at that. People that can’t spend that much time on a take home test will likely just deliver something that meets the explicit criteria, assuming it is the equivalent of a tech screen and leave it at that. I appreciate the great amount of consideration that your team put in, however. Good luck in your search!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A friend of mine recently had a similar experience with a different company. They told him not to spend too much time on the take home test they gave him and downplayed the significance. Then, after he sent them a working test that did what the employer, they told him his test was not polished enough.&lt;/p&gt;
&lt;h2 id=&quot;free-labor&quot;&gt;Free labor&lt;/h2&gt;
&lt;p&gt;Four hours is hard for me to come by these days. I initially said I’d try to fit the test in, but a week later, I realized four hours was going to cost me, and there were so many ways I could end up with nothing to show for it.&lt;/p&gt;
&lt;p&gt;In past eras in which I had fewer obligations on my time, I probably would have done the test without a second thought. But what I should have done is respect myself and think about what else I could do with that time. From writing code on one of your own projects to playing with your kid to going on a hike, there are many, many choices that have a higher expected value than doing a take home test for a company. Take home tests have no value other than getting you a chance to interview with that company. (And in most cases, the value of that chance is unknown; you can do the test and find out the company is terrible or that they’re not willing to pay what you’re willing to work for.)&lt;/p&gt;
&lt;p&gt;Of course, all of this only applies if you have other opportunities. If I had no job and few prospects, I’m sure I would keep my mouth shut and try to jump over all sorts of unreasonable hurdles.&lt;/p&gt;
&lt;p&gt;I am privileged enough to be able to look elsewhere if I say no to a take home test. And I think the responsible thing to do with that privilege is to let employers know that it’s not a good idea to make candidates work for free and under opaque judgment.&lt;/p&gt;
&lt;h2 id=&quot;a-not-so-easy-no&quot;&gt;A not-so-easy no&lt;/h2&gt;
&lt;p&gt;A week after I told this employer that I’d see if I could find four hours for their test, they asked me again about it. I realized I wouldn’t find that time any time soon without sacrificing something more important and was forced to corporealize a concrete position about this issue.&lt;/p&gt;
&lt;p&gt;I decided I was against take home tests in this form. But I found it surprisingly hard to tell the company no. I hesitated to write the email, fearing that I’d look arrogant.&lt;/p&gt;
&lt;p&gt;But why don’t companies ever fear looking arrogant when asking people to labor for free?&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Making sure a Firefox add-on is safe</title>
      <link>http://jimkang.com/weblog/articles/making-sure-an-add-on-is-safe/</link>
      <pubDate>Mon, 07 Sep 2020 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/making-sure-an-add-on-is-safe/</guid>
      <author></author>
      <description>&lt;p&gt;A big problem with installing a Firefox add-on or &lt;a href=&quot;https://jimkang.com/weblog/articles/writing-dom-modifying-extensions/&quot;&gt;Chrome&lt;/a&gt; extension is that you have no idea what it does.&lt;/p&gt;
&lt;p&gt;You only know what it &lt;em&gt;says&lt;/em&gt; it does, and you know what permissions you grant it, but the permissions are broad. A lot of add-ons require “Access data for all websites” in order to work. The add-on could be doing anything with that data.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;
Sometimes, the add-on page will link to its source on a web site. That’s all well and good, but &lt;em&gt;how do you know that that’s the same source that’s running&lt;/em&gt; in the installed add-on?&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;This is the process I went through to verify that &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/don-t-fuck-with-paste/&quot;&gt;Don’t Fuck with Paste&lt;/a&gt; does what it says and no more.&lt;/p&gt;
&lt;p&gt;(Don’t Fuck with Paste is an add-on that prevents web sites from inserting garbage into your clipboard when you copy something and stops web sites from preventing you from pasting into fields.)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Go to the cited page with the source and make sure it’s OK. Don’t Fuck with Paste is refreshingly straightforward. &lt;a href=&quot;https://github.com/aaronraimist/DontFuckWithPaste/blob/master/content.js#L2&quot;&gt;It adds an event handler for &lt;code&gt;copy&lt;/code&gt;, &lt;code&gt;cut&lt;/code&gt;, and &lt;code&gt;paste&lt;/code&gt;&lt;/a&gt; that cancels all subsequent event handlers for those events. (Based on the fact that this add-on works, I’m guessing that add-ons get the chance to add event handlers before the page does.)&lt;/li&gt;
&lt;li&gt;Install the add-on. Make sure that you turn “Allow automatic updates off”. If you don’t, then anything that you’ve verified as safe can be replaced with something completely at any time.&lt;/li&gt;
&lt;li&gt;Go to &lt;code&gt;about:support&lt;/code&gt; in Firefox.&lt;/li&gt;
&lt;li&gt;Note the Profile Directory, and open that directory in the terminal or your file navigator.&lt;/li&gt;
&lt;li&gt;Go to the &lt;code&gt;extensions&lt;/code&gt; subdirectory of the Profile Directory.&lt;/li&gt;
&lt;li&gt;Unzip the &lt;code&gt;xpi&lt;/code&gt; file corresponding to your add-on. In my case, I ran: &lt;code&gt;unzip DontFuckWithPaste@raim.ist.xpi -d tmp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Look at the unzipped files. It should match the source. If it doesn’t match the source, it’s probably not safe because the author isn’t being honest (maybe accidentally) about what’s being shipped. You can examine it more closely to see if the differences are harmless if you want, though.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In the case of Don’t Fuck with Paste, the actual add-on code matched the published source. Now, I feel that my clipboard is protected and thing protecting my clipboard isn’t a danger even worse than the threats to my clipboard. At least as of &lt;strong&gt;2020-09-08 (September 9, 2020).&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Svelte impressions</title>
      <link>http://jimkang.com/weblog/articles/svelte-impressions/</link>
      <pubDate>Wed, 12  Aug 2020 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/svelte-impressions/</guid>
      <author></author>
      <description>&lt;p&gt;Here’s a short (30-minute) talk I gave about SvetleJS.
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;where-i-m-coming-from&quot;&gt;Where I’m coming from&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;(Or, if you don’t want me to end with a preposition: From whence I come)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Generally, I eschew JavaScript frameworks. I have had jobs that centered around Backbone and Angular and spent a couple quarters working on an app written in React.&lt;/p&gt;
&lt;p&gt;I’ve come to prefer the use of specific libraries that solve specific problems, like &lt;code&gt;d3-shape&lt;/code&gt; and the like, rather than frameworks that define the structure of the application. I think that &amp;mdash; unless it is an extremely trivial app &amp;mdash; the developer should think through the structure themselves and the app will benefit.&lt;/p&gt;
&lt;p&gt;I first tried Svelte a couple of years ago, when I worked on a project that my colleague &lt;a href=&quot;http://www.alizaaufrichtig.com/&quot;&gt;Aliza&lt;/a&gt; had started in Svelte. I was struck by how little I had to know about it to be productive. After the project ended, though, I didn’t really think that much more about it.&lt;/p&gt;
&lt;p&gt;A few months ago, I started trying Svelte. Today, I gave a talk to some colleagues about it. Here’s the notes. (They’re terse in order to encourage me to actually talk, so if you need any clarifications, email me! &lt;a href=&quot;mailto:jimkang@fastmail.com&quot;&gt;jimkang@fastmail.com&lt;/a&gt;)&lt;/p&gt;
&lt;h1 id=&quot;the-talk&quot;&gt;The talk&lt;/h1&gt;
&lt;h2 id=&quot;how-svelte-started&quot;&gt;How Svelte started&lt;/h2&gt;
&lt;p&gt;About four years ago, Rich Harris at the NYT built the Svelte framework for the NYT audience. Interactivity was necessary for a lot of their features, but any code on their web pages had to be small. It had to work with a vast general audience’s browsers and network connections.&lt;/p&gt;
&lt;h2 id=&quot;philosophy&quot;&gt;Philosophy&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Compiler does the work, not the user’s computer&lt;ul&gt;
&lt;li&gt;No runtime, just generated code&lt;/li&gt;
&lt;li&gt;Usually very small&lt;ul&gt;
&lt;li&gt;React’s runtime is about 140K alone&lt;/li&gt;
&lt;li&gt;Svelte apps I’ve built are consistently around 60K&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Code mostly looks like normal HTML, CSS, and JavaScript&lt;/li&gt;
&lt;li&gt;Doesn’t try to stop the developer from doing things, for the most part&lt;ul&gt;
&lt;li&gt;Feels like it respects developers&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;how-to-use-svelte&quot;&gt;How to use Svelte&lt;/h2&gt;
&lt;h3 id=&quot;svelte-has-components-&quot;&gt;Svelte has components.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;They feel more like mini-web-pages than like components in React or directives in Angular. They’re not unlike Rails partials.&lt;/li&gt;
&lt;li&gt;A component can have JS, CSS, and HTML.&lt;ul&gt;
&lt;li&gt;But they don’t have to have all of those things. You can have a component with just HTML.&lt;/li&gt;
&lt;li&gt;People who are comfortable with HTML and CSS but not with JS can help work on your app.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;If you want just JS, you can just write a standard ES6 module and import it into the component you want to use it in.&lt;/li&gt;
&lt;li&gt;You can have just one component if you don’t like components.&lt;ul&gt;
&lt;li&gt;You can have that one component import modules that render a bunch of DOM elements.&lt;/li&gt;
&lt;li&gt;Touching the DOM from JS is not forbidden. It’s fine.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Compiling components yields:&lt;ul&gt;
&lt;li&gt;JS functions that insert and remove your HTML, as appropriate.&lt;/li&gt;
&lt;li&gt;Scoped CSS. That is, CSS selectors that go under a randomly named class that’s applied to the component’s DOM element.&lt;ul&gt;
&lt;li&gt;That way, the CSS from this component does not affect sibling or parent DOM elements.&lt;/li&gt;
&lt;li&gt;It &lt;em&gt;does not&lt;/em&gt; write everything into a &lt;code&gt;style&lt;/code&gt; attribute. So, your CSS is still respected. You can still have global CSS if it makes sense to organize things that way.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The components are DOM-oriented. If you have an app that is mostly non-visual code, the components don’t help you that much.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;reactivity&quot;&gt;Reactivity&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;No virtual DOM diffs. Direct updates of specific stuff that needs to be updated.&lt;ul&gt;
&lt;li&gt;The stuff that needs to be updated is determined at compile time, not when a user clicks on something.&lt;/li&gt;
&lt;li&gt;Popular reason for this is performance.&lt;ul&gt;
&lt;li&gt;This isn’t important to me, personally.&lt;ul&gt;
&lt;li&gt;I don’t care about performance until there is a noticeable problem.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;However, I do care about programs doing too much stuff.&lt;ul&gt;
&lt;li&gt;The more stuff there is, the more that can go wrong, and the more you have to inspect when it does go wrong.&lt;/li&gt;
&lt;li&gt;Solve problems with no code if possible, or super reliable code, like HTML with no JS.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;what-does-it-generate-&quot;&gt;What does it generate?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Example: &lt;a href=&quot;https://jimkang.com/superflip/&quot;&gt;A simple animated gif maker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/articles/svelte-impressions/example-svelte-bundle.js&quot;&gt;Scroll through unminified bundle as you talk about the code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Svelte utils&lt;ul&gt;
&lt;li&gt;Very plain and straightforward&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Component code&lt;ul&gt;
&lt;li&gt;There’s a single &lt;code&gt;current_component&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;There’s a list of callbacks to call after various events.  - There’s a schedule_update to schedule flush() (and therefore update()) calls.&lt;ul&gt;
&lt;li&gt;Uses a resolved promise’s then() to schedule.&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.strongbrew.io/what-are-schedulers-in-rxjs/&quot;&gt;Promise &lt;code&gt;then&lt;/code&gt; callbacks are run as microtasks&lt;/a&gt;, which go before the macrotasks (which &lt;code&gt;setTimeout&lt;/code&gt; callbacks are run as).&lt;/li&gt;
&lt;li&gt;Svelte itself doesn’t use &lt;code&gt;setTimeout&lt;/code&gt; AFAIK, so it probably intends component updates to go before user setTimeouts.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;There’s a list of dirty components. The dirty components are the ones that need to be updated.&lt;ul&gt;
&lt;li&gt;Updating means to:&lt;ul&gt;
&lt;li&gt;Run pre-update callbacks&lt;/li&gt;
&lt;li&gt;Reset the dirty flag on the component.&lt;/li&gt;
&lt;li&gt;Render the fragment (call the fragments &lt;code&gt;update&lt;/code&gt; method)&lt;ul&gt;
&lt;li&gt;Creates components for &lt;code&gt;each&lt;/code&gt; objects&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Queue up the post-render callbacks for the component&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;init() is when components are mounted. It will call components mount() methods, which will actually create the DOM elements for the component.&lt;/li&gt;
&lt;li&gt;Generated component code is much more readable than most framework code IMO&lt;ul&gt;
&lt;li&gt;Not unlike code you’d write yourself&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Modules&lt;ul&gt;
&lt;li&gt;node_modules&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;User modules&lt;/li&gt;
&lt;li&gt;User components&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;m&lt;/code&gt; function (mount) creates the DOM elements for the component. Looks like a series of &lt;code&gt;insert&lt;/code&gt; and &lt;code&gt;append&lt;/code&gt; calls, plus mount calls to subcomponents.&lt;ul&gt;
&lt;li&gt;These are all also what you’d expect.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;rollup&quot;&gt;Rollup&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;An independent app bundler also started by Rich Harris.&lt;/li&gt;
&lt;li&gt;The tree-shaking is incredible and easy. It’s what actually makes your app small.&lt;/li&gt;
&lt;li&gt;Worth using all the time, even without Svelte.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;when-should-you-use-svelte-&quot;&gt;When should you use Svelte?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;If your app doesn’t do much with the DOM, not worth it.&lt;ul&gt;
&lt;li&gt;Updated a large mostly-audio-and-network only app to use Rollup, but not Svelte. Got about 80% smaller!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;There are some apps I see out there that could just be HTML, CSS, and JS in a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag. Those should be just that.&lt;/li&gt;
&lt;li&gt;If you have an app that already does DOM stuff and works fine. Don’t rewrite. Stop rewriting things in newer frameworks in general, don’t spend your life that way, you won’t live forever.&lt;ul&gt;
&lt;li&gt;Definitely try Rollup, though.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Part of the reason I tried Svelte again is that, if I look for a job as a web developer, I need to be able to point to some framework&lt;ul&gt;
&lt;li&gt;Hiring managers will think you are crazy if you say “frameworks are unnecessary for many of the situations they are used in”. Your foot won’t get in the door&lt;/li&gt;
&lt;li&gt;That said, Svelte isn’t popular&lt;/li&gt;
&lt;li&gt;Funny surprise to me: Svelte’s value for me ends up being purely technical in the end&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Miscellaneous Findings III: Unix text tricks</title>
      <link>http://jimkang.com/weblog/articles/miscellaneous-findings-003-unix-text-tricks/</link>
      <pubDate>Wed, 29 Jul 2020 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/miscellaneous-findings-003-unix-text-tricks/</guid>
      <author></author>
      <description>&lt;p&gt;For this round of Miscellaneous Findings, we have a bunch of ways to mess with text. They all use tools that come with Unix, so they should work without having to install extra junk, if you are working on a Unix-based OS. The last finding, using regexes in &lt;code&gt;sed&lt;/code&gt;, I found particularly useful for converting hundreds of JS files that used CommonJS (e.g. &lt;code&gt;var something = require(&amp;#39;something&amp;#39;)&lt;/code&gt;) to use ES Modules (&lt;code&gt;import something from &amp;#39;something&amp;#39;&lt;/code&gt;)&lt;br /&gt;&lt;br /&gt;
&lt;em&gt;This is a roundup of miscellaneous things that I’ve found out about (or have rediscovered).&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; I take notes on findings regularly, and I put the findings that translate well to speech on my podcast, &lt;span style=&quot;text-decoration: underline&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://jimkang.com/smallfindings/&quot;&gt;Small Findings&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;. The rest (which are often technical findings), I put here. They’re not always written up for maximum comprehension as a blog post, but if anything is hard to understand, please &lt;a href=&quot;mailto:jimkang@fastmail.com&quot;&gt;email me&lt;/a&gt; if you need clarification.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Ecce World</title>
      <link>http://jimkang.com/weblog/articles/ecce-world/</link>
      <pubDate>Fri, 17 Jul 2020 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/ecce-world/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;em&gt;This was also sent out as a &lt;a href=&quot;https://tinyletter.com/jimkang/letters/ecce-world&quot;&gt;newsletter&lt;/a&gt;. If you’d like to get project updates like this as email, you can &lt;a href=&quot;https://tinyletter.com/jimkang/&quot;&gt;subscribe&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Hello. I hope you’re doing OK, despite Conditions. If you’re in the mood, I have some tiny bits of art progress to tell you about!&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;style&gt;
img {
  max-width: 100%;
}
&lt;/style&gt;

&lt;h1 id=&quot;ecce-lake&quot;&gt;Ecce Lake&lt;/h1&gt;
&lt;p&gt;I finished a &lt;strong&gt;&lt;a href=&quot;https://jimkang.com/paintings/jim-paintings-jvbDpkKU.html&quot;&gt;painting&lt;/a&gt;&lt;/strong&gt;. It’s a revision of a &lt;a href=&quot;https://jimkang.com/paintings/jim-paintings-prBJMogt.html&quot;&gt;painting from three years ago&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;july-2017&quot;&gt;July 2017&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://jimkang.com/paintings/media/0D01037C-458F-4AEA-B20B-C33969277500.jpeg&quot; alt=&quot;July 2017&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;july-2020&quot;&gt;July 2020&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://jimkang.com/paintings/media/84C50936-C667-435E-B631-311037592C87.jpeg&quot; alt=&quot;July 2020&quot;&gt;&lt;/p&gt;
&lt;p&gt;I went into this knowing that I could very well ruin it. I wanted to challenge myself to &lt;a href=&quot;https://en.wikipedia.org/wiki/Ecce_Homo_(Mart%C3%ADnez_and_Gim%C3%A9nez,_Borja&quot;&gt;not be afraid of ruining it&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;I did, in fact, learn about a lot of lines I could cross and jump back over again. Unwanted changes can be undone by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scrubbing with a brush that has only water on it.&lt;/li&gt;
&lt;li&gt;Blasting it with the kitchen faucet.&lt;/li&gt;
&lt;li&gt;Painting over it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Many Photoshop tools have an origin in painting, I think.&lt;/p&gt;
&lt;p&gt;There are things you can’t walk back, though. If you paint something over a nice gradient, and you decide you don’t want at that something after a certain amount of time has passed, you might not be able to scrub it off completely. And repainting a nice gradient is daunting. For me, they kind of just happen to land a certain way, and I can’t do the same gradient twice.&lt;/p&gt;
&lt;p&gt;There’s also only so many layers you can scrape back.&lt;/p&gt;
&lt;p&gt;I wrecked the crispness of the mountains, and I never got the tephra exploding out of the volcano to look right. They’re like Mario fireballs. But, at least I know how to depict Mario fireballs now.&lt;/p&gt;
&lt;p&gt;I am happy with the beach and the waves, though, and that took many passes. The tree trunks are what I think worked out best. Crabs aren’t too hard to paint, which is good to find out.&lt;/p&gt;
&lt;p&gt;The composition evolved instead of being designed up front. That felt good and helped this to remain a reliable stress relief activity. If I had planned it, though, I might have made it more flat and tapestry-like, which is perhaps a better fit for the events depicted.&lt;/p&gt;
&lt;p&gt;Using the paint left on the palette at the end of a couple of sessions, I also painted these little paintings.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://jimkang.com/paintings/jim-paintings-nhskSEKM.html&quot;&gt;&lt;img src=&quot;https://jimkang.com/paintings/media/F8825CAD-4EDD-4C14-B5ED-F51400BEEC26.jpeg&quot; width=&quot;300&quot; alt=&quot;Tiny Quadrants&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://jimkang.com/paintings/jim-paintings-jGVsWCis.html&quot;&gt;&lt;img alt=&quot;Yeeeeeeess?&quot; width=&quot;300&quot; src=&quot;https://jimkang.com/paintings/media/CBC5985E-3409-4406-B32C-591FC68C6EC5.jpeg&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;red-union-of-bears-march&quot;&gt;Red Union of Bears March&lt;/h2&gt;
&lt;p&gt;You know a song’s going to be good when it’s introduced as a theme song for a group of NPCs that have appeared twice in someone’s D&amp;amp;D game.&lt;/p&gt;
&lt;p&gt;amirite?!&lt;/p&gt;
&lt;p&gt;With that said, here is that very song:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://soundcloud.com/isilence/the-red-union-of-bears-march&quot;&gt;The Red Union of Bears March&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The NPCs (non-player characters) are, unlike the PCs (the charaters played by actual players), a well-funded group of adventurers. (If you’ve ever played in the AD&amp;amp;D Forgotten Realms campaign setting, they’re much like the Harpers.) Here’s how I described it my email to the players in the game:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Around this time, far away from the PCs and the obelisk, several wealthy parents of the members of the Red Union of Bears got together to fund a celebration of the Red Union of Bears’ accomplishments and of their growth as individuals.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;As part of the celebration, one of the paid organizers commissioned a local hot dog salesman/composer to arrange their theme into a march. The Quenchport Community Orchestra played it at the celebration, which according to the organizers, was a success.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Via NanoStudio 2 (a mobile app), I got some really nice orchestral virtual instruments for about $20. Many of the more percussive instruments sound extremely authentic, and the others can be very convincing when arranged in ensemble. Back around 2004, I remember downloading a comparable collection of virtual instruments. I downloaded the cracked version because it cost about $500 to get a legitimate copy. (Here’s a couple of pieces I used them in, in case you’re wondering: &lt;a href=&quot;https://soundcloud.com/isilence/passacaglia-amin-mix&quot;&gt;Passacaglia&lt;/a&gt;, &lt;a href=&quot;https://soundcloud.com/isilence/empty-city&quot;&gt;Empty City&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Having these orchestral instruments made me feel like I had access to something I shouldn’t have access to, like a cat being allowed into Old Country Buffet.&lt;/p&gt;
&lt;p&gt;After rolling some timpani under trumpet and trombone blats, I imagined myself shaping my silly theme into a really powerful orchestral piece. My ambition inflated. At some point, I aspired to a Mars, Bringer of War or Star Wars kind of power. (R. is really into John Williams, so we’ve been listening to a lot of Star Wars and Jurassic Park lately.)&lt;/p&gt;
&lt;p&gt;I didn’t get there. Instead, I verified that, yes, it is indeed hard to arrange for ten different parts. There’s a lot to think about, and every change is potentially a lot of rethinking and relistening. There was a particular piercing brass punch that I wanted that I didn’t quite reach. Also, I’ve never really worked on singing on pitch, so these were rather challenging vocals for me. Luckily, Katt agreed to get in the mix, and individual vocal accuracy matters a lot less in group vocals.&lt;/p&gt;
&lt;p&gt;I scaled down from simulating a brilliant professional orchestra to simulating a community orchestra or an eager high school orchestra. The piece is more fun this way, and now, despite knowing how involved they are, orchestral pieces seem within my reach.&lt;/p&gt;
&lt;p&gt;Speaking of feeling like you can make music, &lt;a href=&quot;https://soundcloud.com/isilence/sets/unfortunate-day-ep&quot;&gt;I’ve been recording songs R.’s been writing lately&lt;/a&gt;. And I wrote about songwriting and subservience in my &lt;a href=&quot;https://tinyletter.com/deathmtn/letters/no-gods-no-real-songs&quot;&gt;personal life newsletter&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&quot;small-findings-continues&quot;&gt;Small Findings continues&lt;/h1&gt;
&lt;p&gt;Since I last emailed you, I’ve put up five more episodes of the &lt;strong&gt;&lt;a href=&quot;https://jimkang.com/smallfindings/&quot;&gt;podcast&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I really tried to stick to posting a new episode every Monday, but it overwhelmed me. I am forced to admit that I can’t just take whatever notes I wrote that week and just read them out, which was the dream. There’s a big gulf between notes that have down what I want to remember and what is actually readable when read out loud, so I end up having to do quite a bit of script writing and additional research.&lt;/p&gt;
&lt;p&gt;And then, I started to accumulate subject matter so tragic that I didn’t know how to present it respectfully. Talking about a topic like Ahmaud Arbery requires far more consideration than topics like making pizzas. You also have to be more careful and accurate when talking about police murdering people (or really, anyone murdering people).&lt;/p&gt;
&lt;p&gt;These issues, plus audio issues, caused a full-month gap between &lt;a href=&quot;https://jimkang.com/smallfindings/episodes/master-hamfast&quot;&gt;Episode 7&lt;/a&gt; and &lt;a href=&quot;https://jimkang.com/smallfindings/episodes/then-and-now&quot;&gt;Episode 8&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://jimkang.com/smallfindings/episodes/land-of-wonder&quot;&gt;Episode 9&lt;/a&gt; came more easily. It has live segments! My friend Alex and I crossed a weird bridge that we saw the week before. It was surprisingly disturbing. We also sent to the top of a massive parking garage, which turned out to be an interesting place.&lt;/p&gt;
&lt;h1 id=&quot;emojipress&quot;&gt;Emojipress&lt;/h1&gt;
&lt;p&gt;With the help of my friends Toby and Wayne, who are really good at usability and rendering intricate details in CSS, I put together a very specific tool: &lt;strong&gt;&lt;a href=&quot;https://jimkang.com/emojipress/&quot;&gt;Emojipress&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It’s for stamping out those blue-gray square emoji that have text in them. They’re sort of like the candy hearts of emoji. They are specifically shiny and puffy, like everything was during peak Apple around 2012 or so.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/ecce-world/skeuomorphic.png&quot; alt=&quot;Skeuomorphic&quot;&gt;&lt;/p&gt;
&lt;p&gt;If you happened to want to add a bunch of these to some Slack, there you go!&lt;/p&gt;
&lt;h1 id=&quot;maintainance-and-planning&quot;&gt;Maintainance and planning&lt;/h1&gt;
&lt;p&gt;Other than that, I’ve been fixing stuff that’s broken. &lt;a href=&quot;https://jimkang.com/observatory/#view=year&amp;amp;filterMode=some&quot;&gt;Observatory&lt;/a&gt; busted after a GitHub API change. That reminded me that I forgot to figure out what I was going to do with it. My cloud instance’s HD filled up, and I was forced to move on my plans to restructure the way my &lt;a href=&quot;https://smidgeo.com/bots/&quot;&gt;bots&lt;/a&gt;, particularly the image bots, work. Right now, they’re as simple as possible and that means generating content on the cloud instance and storing it there as well.&lt;/p&gt;
&lt;p&gt;Going forward, I’m going to be doing as much as I can from the Raspberry Pi at home and the gigantic HD connected to it. From there, I’m going to back up the HD to a cheap S3-like bucket (Digital Ocean Spaces) on the Internet. This way, I won’t run out of space on my cloud instance, and I’ll always I have a backup.&lt;/p&gt;
&lt;p&gt;I’m hoping to rely on the cloud instance as little as possible. I want it mostly to just serve assets with nginx.&lt;/p&gt;
&lt;p&gt;Unfortunately, most of my bots generate images by taking screenshots of web pages using a headless browser. After spending a few calendar days trying to build Chromium for an ARMv7 processor (so I could run headless Chromium on the Pi), I gave up.&lt;/p&gt;
&lt;p&gt;So, the bots on the Pi get a little help from the cloud instance via &lt;strong&gt;&lt;a href=&quot;https://github.com/jimkang/snapper&quot;&gt;Snapper&lt;/a&gt;&lt;/strong&gt;, a service that takes screenshots of web pages for clients.&lt;/p&gt;
&lt;p&gt;There are various solutions offered by Netlify and AWS that I could use instead of this approach. Due to the way business works (acquisitions, sunsetting, deprecating), I could imagine having to do multiple migrations over the next few decades if I built on those. The only thing I’d bet on being around in ten years is Unix, so I’m trying to avoid getting too much fancier than that.&lt;/p&gt;
&lt;p&gt;–&lt;/p&gt;
&lt;p&gt;And that about covers the past two months, projects-wise. Hopefully, you now know everything you need to know about my projects for the last two months. If there’s anything I should know about your last two months, let me know!&lt;/p&gt;
&lt;p&gt;Jim&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Too many ssh-agents and the keychain</title>
      <link>http://jimkang.com/weblog/articles/too-many-ssh-agents/</link>
      <pubDate>Mon, 29 Jun 2020 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/too-many-ssh-agents/</guid>
      <author></author>
      <description>&lt;p&gt;This is the tale of three really simple and reliable tools, rsync, cron, and keychain, combining to create some confounding emergent complexity.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://linux.die.net/man/1/ssh-agent&quot;&gt;&lt;code&gt;ssh-agent&lt;/code&gt;&lt;/a&gt; is a daemon that holds onto your credentials so that you only have to enter a password once a session. Once you’ve entered your password for your private key once via &lt;code&gt;ssh-add&lt;/code&gt;, &lt;code&gt;ssh-agent&lt;/code&gt; decrypts your private key and holds onto it. Whenever another program needs something to be done with a private key, it asks &lt;code&gt;ssh-agent&lt;/code&gt; to do it. &lt;code&gt;ssh-agent&lt;/code&gt; passes the results of that operation to the client program instead of letting it have the unencrypted private key.&lt;/p&gt;
&lt;p&gt;Some limitations of &lt;code&gt;ssh-agent&lt;/code&gt; are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When the user logs out, &lt;code&gt;ssh-agent&lt;/code&gt; may shut down, and the user will have to run &lt;code&gt;ssh-add&lt;/code&gt; again.&lt;/li&gt;
&lt;li&gt;Cron jobs and other automated processes don’t have access to the agent, and thus, need to find another way to provide credentials for their tasks.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On many Linux distros, there is a &lt;a href=&quot;https://linux.die.net/man/1/keychain&quot;&gt;&lt;code&gt;keychain&lt;/code&gt;&lt;/a&gt; program that will keep the same &lt;code&gt;ssh-agent&lt;/code&gt; running across logins and also publishes information about it so that other programs (including those running in cron jobs) can get at it.&lt;/p&gt;
&lt;h2 id=&quot;scheduling-authentication-requiring-tasks-with-cron&quot;&gt;Scheduling authentication-requiring tasks with cron&lt;/h2&gt;
&lt;p&gt;I was trying to get cron to run a bash script that ran &lt;code&gt;rsync&lt;/code&gt; to copy a directory on a remote machine to a local directory.&lt;/p&gt;
&lt;p&gt;This didn’t work. In the context of the cron job, I kept getting &lt;code&gt;Permission denied (publickey)&lt;/code&gt; from the &lt;code&gt;rsync&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;After sshing into the remote machine to trigger a login and get my password into &lt;code&gt;ssh-agent&lt;/code&gt;, I ran the script directly in the terminal, and it worked without prompting.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Something I forgot (for a while) is that &lt;em&gt;I did not do this in a login shell&lt;/em&gt;. In order to simulate the cron environment, I ran &lt;code&gt;sh&lt;/code&gt;, and ran the script in that shell.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It still failed via cron job, though. I thought that &lt;code&gt;ssh-agent&lt;/code&gt; would have the unencrypted private key it would need at that point, but clearly something was still wrong.&lt;/p&gt;
&lt;h3 id=&quot;the-environment&quot;&gt;The environment&lt;/h3&gt;
&lt;p&gt;In my script, I had a line like this, which I thought would let my script get access to &lt;code&gt;ssh-agent&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;~/.keychain/machinename-sh
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That file, which is generated by &lt;code&gt;keychain&lt;/code&gt;, is a shell script that exports two environment variables:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SSH_AGENT_PID&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SSH_AUTH_SOCK&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The process id and the socket are what programs need to communicate with &lt;code&gt;ssh-agent&lt;/code&gt;. When I echoed those variables in my script, they were empty. When the script ran rsync, I got prompted for credentials. (This is a problem because you can’t be around to enter credentials for most automated tasks.)&lt;/p&gt;
&lt;p&gt;When I updated the script to use &lt;code&gt;source ~/.keychain/machinename-sh&lt;/code&gt;, those variables were filled out and pointed to an existing process and an existing sock file. (I don’t have a good explanation for why &lt;code&gt;source&lt;/code&gt; worked, but running the keychain file as a script didn’t work.)&lt;/p&gt;
&lt;p&gt;However, it still failed with “Permission denied” when I ran it via cron. I was able to log those two environment variables, and they still referred to things that existed.&lt;/p&gt;
&lt;p&gt;After hours of failed attempts to flush out information that could tell me what was going on, I ran &lt;code&gt;ps aux | grep ssh-agent&lt;/code&gt; again. I noticed that &lt;em&gt;the PID of the &lt;code&gt;ssh-agent&lt;/code&gt; that I used from the successful manual run &lt;strong&gt;was NOT from the PID in &lt;code&gt;SSH_AGENT_PID&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ssh-agent&lt;/code&gt; in this env var seemed to not have my key.&lt;/p&gt;
&lt;p&gt;So, I logged out of the host machine in all terminals (I had three), then logged back in, and &lt;code&gt;keychain&lt;/code&gt; ran when I logged in. I then ran &lt;code&gt;ssh-add&lt;/code&gt; to add my key. I made sure there were no other &lt;code&gt;ssh-agent&lt;/code&gt; processes running.&lt;/p&gt;
&lt;p&gt;Then, the script ran via the cron job, and the &lt;code&gt;rsync&lt;/code&gt; command worked. The PID that the script logged matched that of the single &lt;code&gt;ssh-agent&lt;/code&gt; running.&lt;/p&gt;
&lt;p&gt;What I think happened was this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The first time I logged in to the host machine, &lt;code&gt;keychain&lt;/code&gt; ran, but I did not, directly or indirectly, &lt;code&gt;ssh-add&lt;/code&gt; my key.&lt;ul&gt;
&lt;li&gt;&lt;code&gt;keychain&lt;/code&gt; wrote the &lt;code&gt;ssh-agent&lt;/code&gt; PID and socket into &lt;code&gt;~/keychain/machinename-sh&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;I then logged into another terminal, but then start an &lt;code&gt;sh&lt;/code&gt;shell &amp;mdash; &lt;em&gt;a non-login shell which did not run &lt;code&gt;keychain&lt;/code&gt;&lt;/em&gt;.&lt;ul&gt;
&lt;li&gt;There a new &lt;code&gt;ssh-agent&lt;/code&gt; was started.&lt;/li&gt;
&lt;li&gt;My key was added to that one.&lt;/li&gt;
&lt;li&gt;The script ran successfully (when run directly, outside of cron), using that ssh-agent.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;I fixed the script’s importing of the keychain environment variables, but they referred to an &lt;code&gt;ssh-agent&lt;/code&gt; (the first one) that did not have the key added to it.&lt;/li&gt;
&lt;li&gt;When run via cron, the script ran &lt;code&gt;rsync&lt;/code&gt; which asked &lt;code&gt;ssh-agent&lt;/code&gt; to log into the remote server, but the key for it was in a different &lt;code&gt;ssh-agent&lt;/code&gt; process, not that one. So, it failed with &lt;code&gt;Permission denied (publickey)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, make sure you track your &lt;code&gt;ssh-agent&lt;/code&gt;s (try to have only one) and pay attention to &lt;code&gt;ssh-agent&lt;/code&gt; &lt;code&gt;keychain&lt;/code&gt; is pointing clients at.&lt;/p&gt;
&lt;p&gt;#linux #unix #auth #keychain #ssh #cron&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Miscellaneous Findings II</title>
      <link>http://jimkang.com/weblog/articles/miscellaneous-findings-002/</link>
      <pubDate>Wed, 20 May 2020 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/miscellaneous-findings-002/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;em&gt;This is a roundup of miscellaneous things that I’ve found out about (or have rediscovered).&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; I take notes on findings regularly, and I put the findings that translate well to speech on my podcast, &lt;span style=&quot;text-decoration: underline&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://jimkang.com/smallfindings/&quot;&gt;Small Findings&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;. The rest (which are often technical findings), I put here. They’re not always written up for maximum comprehension as a blog post, but if anything is hard to understand, please &lt;a href=&quot;mailto:jimkang@fastmail.com&quot;&gt;email me&lt;/a&gt; if you need clarification.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Miscellaneous Findings I</title>
      <link>http://jimkang.com/weblog/articles/miscellaneous-findings-001/</link>
      <pubDate>Mon, 18 May 2020 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/miscellaneous-findings-001/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;em&gt;This is a roundup of miscellaneous things that I’ve found out about (or have rediscovered).&lt;span class=&quot;more&quot;&gt;&lt;/span&gt; I take notes on findings regularly, and I put the findings that translate well to speech on my podcast, &lt;span style=&quot;text-decoration: underline&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://jimkang.com/smallfindings/&quot;&gt;Small Findings&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;. The rest (which are often technical findings), I put here. They’re not always written up for maximum comprehension as a blog post, but if anything is hard to understand, please &lt;a href=&quot;mailto:jimkang@fastmail.com&quot;&gt;email me&lt;/a&gt; if you need clarification.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Small Findings</title>
      <link>http://jimkang.com/weblog/articles/small-findings/</link>
      <pubDate>Mon, 04 May 2020 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/small-findings/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;em&gt;This was also sent out as a &lt;a href=&quot;https://tinyletter.com/jimkang/letters/small-findings&quot;&gt;newsletter&lt;/a&gt;. If you’d like to get project updates like this as email, you can &lt;a href=&quot;https://tinyletter.com/jimkang/&quot;&gt;subscribe&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Dear Friend,&lt;/p&gt;
&lt;p&gt;I am writing to inform you that during this pandemic:&lt;/p&gt;
&lt;p&gt;[ ] I have made sourdough bread&lt;/p&gt;
&lt;p&gt;[ ] I participated in a video chat version of a traditionally in-person event&lt;/p&gt;
&lt;p&gt;[&lt;strong&gt;x&lt;/strong&gt;] I started a podcast&lt;/p&gt;
&lt;p&gt;And here’s the podcast!&lt;/p&gt;
&lt;h1 style=&quot;text-decoration: underline&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://jimkang.com/smallfindings/&quot;&gt;Small Findings&lt;/a&gt;&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;
You can listen to it via your preferred podcast player, via RSS, or you can just listen to it at that web site.&lt;/p&gt;
&lt;p&gt;It started as a result of coming across Zettelkasten via &lt;a href=&quot;https://github.com/ljcooke&quot;&gt;Liam&lt;/a&gt;. Zettelkasten is a way of taking notes that produces this big web of notes that you can easily walk to recall information. Its inventor was a German sociologist that was really productive. He worked with notecards instead of computers, which were unavailable for most of his career. Essentially, he created a wiki out of paper.&lt;/p&gt;
&lt;p&gt;I’ve tried and quit so many productivity methods over the years. It’s my version of adopting trendy diets or wacky workouts. However, it does seem to be sticking. I don’t really do the linking part of the Zettelkasten, perhaps at my own peril. I use tags, and I search those tags to find things.&lt;/p&gt;
&lt;p&gt;A side effect of doing this is that I feel like I’m absorbing more information and have more information to share. So, I’m sharing it in podcast form! (Well, except for the technical stuff, which mostly does not translate well orally.)&lt;/p&gt;
&lt;p&gt;It’s inspired by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://memex.naughtons.org/&quot;&gt;John Naughton’s simple quarantine diaries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.nytimes.com/column/the-daily&quot;&gt;The Daily&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Erin McKean’s &lt;a href=&quot;https://tinyletter.com/thingslearned&quot;&gt;Things Learned While Looking Up Other Things newsletter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Having to spend a lot of time thinking about podcasts as a utilities&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While I do think that Small Findings has some potential utility, it’s not a utility that gets a specific job done for a particular kind of person. Like almost all of my stuff, no measurement has been done about what people need. It’s not a product, and it could turn out to not meet anyone’s needs. I just like thinking that maybe it can for someone someday.&lt;/p&gt;
&lt;p&gt;(That said, I’d love to hear what you think, even if you hate it!)&lt;/p&gt;
&lt;p&gt;The other thing I get out of making the podcast is that, like painting, it’s more direct than programming. You write, you see what you wrote. You speak, and you hear what you spoke. Even though I have many issues about my vocal delivery, there is a reliability here that I find reassuring.&lt;/p&gt;
&lt;p&gt;There is a bit more pressure than there is in (my form of) painting, though.&lt;/p&gt;
&lt;p&gt;I like podcasts that come out on a regular basis, so I have this goal of putting an episode out every week. I decided I wouldn’t email you folks about it until I could produce one within one week for putting out the previous one. Then, I’d knmow it was real. I finally got close to that with Episode 4. While I’m sure I’ll slip from once a week, I now know that it’s not impossible to hit that.&lt;/p&gt;
&lt;p&gt;I’m not great at this, but much like Dr. Worm, I feel I’m getting better, and I really need that “new skill optimism” these days.&lt;/p&gt;
&lt;p&gt;Oh, also, let me know if there are any small findings you want me to share, or better yet, if you want to be on the podcast to share them directly!&lt;/p&gt;
&lt;p&gt;Jim&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Cat paintings</title>
      <link>http://jimkang.com/weblog/articles/cat-paintings/</link>
      <pubDate>Fri, 17 Apr 2020 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/cat-paintings/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;em&gt;This was also sent out as a &lt;a href=&quot;https://tinyletter.com/jimkang/letters/cat-paintings&quot;&gt;newsletter&lt;/a&gt;. If you’d like to get project updates like this as email, you can &lt;a href=&quot;https://tinyletter.com/jimkang/&quot;&gt;subscribe&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Hello. It’s been a while. Again!&lt;/p&gt;
&lt;p&gt;I know people expect computer art from me. Unfortunately, my programming and design concentration has been shot lately. So, I can’t get those to you at the moment.&lt;/p&gt;
&lt;p&gt;Instead, I’ve got something else for you: physical paintings!
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;
Or photos of physical paintings, at least. And a site for them: &lt;a href=&quot;https://jimkang.com/paintings/&quot;&gt;https://jimkang.com/paintings/&lt;/a&gt; (It has an &lt;a href=&quot;https://jimkang.com/paintings/rss/index.rss&quot;&gt;RSS feed&lt;/a&gt;, in case you’re into that.)&lt;/p&gt;
&lt;style&gt;.article .content img { max-width: 100%; border-radius: 4px; }&lt;/style&gt;

&lt;p&gt;Here is one of Bonus Cat and Dr. Wily sleeping, which is one of their top activities.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://jimkang.com/paintings/jim-paintings-gnwpgUSR.html&quot;&gt;&lt;img src=&quot;bonus-and-wily.jpg&quot; alt=&quot;Bonus and Wily painting&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I don’t know how to capture certain kinds of textures, so the chair and the floor took a long time to paint. There were many Ecce Homo moments.&lt;/p&gt;
&lt;p&gt;I usually let each previous attempt at painting a surface to bleed through in the next attempt. It added some complexity that I felt was satsifying, even when it didn’t help with representational accuracy. I thought of it like using the Fade command instead of Undo in Photoshop.&lt;/p&gt;
&lt;p&gt;There was a night in which I furiously painted the floor over and over again. I made myself stop, but I felt this twitch to paint over it more that carried over into the following day.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;floor-attempts.jpg&quot; alt=&quot;Attempts to paint the floor&quot;&gt;&lt;/p&gt;
&lt;p&gt;After I did a pass of highlights that were more extreme than I expected, I felt regret and immediately wanted to paint over them all. My partner Katt, who actually knows how to paint, told me to not look at it for a week. So, I put it away.&lt;/p&gt;
&lt;p&gt;I lasted two days.&lt;/p&gt;
&lt;p&gt;That turned out to be enough, though! I was then able to view it free of compulsions. I decided it was fine and done.&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;The Bonus and Wily painting above is actually the seventh cat painting in our house. Katt painted three, R. painted two, and I did a Bonus Cat one last year.&lt;/p&gt;
&lt;p&gt;Here’s one of Katt’s.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/cat-paintings/wily-radiator.jpg&quot; alt=&quot;Wily on a radiator next to a painting of that same thing&quot;&gt;&lt;/p&gt;
&lt;p&gt;Here’s one of R.’s.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/cat-paintings/two-cat-friends.jpg&quot; alt=&quot;Two cat friends&quot;&gt;&lt;/p&gt;
&lt;p&gt;We’re quite into cat painting. We will not stop.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.lukepearson.com/Comics/The-Boy-Who-Drew-Cats&quot;&gt;&lt;img src=&quot;boy-who-drew-cats.png&quot; alt=&quot;The Boy Who Drew Cats&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;That said, I am still interested in that other painting genre. I believe it is known as “non-cat paintings”.&lt;/p&gt;
&lt;p&gt;At the end of each of the Bonus and Wily painting sessions, there was some paint left on the palette. I used that paint to make these nine tiny paintings.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://jimkang.com/paintings/jim-paintings-QTzjKEyK.html&quot;&gt;&lt;img src=&quot;tiny-nonyptych.jpg&quot; alt=&quot;Tiny Nonyptych&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It was a relief to not have to make the paint represent anything, and it was nice to not have to pick colors. The one in the bottom center is my favorite, and it basically has only one color.&lt;/p&gt;
&lt;p&gt;I once again had judgment trouble while arranging these. So, I wrote this program to run through a bunch of random arrangements quickly. &lt;a href=&quot;https://jimkang.com/arranger/&quot;&gt;You can use it to come up with your own arrangement&lt;/a&gt;, if you like.&lt;/p&gt;
&lt;p&gt;Finally, here’s a landscape I did in January. Remember January? Ah, pandemic-free January.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://jimkang.com/paintings/jim-paintings-JYhzHsgn.html&quot;&gt;&lt;img src=&quot;fells-drifts.jpg&quot; alt=&quot;Fells Drifts&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I got three different types of Bob Ross trees in there! I never saw him paint brambles, though. So, I was on my own and ended up doing weird things like scratching paint on the canvas with toothpicks.&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;I hope each of you are well.&lt;/p&gt;
&lt;p&gt;We’re in terrain Bob Ross never taught us about, and I’m personally having a sad and difficult time with it. Although, he did tell us to paint regularly, which does remediate misery. And I’m sure he wouldn’t mind if you substituted anything else that makes you happy without draining you.&lt;/p&gt;
&lt;p&gt;If you’re feeling sad and want to say something to someone, you can &lt;a href=&quot;mailto:jimkang@fastmail.com&quot;&gt;say it to me&lt;/a&gt;! Unlike whoever Rob Halford was addressing in Breaking the Law, I &lt;em&gt;do&lt;/em&gt; know what it’s like!&lt;/p&gt;
&lt;p&gt;Jim&lt;/p&gt;
&lt;h1 id=&quot;appendix-physical-art&quot;&gt;Appendix: Physical art&lt;/h1&gt;
&lt;p&gt;Aside from the judgment struggles, I enjoy working on paintings. A common feeling for me when I’m working on a digital project is “well, this is difficult but I’m excited to see how it turns out.” When I’m painting, I feel actual pleasure, rather than just excitement about potential.&lt;/p&gt;
&lt;p&gt;I think this is because, while the appearance of paint is (delightfully) unpredictable when it lands on the canvas, it is predictable in the sense that it doesn’t crash or just disappear when a new version of an OS goes out.&lt;/p&gt;
&lt;p&gt;You are literally moving the paint around, not writing text about where the paint should go and thinking about how that text will be interpreted. This is reassuring. &lt;a href=&quot;https://piratefsh.github.io/2020/03/03/personal-history-making-things.html&quot;&gt;Sher Minn has a good post that speaks to why this is satisfying.&lt;/a&gt; It’s about how making physical things and how making digital things affect a person.
G
In addition to advantages in the process of their making, physical objects as artifacts are very satisfying. Physical objects are perceptually rich. For free, you get infinite levels of detail in every dimension, even in ones you didn’t plan for.&lt;/p&gt;
&lt;p&gt;Sher Minn pointed out that physical objects have provenance—an object and its materials have a history, even if you don’t know what it is. So, they also have depth in the dimension of time.&lt;/p&gt;
&lt;p&gt;This includes paintings. Paintings have actual depth (I mean “depth” as one of the Ds in “3D” here). So, they look different when viewed at different angles and at different times of day. They age and have a history and, possibly, layers.&lt;/p&gt;
&lt;p&gt;However, you can’t share physical objects in a practical way. In the ‘50s, the Constructivist movement was really into this idea that printing would democratize art. Original physical paintings would no longer be important. Everyone would be able to get prints of whatever they wanted, and it would be the “content” that would be valued.&lt;/p&gt;
&lt;p&gt;We know today that “high art” is a financial instrument and that people’s reception of art is affected to an extent by the dollar value and status of the original. At the same time, the Internet has commoditized art into fuel for aggregators like Instagram and Twitter.&lt;/p&gt;
&lt;p&gt;Still, the constructivists were right about being able to get printable (or digital) art to a lot of people that would otherwise not see it. Unfortunately, even during non-pandemic times, many of you are too far away to come to our apartment to see our cat paintings. But you can look at web pages that either represent physical art or are art themselves. Also, digital art can be &lt;a href=&quot;http://smidgeo.com/bots/&quot;&gt;produced automatically&lt;/a&gt;, without an actual person spending time on it or using up materials.&lt;/p&gt;
&lt;p&gt;So, I’m still going to be making computer art, even though I realized I’ve been severely undervaluing physical art.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>A long email about a lot of unfinished business</title>
      <link>http://jimkang.com/weblog/articles/unfinished-business-2019/</link>
      <pubDate>Sun, 29 Dec 2019 19:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/unfinished-business-2019/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;em&gt;
My &lt;a href=&quot;https://tinyletter.com/jimkang/letters/a-long-email-about-a-lot-of-unfinished-business&quot;&gt;latest&lt;/a&gt; &lt;a href=&quot;https://tinyletter.com/jimkang/&quot;&gt;newsletter&lt;/a&gt; is out. Even though it was partly composed of posts I originally put on &lt;a href=&quot;https://www.patreon.com/deathmtn&quot;&gt;Patreon&lt;/a&gt;, it still took a lot of writing (for me) to complete.&lt;/p&gt;
&lt;p&gt;After reading it back, I realized that it has the tone of a year-end wrap-up. Since that is &lt;a href=&quot;https://remysharp.com/2019/12/31/my-2019&quot;&gt;what is happening with the bloggers&lt;/a&gt;, I figured I might as well post it here.&lt;/p&gt;
&lt;p&gt;Plus, because it was so hard to finish, so I’m gonna drop it everywhere I can.)&lt;/p&gt;
&lt;p&gt;With no further ado, here it is.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I’ve snoozed this newsletter for months, nearly unconsciously. Every week, I’ve thought, “Oh, yeah, the newsletter!” Followed by, “Oh, I haven’t finished anything.”&lt;/p&gt;
&lt;p&gt;But it’s been a while, so I gave it more thought before hitting snooze this time. While not much has shipped, a lot has been done, actually.&lt;/p&gt;
&lt;p&gt;I have a fear that people only look at a thing once. It’s like that Eminem song about spaghetti: “What if you had one shot? To eat spaghetti. Would you eat the spaghetti? Or would you let it slip?! [Rapping begins]”&lt;/p&gt;
&lt;p&gt;In actuality, I have no scientific evidence that people only give a project one shot. I know I’ve personally given my attention (the proverbial spaghetti) to unshipped projects multiple times, so maybe it’s worth letting it out re: the unfinished projects.&lt;/p&gt;
&lt;p&gt;So here they are. I hope you have a lot of time to read (20 minutes, according to Read-o-meter?) because they’re a lot of them! (And of course, you can always skip all these words and just scroll through the animated gifs.)&lt;/p&gt;
&lt;h1 id=&quot;slop-cube&quot;&gt;Slop Cube&lt;/h1&gt;
&lt;p&gt;First, here is Slop Cube.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/unfinished-business-2019/cube--zxWlPNBN.png.gif&quot; alt=&quot;Slop Cube A&quot;&gt;&lt;/p&gt;
&lt;p&gt;But these are also Slop Cube:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/unfinished-business-2019/cube--vwWWKfSy.png.gif&quot; alt=&quot;Slop Cube B&quot;&gt;
&lt;img src=&quot;http://jimkang.com/articles/unfinished-business-2019/cube--sbsmdgLB.png.gif&quot; alt=&quot;Slop Cube C&quot;&gt;&lt;/p&gt;
&lt;p&gt;You can check out more forms of Slop Cube here:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://jimkang.com/slopcube/&quot;&gt;https://jimkang.com/slopcube/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A few months ago, I saw a drawing of a cube in &lt;a href=&quot;https://www.worldcat.org/title/language-of-vision/oclc/1073410062&quot;&gt;Gyorgy Kepes’s&lt;/a&gt; &lt;a href=&quot;https://www.alibris.com/Language-of-Vision-Gyorgy-Kepes/book/3738241?qsort=p&amp;amp;matches=62&quot;&gt;Language of Vision&lt;/a&gt; that added lines to the faces of cube to confuse the viewer’s sense of perspective.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/unfinished-business-2019/kepes-cube.jpg&quot; alt=&quot;Kepes cube&quot;&gt;&lt;/p&gt;
&lt;p&gt;While drawing my own version, I was reminded that a cube in 2D is really:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A hexagon&lt;/li&gt;
&lt;li&gt;Three lines that each connect a point inside of the hexagon to every other vertex in the hexagon.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(Try drawing that, and you’ll see what I mean.)&lt;/p&gt;
&lt;p&gt;When the hexagon is irregular, the cube gets wobbly. You enter a sort of cube uncanny valley. I made this app/bot to explore it that valley.&lt;/p&gt;
&lt;p&gt;For reasons I can’t articulate, I want Slop Cube to be a sort of “personal non-assistant”. So, I want it to have a personality that is also expressed in text and audio. The personality should be as imperfect as its looks. I don’t know how to map the visual form to words and sound, and I want to avoid having them all be independent of each other.&lt;/p&gt;
&lt;p&gt;So, it’s just random imperfect cubes for now. You can see them via &lt;a href=&quot;http://jimkang.com/articles/unfinished-business-2019/jimkang.com/slopcube/&quot;&gt;web app&lt;/a&gt;, or this &lt;a href=&quot;https://smidgeo.com/bots/slopcube&quot;&gt;weblog&lt;/a&gt;, or &lt;a href=&quot;https://smidgeo.com/bots/slopcube/rss/index.rss&quot;&gt;RSS&lt;/a&gt;, or &lt;a href=&quot;https://tinyletter.com/bots&quot;&gt;email&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&quot;adventures-in-moif&quot;&gt;Adventures in Moif&lt;/h1&gt;
&lt;p&gt;This next project is technically done, given that the user it was made for used it. But there’s more I want it to do.&lt;/p&gt;
&lt;p&gt;It’s a dialogue adventure. I made it for a friend who recently had a baby and won’t be able to make it to D&amp;amp;D for quite some time. The idea is to let him still affect the game in a lightweight but hopefully meaningful way.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/unfinished-business-2019/moif-encounter.png&quot; alt=&quot;Moif encounter&quot;&gt;&lt;/p&gt;
&lt;p&gt;The adventure consists of story beats. Each beat is consists of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Some text and/or pictures that explains a situation&lt;/li&gt;
&lt;li&gt;An opportunity for the player to to affect the situation, in the form of multiple choice or free text.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In a sense, it’s just a series of forms to fill out. But even ambitious games like King of Dragon Pass or the question rooms in Slay the Spire boil down to that.&lt;/p&gt;
&lt;p&gt;The situations take place in the game world, and the player’s actions affect the next D&amp;amp;D session with the in-person players. For example, the players are currently in the &lt;a href=&quot;http://jimkang.com/articles/unfinished-business-2019/en.wikipedia.org/wiki/Temple_of_Elemental_Evil&quot;&gt;Temple of Elemental Evil&lt;/a&gt; (minor spoilers at that link) in our D&amp;amp;D game. An Item Mart (TM) kiosk appeared on the ground floor of the temple the last time they played. The Item Mart corporate scouts placed and stocked the kiosk based on the player’s consulting advice from the dialogue adventure.&lt;/p&gt;
&lt;p&gt;It’s a form of co-design with the player who can’t play. My hope is that these will also fun in and of itself, though we’re not quite there yet.&lt;/p&gt;
&lt;p&gt;You can play it here: &lt;a href=&quot;https://jimkang.com/moif/&quot;&gt;https://jimkang.com/moif/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(Don’t worry; you can’t affect the D&amp;amp;D game because the player already played it.)&lt;/p&gt;
&lt;p&gt;Like most of my game designs, it’s too heavily gated. Beats that I wanted to be played were needlessly locked behind random rolls or obscure choices. I think this comes from the concept of video games having secrets being seeded in my brain at an early age. That said, I think I can easily avoid this next time.&lt;/p&gt;
&lt;p&gt;I may build adventures for NPCs in the game world that will also affect the main D&amp;amp;D game, so if you’re interested in playing one of them, let me know!&lt;/p&gt;
&lt;p&gt;Some characters I have in mind for dialogue adventuring are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jeumes, a Kuo-Toa (a kind of subterranean fish humanoid) who is not enthusiastic about the all-encompassing raiding culture of the Kuo-Toa. He was convinced to desert his post by the Worst Party (the player characters). He spent some time traveling the Worg Caverns with them, but Worst Party culture was alienating to him as well. He ghosted, then wandered off to the surface, getting entangled with other adventuring parties along the way.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Ouistyn Cliaaagh, a dwarven cleric from a rival party of the PCs. He got sucked into hell during a climactic battle with a gigantic slime hive mind.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If I’m feeling ambitious, maybe I’ll make ones for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Smigal, a brigand leader who the PCs magically locked into a room to die&lt;/li&gt;
&lt;li&gt;A Time Squirrel, a member of a species of squirrel that can manipulate time&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;torn-edges&quot;&gt;Torn Edges&lt;/h2&gt;
&lt;p&gt;In the process of making Moif, I dusted off this this ridiculous code to draw torn paper edges around a box on a web page. I’ve put it in its own module:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jimkang/torn-edges&quot;&gt;https://github.com/jimkang/torn-edges&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(A module is a way of packaging up code for other programs to use.)&lt;/p&gt;
&lt;p&gt;torn-edges works by creating an SVG, then drawing four jagged paths (the peaks are random) in it, then dropping a &lt;code&gt;foreignObject&lt;/code&gt;element (AKA a piece of “regular”, non-SVG HTML) in the middle of them to house the content.&lt;/p&gt;
&lt;h2 id=&quot;github-packages-vs-npm&quot;&gt;GitHub Packages vs. NPM&lt;/h2&gt;
&lt;p&gt;It’s available in a GitHub Package, which involves a little more work to install than a package on NPM does. (You have to create an .npmrc in your package, basically.) If you want to use it and don’t understand GitHub Packages, let me know, and I can put it on NPM!&lt;/p&gt;
&lt;p&gt;I tried out the GitHub Package Registry because NPM Inc.’s behavior has been unsavory lately, and I’ve read about &lt;a href=&quot;https://github.com/ceejbot/economics-of-package-management/blob/master/essay.md&quot;&gt;fundamental problems with its very nature&lt;/a&gt;. The GitHub Package Registry, though, is owned by Microsoft, whose unsavory behavior you already know about if you’re at least 30 years old.&lt;/p&gt;
&lt;p&gt;In the situations in which you have to choose between Bad Institution A or Bad Institution B in order to make your stuff, I think the best you can do is &lt;a href=&quot;https://jimkang.com/weblog/articles/platform-free-bots/&quot;&gt;avoid gradually becoming inseparable from a single platform&lt;/a&gt; so you can move when it’s time to move. And you do that by proving every so often that your stuff is portable.&lt;/p&gt;
&lt;p&gt;From a more street-level point of view: GitHub Packages have free private packages (packages you want to limit in availability), whereas NPM charges for those.&lt;/p&gt;
&lt;h1 id=&quot;subways&quot;&gt;Subways&lt;/h1&gt;
&lt;p&gt;Last year, my National Novel Generation Month book had some pages in it that [happened to look somewhat like subways.&lt;/p&gt;
&lt;p&gt;R. (who was 4 at the time and is now 5) was really into those pages.&lt;/p&gt;
&lt;p&gt;Since then, we got a book called &lt;a href=&quot;https://www.joycehesselberth.com/&quot;&gt;Mapping Sam&lt;/a&gt; that explains the concept of maps. There are a couple of pages with subways in them, and he always traces routes within the networks with his finger. We also have a poster of the MBTA subway system, and he does the same thing on it.&lt;/p&gt;
&lt;p&gt;R.’s drawing happens in streaks. Sometimes, like now, he’s into it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/unfinished-business-2019/train-drawing.jpg&quot; alt=&quot;Dual-perspective train!&quot;&gt;&lt;/p&gt;
&lt;p&gt;There are also recurrent periods in which he’s really self-critical and avoids drawing because he’s not able to get what’s in his head onto the paper. The last time this happened, we eased back into it by drawing subways. Subways are great for this because we’re used to seeing abstractions of them that are simply colored lines. It’s not hard to make something that looks like a subway map, even when you get wild and have five-year-old line control.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/unfinished-business-2019/looping-subways.jpg&quot; alt=&quot;Looping subways&quot;&gt;&lt;/p&gt;
&lt;p&gt;Now I’m into drawing subways, too, so I’m making a web app that generates subway maps, that hopefully, can be printed and read like a book. Like R.’s subways, I’m shooting for fanciful yet somewhat realistic, but “somewhat realistic” by adult standards. For example, I want there to be bodies of water, and I want subways to sometimes cross them, but mostly avoid them, and I want coverage of the area to be reasonable. But if something visually satisfying happens that wouldn’t be in a real subway, I want to let that happen.&lt;/p&gt;
&lt;p&gt;If I do this right, this will be one of those things where a fairly dry system of (colored curves, chosen randomly with some constraints) gets you to imagine things that are really vivid and big. I think that’s the best kind of art.&lt;/p&gt;
&lt;p&gt;I’ve gotten as far generating what I feel are “reasonable-looking” bodies of water, picking some subway station locations, and finding a skeleton that connects them all. I’m now trying to make train lines using that skeleton as a guideline (and sometimes crossing gaps in the skeleton).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/unfinished-business-2019/subway.gif&quot; alt=&quot;The layers of the subways&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;bonimation&quot;&gt;Bonimation&lt;/h1&gt;
&lt;p&gt;Dem Bones is now animated.&lt;/p&gt;
&lt;p&gt;I took a “wheels within wheels” approach to moving the bones around. If you think about it, a bone can only move by rotating on the joint to which is fixed. So, you can think of each bone being fixed to a wheel that rotates with its anchor joint in the center of the wheel, and the bones attached to that bone also being on a wheel.&lt;/p&gt;
&lt;p&gt;It’s much easier to explain via this stop motion animation:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/unfinished-business-2019/stop-motion-bones.gif&quot; alt=&quot;Stop motion bones&quot;&gt;&lt;/p&gt;
&lt;p&gt;I think this is an improvement over the still bones, but it’s still a little too predicable. I can place most of the skeletons in either one of two categories: Ornate bone clock or the part of the Fresh Prince of Bel-Air where he’s being spun around by the neighborhood “guys who were up to no good”.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/unfinished-business-2019/bones--wRlgHlbp.png.gif&quot; alt=&quot;Bone clock&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/unfinished-business-2019/bones--iOLCLMYS.png.gif&quot; alt=&quot;Spun by thugs&quot;&gt;&lt;/p&gt;
&lt;p&gt;Once in a while, you get this cool bouncing motion, though:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/unfinished-business-2019/bones--lwweIqkw.png.gif&quot; alt=&quot;Yo-yo&quot;&gt;&lt;/p&gt;
&lt;p&gt;Having some common force on bones across the hierarchy will probably help a lot, and that’s what I’ll do whenever I come back to it.&lt;/p&gt;
&lt;p&gt;Dem Bones is available in “bot formats” (a &lt;a href=&quot;http://jimkang.com/articles/unfinished-business-2019/smidgeo.com/bots/dem-bones/&quot;&gt;weblog&lt;/a&gt;, in &lt;a href=&quot;https://smidgeo.com/bots/dem-bones/rss/index.rss&quot;&gt;RSS&lt;/a&gt;, and in &lt;a href=&quot;https://tinyletter.com/bots&quot;&gt;email&lt;/a&gt;), but I think it’s best experienced directly in the &lt;a href=&quot;http://jimkang.com/articles/unfinished-business-2019/jimkang.com/dem-bones/&quot;&gt;web app&lt;/a&gt;. When it has to be delivered as animated gif, as it does in the bot formats, it gets choppier because I have to limit the fidelity of the animated gif in order to not make the gif files even huger than they are. The few extra frames per second that it gets in the web app make them a little more alive.&lt;/p&gt;
&lt;h1 id=&quot;workings&quot;&gt;Workings&lt;/h1&gt;
&lt;p&gt;When you have a lot of things in progress and even more ideas you want to do, you can’t help but think, oh, I need a system to make sense of them all and which of the things is more worth doing than the others. I’ve tried to go at this multiple times, and deep down, I feel the answer is “there is no system, everything is random, get to be at peace with hacking at everything while embracing the inevitability of death without having done everything that would have been cool.”&lt;/p&gt;
&lt;p&gt;Well, I’m shoving down that feeling and once again trying to solve it with technology, for the third time. (Maybe the fourth?)&lt;/p&gt;
&lt;p&gt;One  of my problems with deciding which projects are worth working on and with fitting anything into a bigger picture is that the projects aren’t well-described by the simple categories of the sort you’d use on a Trello board.&lt;/p&gt;
&lt;p&gt;I recently used a Miro board to list most of my projects. When I added category boxes, I became paralyzed.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/unfinished-business-2019/miro-board.png&quot; alt=&quot;Boxes and boxes&quot;&gt;&lt;/p&gt;
&lt;p&gt;It was really hard to decide which boxes which projects should go into or even how to make the boxes overlap so that projects could be in as many boxes as made sense. And the number of projects I’d have to move around if another category box came into play was crushing.&lt;/p&gt;
&lt;p&gt;But even a system in which a project can be tagged with unlimited categories is not sufficient.&lt;/p&gt;
&lt;p&gt;You may have two projects that are both “audio”, and “game”, but one of them may involve a little music, while the other is 100% audio. One might be a video game, but another might involve game-like aspects that are just there for a non-game purpose. This is where numeric values can help.&lt;/p&gt;
&lt;p&gt;And then, there are ways of describing a project that are inherently only describable on a continuum, like difficulty and doneness.&lt;/p&gt;
&lt;p&gt;There is a decision method called the “Eisenhower Matrix” pushed by companies that, to me, seem like productivity hucksters. It’s named after Eisenhower because he said once said problems are either urgent or important. The “matrix” ignores the “or” part and says that urgency and importance are the two dimensions of a problem that you should map out onto a 2D plane. However, for me, the whole problem is figuring out what’s important, so this is of no help.&lt;/p&gt;
&lt;p&gt;I think I may need something that maps projects by an arbitrary number of aspects, each with a numeric value. If you have two aspects, you can organize projects well in by mapping them in 2D. If you have three aspects, 3D might work (though I bet it’d ultimately be confusing). How do you map things that have 20 dimensions, though?&lt;/p&gt;
&lt;p&gt;I think sticking to 2D and allowing users to define custom centers of gravity might work. For example, in my app (which I named “Workings” because I didn’t want to hold up making it while thinking of a good name), if you want to see which of your projects are closest to this set of aspects —&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Doneness: 1.0&lt;/li&gt;
&lt;li&gt;Visual: 0.5&lt;/li&gt;
&lt;li&gt;Augmenting: 1.0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;— you create an “attractor” (a center of gravity) with those values and drop it where you like on the 2D plane. Then, projects closest to those values will move closest to that attractor. Projects only somewhat close to those values will move to be somewhat close in space.  And you can create and destroy as many attractors as you like.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/unfinished-business-2019/workings-demo.gif&quot; alt=&quot;Stuff moving around the Workings app&quot;&gt;&lt;/p&gt;
&lt;p&gt;Here’s a demo:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://vimeo.com/380371232&quot;&gt;https://vimeo.com/380371232&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I fully acknowledge that I could build this app out completely and still not gain any insight. But I feel compelled to find out.&lt;/p&gt;
&lt;h1 id=&quot;stations&quot;&gt;Stations&lt;/h1&gt;
&lt;p&gt;To the larger point of using time well, even when I do know what’s important/satisfying/fun, I don’t always do it. I’ve observed lately, as millions have before me, that you tend to do whatever is easy to do.&lt;/p&gt;
&lt;p&gt;When I unlock my computer, and there is a terminal tab open to a project directory, I often just start working on that project, even if I came to my computer intending to do something else. When I open Firefox to pay a bill, sometimes I just read whatever my RSS reader was already on.&lt;/p&gt;
&lt;p&gt;We’ve had acrylic paints out on our table lately because we’ve been painting these amazingly detailed tabletop playsets that my friends gave me. Katt brought out some tiny canvases because she figured she might as well paint as long as we have the paints out. The other day, the paints and canvases were out, so I painted a picture of Bonus Cat:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/unfinished-business-2019/bonus-acrylics.jpg&quot; alt=&quot;Les Bons&quot;&gt;&lt;/p&gt;
&lt;p&gt;(The accidental exaggeration of features makes him look way younger than he is.)&lt;/p&gt;
&lt;p&gt;Not that that’s a masterwork or anything, but it is significant because I haven’t painted a painting in a year and a half. I would not have done this if all of that had not just been sitting out.&lt;/p&gt;
&lt;p&gt;Dr. Wily, our other cat, has started to jump on top of the fridge. She was motivated to start as a result of noticing that my desk gave her a handy launching point. A few days ago, I took great pains to lower my desk by a foot, which I thought would ruin her launch point. But having established confidence by jumping from the previous location, &lt;a href=&quot;https://smidgeo.com/daily-mrrp/daily-mrrp-znlunjVd.html&quot;&gt;she can still do it&lt;/a&gt; (warning: the clash of slow motion and our weird kitchen lighting resulted in flashing lights in that video), despite the extra vertical foot.&lt;/p&gt;
&lt;p&gt;This is how kindergarten and preschool work, except by design. Teachers figure out what activities would be enriching for kids, then they set up stations at tables with the equipment (and instruction) that make it easy to do them.&lt;/p&gt;
&lt;p&gt;If teachers said “Oh, you want to paint, five-year-old? Well, then go into three different closets and get out paints, brushes, smocks, and paper,” the kids wouldn’t paint. The same goes for digging in sand, doing puzzles, conducting surveys, making things out of leaves, and all of the other things they do.&lt;/p&gt;
&lt;p&gt;I’m trying something like this for myself. Part of it is easy (but also less powerful): At the end of the night, I leave the right terminal and browser tabs open for my future self. Setting up stations for physical activities is not as easy because I have to clear physical space for them.&lt;/p&gt;
&lt;h1 id=&quot;stop-motion&quot;&gt;Stop motion&lt;/h1&gt;
&lt;p&gt;Here’s my stop motion animation station.  I used it to make that manual Dem Bones animation:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/unfinished-business-2019/stop-motion-box.jpg&quot; alt=&quot;Box with hole&quot;&gt;&lt;/p&gt;
&lt;p&gt;That’s it! It’s just a box that lets a lot of light in. It has a hole at the top to put the camera (my phone) on. The subject of the animation rests at the bottom of the box. It keeps the camera in the same place from shot to shot.&lt;/p&gt;
&lt;p&gt;For the previous iteration of this thing, I recruited a lot of household objects:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/unfinished-business-2019/old-stop-motion-setup.jpg&quot; alt=&quot;Junk arranged to purpose&quot;&gt;&lt;/p&gt;
&lt;p&gt;Those household objects had to go back to their day jobs, though. While it was up, though, I used that setup to make a (simplified) dramatization of some events in the last D&amp;amp;D session (of which I still have to write a recap email, doh!). (I’d include it here, but it’s really large, so let me know if you want me to send it to you directly.)&lt;/p&gt;
&lt;p&gt;Stop motion always looked like painstaking work to me, and it is if you are trying to create a movie-quality movie, but I’m finding it to be a satisfying and quick way to express some ideas without much fuss. Let me know if you’re interested in how you can do it. Mostly, it’s just taking a lot of pictures (with the camera in the same place), then running some commands to turn them into an animated gif.&lt;/p&gt;
&lt;h1 id=&quot;infrastructure&quot;&gt;Infrastructure&lt;/h1&gt;
&lt;p&gt;I kind of don’t want to write about my infrastructure thinking because I don’t have satisfying answers. However, I’m going to do so out of respect for the space it takes up in my brain (as well as in the cloud!).&lt;/p&gt;
&lt;p&gt;All of my bots and weblogs use &lt;a href=&quot;https://github.com/jimkang/static-web-archive&quot;&gt;static-web-archive&lt;/a&gt;, which uses git to track incremental changes. Every new post is a series of commits. This makes it really easy to back it all up to the gigantic hard drive I have hooked up to my home Raspberry Pi. It’s also easy to revert changes when a bot produces something horrible and unforeseen.&lt;/p&gt;
&lt;p&gt;However, it’s filling up the two little virtual computers in the cloud that I rent from Digital Ocean. These days, most people don’t use local hard drives for storage very often (this is called “block storage”) the way I do. Instead, they use object storage (e.g. Amazon S3, Digital Ocean Spaces) because it’s really cheap, even though writing to and reading from object storage is not as easy as writing to and reading from your local filesystem (block storage). One consequence of object storage not working like a local filesystem is that I wouldn’t be able to maintain contents with git.&lt;/p&gt;
&lt;p&gt;But since bots keep on producing content all the time automatically, I need to do some combination of the following if I want things to continue for decades:&lt;/p&gt;
&lt;p&gt;A) Pay for more block storage, which is relatively expensive.
B) Modify static-web-archive to use block storage and give up the ability to easily revert to earlier versions. Backing up will be a touch harder, too.
C) Just toss out old posts (meaning take them off the internet; they’ll always be on my home backup HD) every so often. I could put them on archive.org, I suppose.
D) Move old posts to object storage while keeping current posts in block storage. (Ironically, old posts will probably be served faster because it’s easy to create CDNs for things in object storage.) I’ve looked into falling back to object storage from nginx (the web server I use), and it looks like that could work.
E) Do B, but also support deleting individual posts and patching up indexes and RSS accordingly.&lt;/p&gt;
&lt;p&gt;E is probably the correct way to go, but boy, am I not enthusiastic about separating the rendering of the index and RSS from the content creation in static-web-archive.&lt;/p&gt;
&lt;p&gt;C is tempting, but I don’t want to create dead links and am not sure it will easy to map fallbacks to archive.org URLs.&lt;/p&gt;
&lt;p&gt;Hopefully, I pick something before my virtual hard drives fill up.&lt;/p&gt;
&lt;h1 id=&quot;handwriting&quot;&gt;Handwriting&lt;/h1&gt;
&lt;p&gt;I’ve been physically writing in notebooks for over a year now. It decouples thinking from computers, which in turn makes thinking a calmer affair. It’s partly because it slows down thinking, which helps with the quality of thinking sometimes. Finally, it’s healthy to be intimately familiar with the idea that there’s more than one way to express oneself. You do not always have to type characters of text in horizontal rows.&lt;/p&gt;
&lt;p&gt;That said, I’ve done it in a way that’s needlessly stressful for my hand.  I picked up the habit of handwriting in all caps in high school because that’s how we did it drafting class, and it looked cool. Well, now I’m feeling it when I try to write a lot of words quickly. So, I’ve been trying cursive. It’s awkward. My hand moves faster than my brain right now, so my writing tends to have these weird hovering spots in which my hand wanted to go somewhere, but my brain was all, “Hold on [looking up how to write a cursive Q in the manual]”.&lt;/p&gt;
&lt;p&gt;I wrote around half of this newsletter in cursive before giving in to typing on a computer.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/unfinished-business-2019/handwritten-newsletter.jpg&quot; alt=&quot;Scribbles&quot;&gt;&lt;/p&gt;
&lt;p&gt;When writing by hand, it’s easier to move forward without editing which is important for getting a draft done. Also, when you’re on a train, it’s a better experience than typing on your phone. (Provided you get a seat.) It will be even better when I get rid of the awkward microhesitating.&lt;/p&gt;
&lt;p&gt;Also, I feel like I should mention that I’ve been playing the drums, and like handwriting, painting, and stop motion animation, it’s a non-typing thing that delivers the satisfaction while you’re doing it, not just after you’ve used to make something that you put in front of other people. This is really important for not burning out.&lt;/p&gt;
&lt;p&gt;I have not been able to get access to the drums until now, at the age of 42. So, I understand if you can’t find a place to play a kit. But if you can, seize that opportunity! In lieu of that, I’ve found that table drumming is really good, too. Sometimes when I’m sitting around waiting for a kid to finish a meal, I quietly tap away, imagining I’m drumming.&lt;/p&gt;
&lt;h1 id=&quot;2020&quot;&gt;2020&lt;/h1&gt;
&lt;p&gt;Wouldn’t it be great if I finished Workings, then realized exactly what the most important things to work on were, then used kindergarten-style stations to get them all done, and they were really enriching and imagination-sparking for people?  We all know that’s unlikely, but I do think that some version of some part of that will happen, and I’m OK with that.&lt;/p&gt;
&lt;p&gt;Thanks for reading this newsletter and the previous newsletters! And for reading letters at all! If you happen to have gotten a newsletter or blog that I might not know about, please let me know! I want to read your long(ish)form thoughts.&lt;/p&gt;
&lt;p&gt;I don’t know a whole lot about what has gone on with most of you, but I hope you’ve been getting space to do things that are rewarding to you right now, and not just doing things that you have to do or feel you have to do for others or for your future self!  Or as I guess people usually say more succinctly: “Best wishes”&lt;/p&gt;
&lt;p&gt;Jim&lt;/p&gt;
&lt;p&gt;P.S. &lt;a href=&quot;https://smidgeo.com/bots/eyes-bot&quot;&gt;Eyes Bot&lt;/a&gt; &lt;a href=&quot;https://smidgeo.com/bots/eyes-bot/eyes-bot-gioqmUHU.html&quot;&gt;independently created a Pokémon&lt;/a&gt;! An internet friend pointed out to me that it is &lt;a href=&quot;https://bulbapedia.bulbagarden.net/wiki/Victreebel_(Pok%C3%A9mon&quot;&gt;Victreebel&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/unfinished-business-2019/eyes-vspiFRYw.jpg&quot; alt=&quot;Homemade Pokémon&quot;&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Russell's Paradox</title>
      <link>http://jimkang.com/weblog/articles/russells-paradox/</link>
      <pubDate>Thu, 10 Oct 2019 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/russells-paradox/</guid>
      <author></author>
      <description>&lt;p&gt;Back in 1902, mathematicians defined a set as follows:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A collection of distinct objects, where an object can be anything, including a set.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, here are some sets under that definition:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;{ 4, 5, 6 }
{ a, b, c, d }
{ 8, a, 🌍, “The concept of FOMO”, 🤔 }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But also:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A = { 0, 1, 2, A }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Where A is a set that has the element A, which is…itself.&lt;/p&gt;
&lt;p&gt;For decades, mathematicians thought this was fine, until Bertrand Russell pointed out a paradox.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Bertrand_Russell&quot;&gt;Bertrand Russell&lt;/a&gt; gave the label “extraordinary sets” to sets like A that refer to themselves. He called non-self-referential sets (like &lt;code&gt;{ 4, 5, 6}&lt;/code&gt;) “ordinary sets”. It follows that every set must be either:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Extraordinary&lt;/li&gt;
&lt;li&gt;Ordinary&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;However! If you say that there is a set, S, that is a collection of &lt;em&gt;all ordinary sets&lt;/em&gt;, is S ordinary or or is it extraordinary?&lt;/p&gt;
&lt;p&gt;The answer is that it is &lt;strong&gt;neither&lt;/strong&gt;, which is why this is a paradox. Here’s a verbal explanation that looks at the two cases.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;S is an ordinary set.&lt;/strong&gt; Well, this can’t be right because if it “contains all ordinary sets”, and S is an ordinary set, then S contains S. If S contains S, S is a an extraordinary set.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;S is an extraordinary set.&lt;/strong&gt; An extraordinary set contains itself. But S is the set of all ordinary sets. If it contains itself, then it contains an extraordinary set. So, it cannot be both an extraordinary set and the set of all ordinary sets.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, yeah, it is neither.&lt;/p&gt;
&lt;p&gt;I had a bit of trouble getting this to sink in. I made this face 🤔 for quite a while. I think it would have helped me to think of it this way:&lt;/p&gt;
&lt;h2 id=&quot;there-are-two-conditions-that-need-to-be-met-in-order-for-it-to-not-be-a-paradox-&quot;&gt;There are two conditions that need to be met in order for it to NOT be a paradox.&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;S has to contain all ordinary sets, as defined.&lt;/li&gt;
&lt;li&gt;You have to designate S to be either extraordinary or ordinary, and that designation has to hold up. (If you say it’s ordinary, it has to be ordinary.)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;there-are-two-things-you-can-change-to-see-if-you-can-meet-both-of-the-above-conditions-&quot;&gt;There are two things you can change to see if you can meet both of the above conditions.&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;S can either contain itself or not contain itself.&lt;/li&gt;
&lt;li&gt;S can be designated as either extraordinary or ordinary.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;work-it-out-for-yourself&quot;&gt;Work it out for yourself&lt;/h1&gt;
&lt;p&gt;Below is a tool that:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Lets you change the two things you can change. &lt;strong&gt;Click&lt;/strong&gt; on “Ordinary” or “Extraordinary” to change the designation of S. &lt;strong&gt;Drag&lt;/strong&gt; the “Reference to set S” inside and outside of the box that represents set S.&lt;/li&gt;
&lt;li&gt;Automaticaly evaluates the effects of your changes on the two conditions.&lt;/li&gt;
&lt;/ol&gt;
&lt;style&gt;
  .centered-col {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  #russell-experiment-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    border-radius: 1em;
    font-family: Ubuntu, roboto, noto, segoe ui, -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, arial, sans-serif;
    position: relative;
  }

  #russell-experiment-container h1,h2,h3 {
    font-family: Ubuntu, roboto, noto, segoe ui, -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, arial, sans-serif;
  }

  #russell-experiment-container h1 {
    font-size: 1.2em;
  }

  #russell-experiment-container h2 {
    font-size: 1em;
  }

  #sets-container {
    width: 45%;
    min-width: 15em;
    border: 1px solid #666;
    border-radius: 1em;
    padding: 1em;
  }

  #evaluator-container {
    width: 45%;
    padding-right: 0.5em;
    border-radius: 1em;
  }

  #set-s {
    border: 8px solid hsl(310, 70%, 50%);
    border-radius: 1em;
    padding-bottom: 7em;
    padding-left: 0.5em;
    padding-right: 0.5em;
    margin-bottom: 6em;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  #russell-experiment-container .controls {
  }

  #russell-experiment-container .controls ul {
    list-style-type: none;
    margin: 0;
  }

  #ref-s {
    background-color: hsla(313.3, 80.8%, 67.3%, 0.8);
    position: absolute;
    cursor: pointer;
    padding-top: 0.3em;
    padding-bottom: 0.3em;
    padding-left: 0.5em;
    padding-right: 0.5em;
    border-radius: 0.5em;
    border-color: hsl(300.5, 53.9%, 42.5%);
    border-style: solid;
    border-width: 4px;
  }

  #evaluator-container ul {
     list-style-type: none;
     margin: 0;
  }

  #evaluator-container li {
    border-style: solid;
    border-width: 4px;
    border-radius: 0.5em;
    padding: 1em;
  }

  #evaluator-container .verdict {
    font-weight: 900;
    font-size: 1.5em;
    text-transform: uppercase;
    text-align: center;
  }

  .condition {
    border-color: #d22312; /* red, a little rusty */
    opacity: 1;
    transition: height 1s, opacity 1s, padding 1s;
  }

  #s-contains-all-ordinary-condition-second-pass {
    height: 11em;
  }

  .condition-passed {
    border-color: #29c16a; /* green */
  }

  .condition .reason {
    font-style: italic;
    font-size: 0.7em;
    margin-top: 0.5em;
  }

  .aura {
    box-shadow: 0 0 10px 4px hsla(310, 80%, 50%, 0.75);
  }

  #ref-s {
    text-align: center;
  }

  #ref-s.selected {
    border-style: dashed;
  }

  #s-contains-all-ordinary-condition-second-pass.hidden {
    height: 0;
    opacity: 0;
    padding: 0;
  }

&lt;/style&gt;

&lt;div id=&quot;russell-experiment-container&quot;&gt;
  &lt;div id=&quot;sets-container&quot;&gt;
  &lt;div id=&quot;set-s&quot; class=&quot;centered-col&quot;&gt;
  &lt;h1&gt;Set S&lt;/h1&gt;
  &lt;div class=&quot;set-element&quot;&gt;
    [ &lt;em&gt;{ 0, 1, 2 }&lt;/em&gt;, &lt;em&gt;{ a, b, c }&lt;/em&gt;, and all of the other ordinary sets ]
  &lt;/div&gt;
  &lt;/div&gt;&lt;!-- close set-s --&gt;
  &lt;div class=&quot;controls centered-col&quot;&gt;
    &lt;strong&gt;Designate S as:&lt;/strong&gt;
    &lt;form&gt;&lt;ul&gt;
      &lt;li&gt;&lt;input id=&quot;set-designation-ordinary&quot; type=&quot;radio&quot; name=&quot;set-designation&quot; checked&gt;&lt;label for=&quot;set-designation-ordinary&quot;&gt;Ordinary&lt;/label&gt;&lt;/li&gt;
      &lt;li&gt;&lt;input id=&quot;set-designation-extraordinary&quot; type=&quot;radio&quot; name=&quot;set-designation&quot;&gt;&lt;label for=&quot;set-designation-extraordinary&quot;&gt;Extraordinary&lt;/label&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/form&gt;
  &lt;/div&gt;
  &lt;/div&gt;&lt;!-- close sets-container --&gt;
  &lt;div id=&quot;evaluator-container&quot; class=&quot;centered-col&quot;&gt;
    &lt;h1&gt;Condition checkers&lt;/h1&gt;
    &lt;ul id=&quot;evaluator-list&quot;&gt;
      &lt;li class=&quot;condition&quot; id=&quot;s-contains-all-ordinary-condition&quot;&gt;
        &lt;div class=&quot;description&quot;&gt;S contains all ordinary sets per definition of S:&lt;/div&gt;
        &lt;div class=&quot;verdict&quot;&gt;NO&lt;/div&gt;
        &lt;div class=&quot;reason&quot;&gt;&lt;/div&gt;
      &lt;/li&gt;
      &lt;li class=&quot;condition&quot; id=&quot;s-designation-condition&quot;&gt;
        &lt;div class=&quot;description&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;verdict&quot;&gt;NO&lt;/div&gt;
        &lt;div class=&quot;reason&quot;&gt;&lt;/div&gt;
      &lt;/li&gt;
      &lt;li class=&quot;condition hidden&quot; id=&quot;s-contains-all-ordinary-condition-second-pass&quot;&gt;
        &lt;div class=&quot;description&quot;&gt;&lt;em&gt;[Second look]&lt;/em&gt; S contains all ordinary sets per definition of S:&lt;/div&gt;
        &lt;div class=&quot;verdict&quot;&gt;NO&lt;/div&gt;
        &lt;div class=&quot;reason&quot;&gt;&lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;ref-s&quot; draggable=&quot;true&quot; style=&quot;left: 120px; top: 440px;&quot;&gt;Reference to set S&lt;br&gt;&lt;em&gt;(You can drag this.)&lt;/em&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;noscript&gt;(Folks reading this from RSS: There’s an interactive tool here, probably not displaying in your RSS reader. You have to click through to see it.)&lt;/noscript&gt;&lt;/p&gt;
&lt;script&gt;
(function russell() {
  var dragEl = document.getElementById('ref-s');
  var setEl = document.getElementById('set-s');
  var extraordinaryButton = document.getElementById(
    'set-designation-extraordinary'
  );
  var ordinaryButton = document.getElementById('set-designation-ordinary');
  var sContainsAllOrdinaryEl = document.getElementById(
    's-contains-all-ordinary-condition'
  );
  var sDesignationHoldsUpEl = document.getElementById(
    's-designation-condition'
  );
  var sContainsAllOrdinarySecondPassEl = document.getElementById(
    's-contains-all-ordinary-condition-second-pass'
  );

  var dragging = false;

  var lastPageX;
  var lastPageY;

  dragEl.addEventListener('mousedown', onMouseDown);
  window.addEventListener('mouseup', onMouseUp);
  window.addEventListener('mousemove', onMouseMove);

  dragEl.addEventListener('touchstart', onMouseDown);
  window.addEventListener('touchend', onMouseUp);
  window.addEventListener('touchcancel', onMouseUp);
  window.addEventListener('touchmove', onMouseMove);

  extraordinaryButton.addEventListener('click', onSetDesignationClick);
  ordinaryButton.addEventListener('click', onSetDesignationClick);

  passStateFromUIToEvaluate();


  function onMouseDown(e) {
    e.preventDefault();
    dragging = true;
    //console.log('dragging', dragging);
    dragEl.classList.add('selected');
  }

  function onMouseUp(e) {
    //e.preventDefault(); // This prevents radio button clicking on Mobile Safari!
    dragging = false;
    //console.log('dragging', dragging);
    dragEl.classList.remove('selected');
    setEl.classList.remove('aura');

    passStateFromUIToEvaluate();
  }

  function onMouseMove(e) {
    //e.preventDefault();

    if (!dragging) {
      return;
    }

    //console.log('e.pageX', e.pageX);
    if (lastPageX === undefined || lastPageY === undefined) {
      lastPageX = e.pageX;
      lastPageY = e.pageY;
      return;
    }

    const deltaX = e.pageX - lastPageX;
    const deltaY = e.pageY - lastPageY;

    // Chop off 'px' from string.
    const oldX = +dragEl.style.getPropertyValue('left').slice(0, -2);
    const oldY = +dragEl.style.getPropertyValue('top').slice(0, -2);

    const newX = oldX + deltaX;
    const newY = oldY + deltaY;

    /*
    console.log(
      'oldX',
      oldX,
      'oldY',
      oldY,
      'deltaX',
      deltaX,
      'deltaY',
      deltaY,
      'newX',
      newX,
      'newY',
      newY
    );
    */

    dragEl.style.setProperty('left', newX + 'px');
    dragEl.style.setProperty('top', newY + 'px');

    lastPageX = e.pageX;
    lastPageY = e.pageY;

    // Could optimize this with a flag instead of always changing class.
    if (elOverlapsEl(dragEl, setEl)) {
      setEl.classList.add('aura');
    } else {
      setEl.classList.remove('aura');
    }
  }

  function onSetDesignationClick() {
    passStateFromUIToEvaluate();
  }

  function passStateFromUIToEvaluate() {
    evaluateConditions({
      refIsInSet: elOverlapsEl(dragEl, setEl),
      sDesignation: extraordinaryButton.checked ? 'extraordinary' : 'ordinary'
    });
  }

  function evaluateConditions({ refIsInSet, sDesignation }) {
    var sContainsAllOrdinarySets;
    var containsReason;
    var hideSecondPass = true;

    if (sDesignation === 'ordinary') {
      // If it's an ordinary set, in order for S to contain
      // all ordinary sets, S has to contain itself!
      sContainsAllOrdinarySets = refIsInSet;
      containsReason = `Since S is ordinary, a set that contains all ordinary sets must contain S (an ordinary set). S does ${refIsInSet ? '' : 'NOT '}contain S.`;
      hideSecondPass = !refIsInSet;
    } else {
      sContainsAllOrdinarySets = !refIsInSet;
      containsReason = `Since S is extrardinary, a set that contains all ordinary sets (and ONLY ordinary sets) cannot contain S. S does ${refIsInSet ? '' : 'NOT '}contain S.`;
    }

    var sDesignationHoldsUp;
    var sDesignationHoldsUpReason;

    if (sDesignation === 'ordinary') {
      sDesignationHoldsUp = !refIsInSet;
      sDesignationHoldsUpReason = `Ordinary sets must not contain themselves. S does ${refIsInSet ? '' : 'NOT '}contain itself.`;
    } else {
      // If it is designated an extraordinary set, then
      // it has to have a reference to itself.
      sDesignationHoldsUp = refIsInSet;
      sDesignationHoldsUpReason = `Extraordinary sets must contain themselves. S does ${refIsInSet ? '' : 'NOT '}contain itself.`;
    }

    const conditionTextHTML = `As you have designated it, S is an ${sDesignation} set (&lt;strong&gt;is${
      sDesignation === 'ordinary' ? ' not' : ''
    } &lt;/strong&gt; an element of itself):`;

    var sContainsAllOrdinarySetsSecondPass = sContainsAllOrdinarySets;
    var containsSecondPassReason = containsReason;
    // Reevaluate based on the discovery that S is extraordinary.
    if (!hideSecondPass) {
      const isExtraordinary = (sDesignation === 'ordinary' &amp;&amp; !sDesignationHoldsUp) || (sDesignationHoldsUp === 'extraordinary' &amp;&amp; sDesignationHoldsUp);
      sContainsAllOrdinarySetsSecondPass = sContainsAllOrdinarySets &amp;&amp; refIsInSet &amp;&amp; !isExtraordinary;
      containsSecondPassReason = `Upon finding that the designation of &quot;${sDesignation}&quot; ${sDesignationHoldsUp ? 'CAN ' : 'CANNOT '} be true (see above), we now say that S is ${isExtraordinary ? 'extraordinary' : 'ordinary'}, so it does ${isExtraordinary ? 'NOT ' : ' '}contain only ordinary sets.`;
    }

    updateConditionEl({
      verdict: sContainsAllOrdinarySets,
      parent: sContainsAllOrdinaryEl,
      reason: containsReason
    });
    updateConditionEl({
      descriptionHTML: conditionTextHTML,
      verdict: sDesignationHoldsUp,
      parent: sDesignationHoldsUpEl,
      reason: sDesignationHoldsUpReason
    });

    updateConditionEl({
      hide: hideSecondPass,
      verdict: sContainsAllOrdinarySetsSecondPass,
      parent: sContainsAllOrdinarySecondPassEl,
      reason: containsSecondPassReason
    });
  }

  function updateConditionEl({ verdict, parent, descriptionHTML, reason, hide }) {
    parent.classList[verdict ? 'add' : 'remove']('condition-passed');
    if (descriptionHTML) {
      let desc = document.querySelector(`#${parent.id} .description`);
      if (desc) {
        desc.innerHTML = descriptionHTML;
      }
    }
    let verdictEl = document.querySelector(`#${parent.id} .verdict`);
    if (verdictEl) {
      // We don't make these all caps here because Wintersmith
      // will convert it to &lt;span class=&quot;caps&quot;&gt;YES&lt;/span&gt;
      verdictEl.textContent = verdict ? 'yes' : 'no';
    }
    let reasonEl = document.querySelector(`#${parent.id} .reason`);
    if (reasonEl) {
      reasonEl.textContent = reason;
    }
    parent.classList[hide ? 'add' : 'remove']('hidden');
  }

  function elOverlapsEl(el1, el2) {
    var bounds1 = el1.getBoundingClientRect();
    var bounds2 = el2.getBoundingClientRect();

    var left1IsInsideEl2,
      right1IsInsideEl2,
      top1IsInsideEl2,
      bottom1IsInsideEl2;

    left1IsInsideEl2 = nIsInsideRange(
      bounds1.left,
      bounds2.left,
      bounds2.right
    );
    if (!left1IsInsideEl2) {
      right1IsInsideEl2 = nIsInsideRange(
        bounds1.right,
        bounds2.left,
        bounds2.right
      );
    }

    top1IsInsideEl2 = nIsInsideRange(bounds1.top, bounds2.top, bounds2.bottom);
    if (!top1IsInsideEl2) {
      bottom1IsInsideEl2 = nIsInsideRange(
        bounds1.bottom,
        bounds2.top,
        bounds2.bottom
      );
    }

    return (
      (left1IsInsideEl2 || right1IsInsideEl2) &amp;&amp;
      (top1IsInsideEl2 || bottom1IsInsideEl2)
    );
  }

  function nIsInsideRange(n, lower, upper) {
    return n &gt;= lower &amp;&amp; n &lt;= upper;
  }
})();
&lt;/script&gt;

&lt;p&gt;&lt;br&gt;
Go ahead and try out all of the possible combinations. I hope you’ll see that there’s no options that result in both the definition of S as the set of all ordinary sets being respected &lt;em&gt;and&lt;/em&gt; S being either ordinary or extraordinary.&lt;/p&gt;
&lt;p&gt;(Due to me not coming to this concept with fresh eyes, I can’t really know for sure whether or not this will help you understand Russell’s Paradox. Please &lt;a href=&quot;mailto:jimkang@fastmail.com&quot;&gt;email me&lt;/a&gt; and let me know if it does not or does!)&lt;/p&gt;
&lt;p&gt;If you’re wondering what they did about this paradox, eight years after he introduced the paradox, Russell proposed redefining sets so that mathematicians could continue with their work. Sets were redefined so that they could not include themselves. Collections that included themselves are now called &lt;em&gt;classes&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I learned about Russell’s Paradox from the excellent graph theory book &lt;a href=&quot;https://www.goodreads.com/book/show/906275.Dots_And_Lines&quot;&gt;Dots and Lines by Richard J. Trudeau&lt;/a&gt;, which is &lt;a href=&quot;https://www.abebooks.com/servlet/SearchResults?sts=t&amp;cm_sp=SearchF-_-home-_-Results&amp;kn=&amp;an=richard+trudeau&amp;tn=dots+and+lines&amp;isbn=&quot;&gt;~$5 used&lt;/a&gt;!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Running your own email server (so you can have an automated mailing list)</title>
      <link>http://jimkang.com/weblog/articles/running-your-own-email-server/</link>
      <pubDate>Sat, 10  Aug 2019 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/running-your-own-email-server/</guid>
      <author></author>
      <description>&lt;p&gt;Earlier this month, I needed to be able to send automated email in order to send &lt;a href=&quot;https://tinyletter.com/bots&quot;&gt;daily roundups&lt;/a&gt; of stuff produced by my &lt;a href=&quot;https://smidgeo.com/bots/&quot;&gt;bots&lt;/a&gt;. Most of the APIs I saw for sending lots of email was for mass marketing (with the kind of pricing and data policies you’d expect to come along with that). So, I thought, email is well-established&lt;a href=&quot;http://jimkang.com/articles/running-your-own-email-server/#ps-email-history&quot;&gt;*&lt;/a&gt;, so it must be in reach of the common developer! I’ll just set up my own email server and mailing list.&lt;/p&gt;
&lt;p&gt;Well, you know how this is going to go.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;configuring-the-service-on-your-server&quot;&gt;Configuring the service on your server&lt;/h1&gt;
&lt;p&gt;The mildest part of this undertaking was installing and configuring a mail transfer agent (MTA). The MTA is the thing that the mail clients send mail to and receive mail from. The MTA relays that mail to other MTAs, which eventually route the mail to its ultimate destination.&lt;/p&gt;
&lt;p&gt;On Ubuntu 18 (and probably earlier versions), postfix is installed by default. Installation done!&lt;/p&gt;
&lt;p&gt;The configuration file for it is at &lt;code&gt;/etc/postfix/main.cf&lt;/code&gt;. I changed the following things in it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Set the domain to your domain. My domain happens to be smidgeo.com.
mydomain = smidgeo.com
# Set your hostname to be on your domain.
myhostname = mail.smidgeo.com
# Tell postfix to use say that mail from here some from @$mydomain.
myorigin = $mydomain
# Send notification emails about all of these kinds of problems to root@$mydomain.
notify_classes = resource, software, bounce, policy
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I then restarted postfix (&lt;code&gt;[sudo] service postfix restart&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;I tested by sending mail from the server (I tried both &lt;code&gt;sendmail&lt;/code&gt; and &lt;code&gt;mutt&lt;/code&gt;) to an address on Fastmail. After a while, I guessed that it wasn’t going to make it.&lt;/p&gt;
&lt;p&gt;This is the most brutal problem with debugging mail stuff: Sending mail isn’t instantaneous, and you can’t tell how long is a reasonable time to wait to see if something failed. Sometimes mail doesn’t get to its destination for an hour, then makes it after that.&lt;/p&gt;
&lt;p&gt;Tailing the mail log before you send an email helps to at least verify that postfix got the mail.  &lt;code&gt;tail -f /var/log/mail.log&lt;/code&gt;. A bunch of stuff will appear in the log if postfix gets your email and attempts to send it out. Sometimes, it’ll log that a relay rejected an email it sent, with a reason, which really helps!&lt;/p&gt;
&lt;h1 id=&quot;setting-up-dns-so-that-your-mail-server-appears-proper&quot;&gt;Setting up DNS so that your mail server appears proper&lt;/h1&gt;
&lt;p&gt;I had known about MX records, but I wasn’t sure how necessary they were. My mail wasn’t going through, so it looked like they were necessary. Referring to the DNS section of the &lt;a href=&quot;https://www.c0ffee.net/blog/mail-server-guide/#overview&quot;&gt;mail server guide&lt;/a&gt;, I created the following records:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;A&lt;/code&gt; record for the mail domain&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MX&lt;/code&gt; record to point to the mail domain&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TXT&lt;/code&gt; record that says &lt;code&gt;v=spf1 mx -all&lt;/code&gt; (I don’t actually know what that means.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Over in my postfix config, I initially did not have a fully qualified…something. It was either &lt;code&gt;myhostname&lt;/code&gt; or &lt;code&gt;myorigin&lt;/code&gt;. As a result, I got a &lt;code&gt;mail.log&lt;/code&gt; entry that let me know Fastmail had rejected my MTA’s email:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Jul 21 21:04:00 smallcatlabs-disruption-pod postfix/smtp[19654]: 42AE5DF3AD: to=jimkang@fastmail.com, relay=in1-smtp.messagingengine.com[66.111.4.72]:25, delay=1.1,delays=0.02/0.01/1.1/0.02, dsn=5.5.2, status=bounced (host in1-smtp.messagingengine.com[66.111.4.72] said: 504 5.5.2 root@smallcatlabs-disruption-pod: Sender address rejected: need fully-qualified address (in reply to RCPT TO command))
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Once I fully qualified the domain name, emails sent from my MTA were accepted by Fastmail’s relay!&lt;/p&gt;
&lt;h1 id=&quot;the-next-barrier-gmail&quot;&gt;The next barrier: Gmail&lt;/h1&gt;
&lt;p&gt;Since everyone’s on Gmail (actually one of the milder symptoms of the &lt;a href=&quot;https://concentrationcrisis.openmarketsinstitute.org/&quot;&gt;concentration crisis&lt;/a&gt;), I then tested by sending to Gmail. Gmail bounced my email. &lt;a href=&quot;https://support.google.com/mail/answer/81126#authentication&quot;&gt;They have guidelines that give hints about why they bounce stuff.&lt;/a&gt; The most likely reason was that I did not set up a reverse DNS record.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/reverse_DNS_lookup&quot;&gt;Reverse DNS&lt;/a&gt; is not a standard, and as far as I can tell, in practice, it’s only used to verify that a spammer is sending email using a hijacked domain. I had some trouble finding out how to set up a reverse DNS record. My domain registrar, Hover, told me they couldn’t do it and suggested other companies.&lt;/p&gt;
&lt;p&gt;I wanted to avoid something as disruptive as moving registrars, so I looked around a bit more on Duck Duck Go. Turns out that my virtual private server provider, Digital Ocean, provides reverse DNS for free. You just have to name your droplet (their branded term for a server instance) to match the domain name!&lt;/p&gt;
&lt;h1 id=&quot;and-yet-another-several-rakes-to-step-on&quot;&gt;And yet another several rakes to step on&lt;/h1&gt;
&lt;p&gt;With the reverse DNS record set up, Gmail stopped bouncing mail from my server. However, it also put it in the spam box 100% of the time.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/running-your-own-email-server/sideshow-bob-next-rake.gif&quot; alt=&quot;Sideshow Bob steps on the next rake&quot;&gt;&lt;/p&gt;
&lt;p&gt;To get out of Gmail’s spam box, there are a few dozen suggestions on &lt;a href=&quot;https://support.google.com/mail/answer/81126&quot;&gt;Google’s sender guidelines page&lt;/a&gt;, including using DKIM, SPF, and DMARC. Any one of those suggestions could have potentially taken days to implement, and there is no guarantee that following every one of them would get my emails out of the spam box.&lt;/p&gt;
&lt;p&gt;I’m not some kind of email superfan, so I decided to avoid getting into this world.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/running-your-own-email-server/sideshow-bob-rakes.png&quot; alt=&quot;More rakes for Sideshow Bob to step on&quot;&gt;&lt;/p&gt;
&lt;p&gt;Since the mail issue was getting trust from Gmail, I decided to leverage someone else’s reputation.&lt;/p&gt;
&lt;h1 id=&quot;tinyletter&quot;&gt;TinyLetter&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://tinyletter.com/&quot;&gt;Tinyletter&lt;/a&gt; is a mailing list service that I use for my &lt;a href=&quot;https://tinyletter.com/jimkang&quot;&gt;projects newsletter&lt;/a&gt;. Tinyletter is a MailChimp product that Google already trusts. So, if I had something compose my bot emails and send email through TinyLetter, I could get that email through to my mailing list subscribers that are on Gmail.&lt;/p&gt;
&lt;p&gt;In addition to having a UI in which you can compose and send emails to your mailing list, TinyLetter provides a secret email. You can send a message to that email, then TinyLetter will post that message to your mailing list.&lt;/p&gt;
&lt;p&gt;The complication — for a fully automated mailing list — is that it requires you to confirm that you want to send the email. TinyLetter replies to your email with another email asking you to reply to that second email without changing the subject in order to send the first email to the mailing list.&lt;/p&gt;
&lt;h1 id=&quot;auto-reply&quot;&gt;Auto-reply&lt;/h1&gt;
&lt;p&gt;The first thing I needed to do to get auto-replies to these confirmation requests working was to actually be able to recieve mail at my server. Receiving email hadn’t worked, and I didn’t care. Well, now the time for caring was at hand.&lt;/p&gt;
&lt;p&gt;One more of of the following measures have fixed receiving email at my server:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I opened port 25 to the world by running &lt;code&gt;ufw allow 25&lt;/code&gt;. (I neglected to check whether it was closed before I ran this, so it may not have mattered.)&lt;/li&gt;
&lt;li&gt;Properly included my domain in &lt;code&gt;mydestination&lt;/code&gt; in &lt;code&gt;/etc/postfix/mail.cf&lt;/code&gt;. Before, I had mail.smidgeo.com, even though the mail is actually addressed to @smidgeo.com. It has to match the part after the @ in emails sent to the server.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Next, I needed something to auto-reply to TinyLetter confirmation emails. I was hoping to not write something, so I checked out &lt;code&gt;vacation&lt;/code&gt;, a nicely established simple Unix program for sending auto-replies that say the user is on vacation.&lt;/p&gt;
&lt;p&gt;After getting it to work, I found out you can’t (as far as I could tell) make it reply using the &lt;code&gt;Reply-To&lt;/code&gt; field instead of the &lt;code&gt;From&lt;/code&gt; field of the incoming message.&lt;/p&gt;
&lt;p&gt;This ended my &lt;code&gt;vacation&lt;/code&gt; journey. TinyLetter confirmation emails come from some Mandrill remailer thing; sending your reply there does nothing. You have to send your reply to the email in the &lt;code&gt;Reply-To&lt;/code&gt; field for TinyLetter to actually send the message to the mailing list.&lt;/p&gt;
&lt;p&gt;So, I added my own little &lt;a href=&quot;https://github.com/jimkang/email-rss-sample/blob/master/respond-to-confirmation.js&quot;&gt;auto-reply program&lt;/a&gt; to &lt;a href=&quot;https://github.com/jimkang/email-rss-sample&quot;&gt;email-rss-sample&lt;/a&gt;, my Node package for grabbing RSS, formatting the sampled entries into HTML email, then sending them via &lt;code&gt;sendmail&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I hooked it up to receive incoming mail through stdin by adding this line to my &lt;code&gt;.forward&lt;/code&gt; file (people that went to college in the ‘90s may remember &lt;code&gt;.forward&lt;/code&gt; files as text files you just put a single email into):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  \&amp;lt;username that the program runs as&amp;gt;, &amp;quot;|&amp;lt;location of this project on your server&amp;gt;/respond-to-confirmation.js&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That pipes email for the user to the program, which checks various conditions, then shells out to sendmail to send a reply.&lt;/p&gt;
&lt;h1 id=&quot;what-i-ended-up-with&quot;&gt;What I ended up with&lt;/h1&gt;
&lt;p&gt;In the end, to email samples of what my bots did each day to a mailing list, I needed this system:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/running-your-own-email-server/bot-email-system.svg&quot; alt=&quot;Arrows pointing at lots of things involved in sending emails&quot;&gt;&lt;/p&gt;
&lt;p&gt;In the diagram above, every box represents some sort of program. Every arrow is a communication between a program with another program, containing a payload. The payload could be an email message, an RSS feed, or text. Each communication has a number indicating the order in which it is executed.&lt;/p&gt;
&lt;p&gt;The part where RSS posts from my bots are sampled are formatted and assembled into an HTML summary is fairly straightforward and unit testable. Once we move on to the volleys of emails, things become less deterministic and controllable.&lt;/p&gt;
&lt;p&gt;All that said, it’s been working fine for about a week. &lt;a href=&quot;https://tinyletter.com/bots&quot;&gt;Sign up&lt;/a&gt; if you want some art generated each day! I’ve only had to &lt;a href=&quot;https://tinyletter.com/bots/letters/what-the-bots-are-apologizing-for-today&quot;&gt;apolologize once&lt;/a&gt; so far.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;h1 id=&quot;-span-id-ps-email-history-p-s-why-i-thought-it-would-be-easy-span-&quot;&gt;&lt;span id=&quot;ps-email-history&quot;&gt;P.S. Why I thought it would be easy&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;Email is a technology that has been around since nearly the beginning of the Internet.&lt;/p&gt;
&lt;p&gt;Here in 2019, &lt;a href=&quot;https://morningconsult.com/2017/06/21/poll-gmail-dominates-email-use/&quot;&gt;70% of people use either Gmail or Yahoo Mail&lt;/a&gt;, at least according to that poll. But in the ‘90s (and before), email traffic was handled by servers run by a diverse group of institutions. If you went to a university, your email was likely received and relayed by some computers on campus. If you worked at a company, your work email probably also went through servers in your company’s buildings. ISPs (and there used to be many ISPs) each had their own email servers.&lt;/p&gt;
&lt;p&gt;This history made it seem like a stable technology that could be administered by someone with a 1999-level of technical understanding. Unfortunately, the spam wars (and maybe the consolidation of the control of email into very few hands), have made trust in email a much more complex issue.&lt;/p&gt;
&lt;p&gt;As a result, sending email from your own server, like so many things, is more or less out of the hands of a person that has a day job and a limited amount of time. It is the domain of large corporate aggregators that trust each other.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Weasley debugging</title>
      <link>http://jimkang.com/weblog/articles/weasley-debugging/</link>
      <pubDate>Sat, 02 Mar 2019 19:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/weasley-debugging/</guid>
      <author></author>
      <description>&lt;p&gt;Roughly 80% of the code in &lt;a href=&quot;https://github.com/jimkang/play-audio-url&quot;&gt;a module I just wrote&lt;/a&gt; will never come into play. This is because I was debugging a problem in the manner of Ron Weasley blaming Snape for some evil at the beginning of a Harry Potter book.
&lt;br&gt;&lt;br&gt;
In my case, Snape is the Safari web browser.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I’m predisposed to believing Safari is bizarre and the cause of many problems. When I hit an issue with it not allowing my web app to play audio though the other browsers did allow it, I started writing code before &lt;a href=&quot;https://tvtropes.org/pmwiki/pmwiki.php/Main/MistakenForEvidence&quot;&gt;making sure I knew the cause of a problem&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Yesterday, I said the purpose of the play-audio-url was this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Plays audio when it’s possible to play it via an HTMLAudioElement (as of 3/1/2019, this will work in Firefox and Chrome) and falls back to downloading the audio file and playing via an AudioContext if it can’t (as of 3/1/2019, Safari doesn’t allow HTMLAudioElement to play programmatically, even if the user has already clicked on the web page).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The above is a lie, it turns out.&lt;/p&gt;
&lt;p&gt;I got there because I was trying to make &lt;a href=&quot;http://jimkang.com/flame-buddy-sword-assistant/&quot;&gt;Flame Buddy Sword Assistant&lt;/a&gt; work on iOS.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(Flame Buddy Sword Assistant is a web version of a magic sword from a D&amp;amp;D game I’m running. In short, unlike most magic swords, Flame Buddy Sword Assistant isn’t there to serve the user; it’s there to deliver the user to another entity. It’s not unlike quite a few software and hardware products today. And so, while it does work as a sword (sometimes), it speaks a lot on the behalf of its providing entity.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;From a technical perspective, it’s like an old-school Flash soundboard, but it operates under with modern web audio requirements and restrictions.&lt;/p&gt;
&lt;p&gt;One of the recent restrictions is that a web page cannot play audio unless the user has first interacted with the page. Ostensibly, this is for the benefit of the user, however, this restriction does not apply to certain “important” whitelisted sites. Google chooses these sites; there’s no open process for deciding who the autoplaying elite are.&lt;/p&gt;
&lt;p&gt;That one is not a problem for the app; I designed it so people would have to click to hear something from Flame Buddy Sword Assistant (the much more difficult alternative being having it recognize speech). And it worked fine on Firefox and Chrome. As you may recall, it did not work on Safari and Mobile Safari.&lt;/p&gt;
&lt;p&gt;I implemented audio playing by setting the &lt;code&gt;src&lt;/code&gt; of an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement&quot;&gt;HTMLAudioElement&lt;/a&gt;, then calling the &lt;code&gt;play&lt;/code&gt; method on the element. On Safari, when I call that method, the promise returned by that method fails with an error with the message &lt;code&gt;&amp;quot;Operation not supported&amp;quot;&lt;/code&gt; and nothing more.&lt;/p&gt;
&lt;p&gt;I searched the web for that and got into all of these articles and discussions about autoplay policy in Safari. It turns out that ‘autoplay’ in these contexts &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Media/Autoplay_guide&quot;&gt;includes all sorts of programmatic media playing&lt;/a&gt;, not just stuff that plays when the page loads. I thought that, perhaps, Safari had misclassified my program as acting without interaction.&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;the-mistake&quot;&gt;This is where I should have backed up and made sure this was indeed Safari’s issue but did not.&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;I saw that some people said that you could work around the perceived restriction by playing buffers in &lt;code&gt;AudioContext&lt;/code&gt;. I was all, aw yea I’m gonna solve this problem that a lot of people have in a neat NPM package!&lt;/p&gt;
&lt;p&gt;I started &lt;code&gt;play-audio-url&lt;/code&gt;. It would try the &lt;code&gt;HTMLAudioElement&lt;/code&gt; to play a url (via the &lt;code&gt;Audio&lt;/code&gt; API). If that failed, it would fall back to use &lt;code&gt;AudioContext&lt;/code&gt; to do everything that &lt;code&gt;HTMLAudioElement&lt;/code&gt; would do:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download the file at the given url&lt;/li&gt;
&lt;li&gt;Decode the file contents to an uncompressed audio buffer&lt;/li&gt;
&lt;li&gt;Play the audio buffer via an AudioContext and SourceNode.&lt;/li&gt;
&lt;li&gt;Provide means to stop playback&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It worked on Firefox, and then I tried it in Safari.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Nothing played.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Same error. &lt;code&gt;Operation not supported&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;I found web pages talking about what formats Safari can understand. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats#Browser_compatibility&quot;&gt;Here’s a table from Mozilla&lt;/a&gt; that says that Safari does not support ogg files. My audio file was an ogg file. &lt;strong&gt;DANT DANT DAH&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I transcoded it to mp3. When I tried to play it, Safari &lt;em&gt;still&lt;/em&gt; played static.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(It was late in the evening now, though I hadn’t realized it at the time. I’m no longer accustomed to staying up late, as I have a miserable time doing kid stuff on low sleep.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;After a bit of poking around, including some amusing console mucking like this &amp;mdash;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; (new Audio).canPlayType(&amp;#39;audio/ogg&amp;#39;)
&amp;quot;maybe&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;mdash; and trying out sample rate adjustments, I tried playing the file in a player outside of the browser. &lt;em&gt;The file actually contained all static.&lt;/em&gt; I had messed up the transcoding. After encoding it as an mp3 correctly, Safari played it fine via the HTMLAudioElement without needing all of that fallback code at all.&lt;/p&gt;
&lt;p&gt;I don’t think I literally slapped my forehead, but I should have.&lt;/p&gt;
&lt;p&gt;If I had looked into file formats &lt;a href=&quot;http://jimkang.com/articles/weasley-debugging/#the-mistake&quot;&gt;way back here&lt;/a&gt;, I would not have lost sight of the truth and simply converted my audio files to mp3 and solved the problem with no code.&lt;/p&gt;
&lt;p&gt;That sucked. Still, &lt;code&gt;play-audio-url&lt;/code&gt; is a convenient, if inessential, shorthand for the stuff you have to do with &lt;code&gt;HTMLAudioElement&lt;/code&gt;/&lt;code&gt;Audio&lt;/code&gt; if you want to download and play an audio file. Also, I was able to brush up on WebAudio. Did you know that &lt;code&gt;stop&lt;/code&gt; is no longer a method on AudioContext?&lt;/p&gt;
&lt;p&gt;(I’m also writing this post so that I feel like I’m wrenching more value out of the mistake.)&lt;/p&gt;
</description>
    </item>
    <item>
      <title>How to make a tl;dr control</title>
      <link>http://jimkang.com/weblog/articles/tldr-control/</link>
      <pubDate>Tue, 15 Jan 2019 19:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/tldr-control/</guid>
      <author></author>
      <description>&lt;p&gt;A while back, a colleague at work pointed out a nifty tl;dr slider on the &lt;a href=&quot;https://parametric.press/&quot;&gt;Parametric Press site&lt;/a&gt;. You can move it all the way to the left to get the gist of the article. The further you move it to the right, the more words (and details) you’ll get.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I took a peek to see how it was built, and it appears to be tied into &lt;a href=&quot;https://github.com/idyll-lang/idyll&quot;&gt;Idyll&lt;/a&gt;, which renders things with React. Most of it is implemented in a React component named Conditional which sets the style tag on a div to &lt;code&gt;display: none&lt;/code&gt; if some condition &amp;mdash; probably specified in each tag &amp;mdash; isn’t met.&lt;/p&gt;
&lt;p&gt;Idyll looks neat, but what if you want to apply this to a simple web page that you don’t want to convert to it? What if, like me, you avoid React when possible?&lt;/p&gt;
&lt;p&gt;Fortunately, the concept is really simple, which is the best kind of clever concept. I thought for a moment about building some kind of module so everyone that uses modules could add such a slider, but the best way to enable people to get this into their web app is to just explain it. A module would have to bend over backward to anticipate the varying conditions it might be used in. Whereas a person understanding the concept can easily apply it.&lt;/p&gt;
&lt;p&gt;So, here it is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You put a slider on the page. (An input element with type &lt;code&gt;range&lt;/code&gt;.)&lt;/li&gt;
&lt;li&gt;You add JS code that listens to change events from the slider and uses the values from the slider to modify the classes on the &lt;code&gt;body&lt;/code&gt; element. For example, if the user moves the slider to 3, then it adds the class &lt;code&gt;show-3&lt;/code&gt; to the body. Here’s an implementation:

&lt;pre&gt;
  var slider = document.getElementById(‘tldr-slider’);
  slider.addEventListener(‘change’, onTLDRChange);

  const maxLevel = +slider.max;

  function onTLDRChange() {
    updateTLDRClasses();
  }

  function updateTLDRClasses() {
    const level = Math.round(slider.value);
    for (var i = 0; i &amp;lt;= maxLevel; ++i) {
      let className = “show-“ + i;
      if (i &amp;lt;= level) {
        document.body.classList.add(className);
      } else {
        document.body.classList.remove(className);
      }
    }
  }

  updateTLDRClasses();
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;You create a CSS class like &lt;code&gt;tldr&lt;/code&gt; that has the property &lt;code&gt;display: none&lt;/code&gt;. You put this class on every element that might possibly be hidden.&lt;/li&gt;

&lt;li&gt;Also, you create CSS rules for each level of detail you plan to have. Each one will set their element to &lt;code&gt;display: block&lt;/code&gt; (or &lt;code&gt;flex&lt;/code&gt; or what have you).  The conditions they’ll look for is “the ‘level’ class is a child of the ‘show’ class.” For example:
&lt;pre&gt;
.show-2 .lvl-2 {
  display: block;
}&lt;/pre&gt;

How the class is used:
&lt;pre&gt;
&amp;lt;div class=”tldr lvl-2”&amp;gt;Hey, this isn’t very important information! It will
be hidden if the slider has a value of less than 2!&amp;lt;/div&amp;gt;
&lt;/pre&gt;
&lt;/li&gt;&lt;/ol&gt;

&lt;p&gt;Now, when the user moves the slider to 2, &lt;code&gt;body&lt;/code&gt; will have  the classes &lt;code&gt;show-1&lt;/code&gt; and &lt;code&gt;show-2&lt;/code&gt;. An element that has the classes &lt;code&gt;tldr&lt;/code&gt; and &lt;code&gt;show-2&lt;/code&gt; will then satisfy the rule “child of show-2 that has the class lvl-2”, and display will be set to &lt;code&gt;block&lt;/code&gt; instead of the default &lt;code&gt;none&lt;/code&gt; (which comes from the &lt;code&gt;tldr&lt;/code&gt; class).&lt;/p&gt;
&lt;p&gt;When the user moves the slider down to 1, &lt;code&gt;body&lt;/code&gt; will have  the class &lt;code&gt;show-1&lt;/code&gt;, and the condition for the above rule will no longer be met, so &lt;code&gt;display&lt;/code&gt;will stay &lt;code&gt;none&lt;/code&gt;, and the element won’t show.&lt;/p&gt;
&lt;p&gt;So, knowing this, you’ll have something you can apply in any framework (or lack thereof), you’ll understand how it actually works, and it’ll be (negligibly) more performant because only one DOM element’s properties are being modified.&lt;/p&gt;
&lt;p&gt;If you want a working example, I was looking at this so I could have a tl;dr control on my &lt;a href=&quot;http://jimkang.com/resume/&quot;&gt;resume site&lt;/a&gt;. You can use your browser’s dev tools to check it out or see the &lt;a href=&quot;http://github.com/jimkang/resume/&quot;&gt;source here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Platform-free bots</title>
      <link>http://jimkang.com/weblog/articles/platform-free-bots/</link>
      <pubDate>Sun, 14 Jan 2018 19:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/platform-free-bots/</guid>
      <author></author>
      <description>&lt;p&gt;I’ve made &lt;a href=&quot;https://twitter.com/deathmtn/lists/robotic-council-of-doom/members&quot;&gt;several bots&lt;/a&gt; over the years. They’re mostly Twitter bots. Some of them are throwaway larks, and some of them only work in the moment. If Twitter becomes too harmful to humanity to gift with free content, I’m OK with letting those go. However, there are many bots whose fate I want to keep in my own hands, rather than Twitter’s. To that end, I built a &lt;a href=&quot;https://github.com/jimkang/static-web-archive-on-git&quot;&gt;static site updater&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;Motivation&lt;/h3&gt;

&lt;p&gt;For a long time, I’ve been bothered by concerns that that are often discussed in the bot community, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What if the company behind Twitter (or any other platform, really) goes out of business?&lt;/li&gt;
&lt;li&gt;What if people just stop using Twitter?&lt;/li&gt;
&lt;li&gt;What if Twitter just decides to ban your bot and not explain it? Or &lt;a href=&quot;http://jimkang.com/weblog/articles/twitter-bot-hellban/&quot;&gt;hellban it&lt;/a&gt;?&lt;/li&gt;
&lt;li&gt;What if, in the future, &lt;a href=&quot;https://www.wired.com/story/after-fcc-vote-net-neutrality-fight-moves-to-courts-congress/&quot;&gt;internet access is hard to come by&lt;/a&gt;?&lt;/li&gt;
&lt;li&gt;What if you want to find old tweets by your bot? This is notoriously difficult for any Twitter user right now.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Twitter does have an archive request feature. You can request your account archives from right now by going to settings in the Twitter web app. However, this doesn’t give me much comfort because:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The archives do not include images or video, which are the main medium of some bots.&lt;/li&gt;
&lt;li&gt;Under duress, I’m not sure you’ll be able to get the archives. When Vine shut down, I requested my archive. I got a notification that said the archiving process started, but it didn’t complete before the company and service shut down. I never got my archive.&lt;/li&gt;
&lt;li&gt;Twitter can stop offering the archives at any time.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I could have my bots crosspost to Tumblr and Mastodon, and some do. The issue is that, although the eggs are now in multiple baskets, the baskets still have many of the same problems: various sorts of potential inaccessiblity&lt;/p&gt;
&lt;p&gt;There is something that is likely to last longer than any social media platform, though: &lt;strong&gt;HTML &amp;mdash; the nearly three-decades-old Hypertext Markup Language.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;That&lt;/em&gt; is the format I need my bots’ output to be in. I meant to  make them post to plain HTML for a while, but inertia is hard to fight.&lt;/p&gt;
&lt;p&gt;When Vine shut down, I had a Vine account that was very valuable to my extended family. So, I built a &lt;a href=&quot;https://github.com/jimkang/off-brand-vine&quot;&gt;service that handled simple video posting&lt;/a&gt; on my own server. Doing this gave me some code I could reuse to finally make my platform-free bot archives.&lt;/p&gt;
&lt;h3&gt;How to use it&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jimkang/static-web-archive-on-git&quot;&gt;static-web-archive-on-git&lt;/a&gt; is a Node module that will maintain a static weblog for you. From the README:&lt;/p&gt;
&lt;blockquote&gt;The idea here is that you have a GitHub repo that is the source for a lightweight static weblog, and you have a program that you want to update it programmatically.&lt;/blockquote&gt;

&lt;p&gt;If you have a bot written in Node, it can take whatever it posts to Twitter or Mastodon (some text and an image or a video) and also post that to its static web archive by calling a function.&lt;/p&gt;
&lt;p&gt;By doing so, it will build an archive of the bot’s content &amp;mdash; including media &amp;mdash; that is &lt;em&gt;extremely portable&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;It stores the html (the index pages and single-entry pages, classic weblog-style) in a GitHub repo. With this, you can do any of the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make the default branch of that repo &lt;code&gt;gh-pages&lt;/code&gt; and &lt;a href=&quot;https://pages.github.com&quot;&gt;automatically get a working web site&lt;/a&gt; at &lt;code&gt;your-username.github.io/repo-name&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Pull down the contents of that repo to some server you control that has a web server on it and serve it from there.&lt;/li&gt;
&lt;li&gt;Send the contents to the &lt;a href=&quot;https://archive.org&quot;&gt;Internet Archive&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Zip it all up and keep it wherever you think is safe and let future archaeologists find it. (If they have a thing that can read images and text, they’ll figure it out if they understand your language. If they have a thing that reads HTML, then they’ll be golden.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Whatever you do with your HTML, it won’t matter what Twitter does.&lt;/p&gt;
&lt;p&gt;I’ve already integrated it into my bot &lt;a href=&quot;https://twitter.com/linkfinds&quot;&gt;linkfinds&lt;/a&gt;. Its archive is over at &lt;a href=&quot;http://jimkang.com/linkfound/&quot;&gt;jimkang.com/linkfound&lt;/a&gt;. I’m going to try to get all of my bots posting to archives. I’m sure I’ll find bugs, but I’m fairly sure it’ll eventually work for most of them.&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;archive-list&quot;&gt;&lt;/a&gt;
&lt;strong&gt;Update, 1/31/2018:&lt;/strong&gt; So, I’ve set up archiving for most of my bots. It’s surprisingly nice to see them outside of the Twitter frame. The design is not complete for some of them, but they’re all functional. Check ‘em out:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/linkfound/&quot;&gt;Link Finds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/ourmagickfuture/&quot;&gt;Our Magick Future&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/hail-ants-archive/&quot;&gt;Hail Ants Bot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/snakepeoplebot/&quot;&gt;Snake People Bot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/memberfacts/&quot;&gt;Member Facts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/spaceweirdnessbot/&quot;&gt;Space Weirdness Bot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/bot-in-the-street/&quot;&gt;Bot in the Street&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/improvebot/&quot;&gt;Improvebot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/demake-archive/&quot;&gt;Demake Bot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/pokemon-nypl-archive/&quot;&gt;Pokémon in the NYPL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/fuckingshakespeare/&quot;&gt;Fucking Shakespeare&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/businesswords-archive/&quot;&gt;Business Words&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/contingency-messages/&quot;&gt;Contingency Messages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/cleromancer/&quot;&gt;Cleromancer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/autocompletejok/&quot;&gt;Autocomplete Jokes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/monstersubtypes/&quot;&gt;Monster Subtypes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/autocompleterap-archive/&quot;&gt;Autocomplete Rap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/2020-candidates/&quot;&gt;2020 Candidate Bot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/godtributes-archive/&quot;&gt;GODTRIBUTES&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/hills-archive/&quot;&gt;Hills bot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Limitations&lt;/h3&gt;

&lt;p&gt;There are quite a few limitations to this approach, many of which you may have noticed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;This only works for bots whose meaning can be divorced from a particular medium.&lt;/strong&gt; Much of what people like about &lt;a href=&quot;https://twitter.com/godtributes&quot;&gt;godtributes&lt;/a&gt;, for example, is how it responds to them. The lion’s share of its tweets are responses, and they are mostly only meaningful to the person it’s replying to. That cannot be captured through this kind of archiving, as it’s only part of the story.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Archives cannot replicate the experience of bots dropping into your life by making tiny, occasional visits.&lt;/strong&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;The current implementation depends on another massive VC-funded company, GitHub.&lt;/strong&gt; Like all companies in this position, it may not survive that long or may become too detrimental to the world to touch. &lt;/p&gt;
&lt;p&gt;The shutting-down concern is mitigated by the fact that it’s pretty easy to regularly and incrementally download the contents posted to GitHub (that’s what git is made for).&lt;/p&gt;
&lt;p&gt;If I need to get off of the platform because I want nothing to do with it, it is actually easy to remove the GitHub parts from &lt;code&gt;static-web-archive-on-git&lt;/code&gt; and have it maintain a local archive of HTML files. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This, however, comes with the trade-off that, should it mess up in a destructive way, everything could be lost. You would not be able to get everything back after an accidental wipe by reverting to a previous commit as you could with a git-backed archive.&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;
&lt;li&gt;However, this problem itself could be mitigated by backing the whole thing up regularly.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;It is Node-specific.&lt;/strong&gt; At some point, I can plug this into a simple REST service so that any bot can use it, regardless of how it is built as long as it can make an http request. It’s not known if anyone really needs this yet, so I haven’t bothered.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Updating the archive is slow&lt;/strong&gt; because there are stalling &lt;code&gt;setTimeout&lt;/code&gt; calls everywhere.&lt;/p&gt;
&lt;p&gt;Internally, the GitHub API makes updates via commits. &lt;a href=&quot;https://developer.github.com/v3/repos/contents/#update-a-file&quot;&gt;The update REST method&lt;/a&gt; does not take a parent commit SHA because it figures out which one it should use on its own. Unfortunately, it also seems to respond to REST calls before it actually applies whatever commit it creates &lt;em&gt;across the board&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I’ve observed the following race condition:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We send an http request for Update 1 via the &lt;a href=&quot;https://developer.github.com/v3/repos/contents/#update-a-file&quot;&gt;GitHub API update file method&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The Github API sends a response to Update 1 that indicates that it worked fine.&lt;/li&gt;
&lt;li&gt;Thinking that the branch is updated, we send a request for Update 2.&lt;/li&gt;
&lt;li&gt;The GitHub API responds to Update 2 with an error status code (409), citing that it’s a commit based on a commit that is &lt;strong&gt;not&lt;/strong&gt; the current tip of the branch.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I don’t know what’s happening internally, but my guess is that a commit created for an API call does not propagate to all API servers by the time a response is sent back for that API call. e.g. Something like this is going on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Commit 0 is the tip of the branch on all GitHub machines.&lt;/li&gt;
&lt;li&gt;Update 1 is received by Machine A, and Commit 1 is created, using Commit 0 as a parent.&lt;/li&gt;
&lt;li&gt;Machine B applies Commit 1; Commit 1 is the tip of the branch on Machines B, D, and some other GitHub machines now, but not on Machine C.&lt;/li&gt;
&lt;li&gt;A response for Update 1 is sent back by some machine.&lt;/li&gt;
&lt;li&gt;Update 2 happens to be received by Machine C, which does not have the latest yet, and Commit 2 is created, using Commit 0 as the parent.&lt;/li&gt;
&lt;li&gt;Machine D attempts to apply Commit 2. Here, Commit 1 is the tip of the branch, so it fails.&lt;/li&gt;
&lt;li&gt;A response for Update 2 is sent back with an error message like &lt;code&gt;&amp;quot;is at 1 but expected 0&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The above scenario is pure speculation, but the following is definitely true: &lt;strong&gt;Updates are not atomic.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The setTimeouts are an attempt to space out update calls in order to avoid these wrong-commit-parent clashes. They don’t always, but they do most of the time. I’ve used &lt;a href=&quot;https://github.com/jimkang/off-brand-vine&quot;&gt;this code&lt;/a&gt; for about eight months as of 1/15/2018, and it’s mostly been fine, FWIW. Obviously, it’s not going to work out for extremely real-time-dependent archiving purposes, though.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;

&lt;p&gt;Well, that’s it. May you enjoy being platform-free via one method or another!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Weird, but worth it</title>
      <link>http://jimkang.com/weblog/articles/weird-but-worth-it/</link>
      <pubDate>Fri, 13 Oct 2017 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/weird-but-worth-it/</guid>
      <author></author>
      <description>&lt;style&gt;
li p {
  margin-bottom: 0.5em;
}

li {
  line-height: 1.3em;
  padding-left: 0;
}

ul {
  margin-top: 0.5em;
}

.caption {
  text-align: center;
  font-style: italic;
  margin-top: 0;
  margin-bottom: 1em;
}

&lt;/style&gt;

&lt;p&gt;I have a web page at which I was rendering 14,000 DOM elements. &lt;a href=&quot;http://jimkang.com/observatory/&quot;&gt;(It’s this work-in-progress visualizer for GitHub projects. And maybe someday other projects, too?)&lt;/a&gt; Things were getting choppy under that load, especially on the phone.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;observatory-screenshot.png&quot; alt=&quot;Screenshot of Observatory&quot; width=&quot;100%&quot;&gt;&lt;/img&gt;&lt;/p&gt;
&lt;div class=&quot;caption&quot;&gt;Above: A few of the 14,000 DOM nodes&lt;/div&gt;

&lt;p&gt;To mitigate the clunkiness, I tried:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Throttling the render calls. (Observatory re-renders each time it gets new chunks of data so as to not make users sit there for a long time with a blank page.)&lt;/li&gt;
&lt;li&gt;Resizing and repositioning the text labels to fit inside of their areas much less frequently. (In order to resize and reposition, Observatory had to make expensive calls to getBBox.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These things helped a little, but on iOS, I still had to wait seconds for a response when I would tap one of the cells. Sometimes, more than ten seconds. (When a cell is clicked, a detail overlay is supposed to come up, telling you more about the deed represented by the cell.)&lt;/p&gt;
&lt;p&gt;At this point, I considered a video-game-style scheme in which Observatory would only render things contained in a fixed-size viewport. It’d have to assess what data in the treemap (which I am building via d3-hierarchy) would be visible in that viewport, then render just that. Then, I’d have to implement some control scheme for moving the viewport.&lt;/p&gt;
&lt;p&gt;Guh.&lt;/p&gt;
&lt;p&gt;That was complex enough that I then decided it was time try rendering to canvas instead of SVG.
The reasons I am hesitant to use canvas for visualizations, despite it being faster and less memory-intensive than SVG are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SVG is far more easily debugged. Because SVG elements appear in the DOM, if something is going wrong, you can right-click on whatever looks wrong in the browser, then inspect that SVG element. You can even change its properties right on the spot. This lets you experiment live with potential fixes or, at the least, gets you more information. This has been invaluable to me while working on &lt;a href=&quot;http://jimkang.com/quadtreevis/&quot;&gt;An Interactive Explanation of Quadtrees&lt;/a&gt; and other complex renderings.&lt;/li&gt;
&lt;li&gt;In the past, I’ve found raster graphics situations (Unity, Core Graphics) to be very finicky about rendering crisp lines.&lt;/li&gt;
&lt;li&gt;You can put event handlers on individual SVG elements. You can easily and reliably get notified about clicks or taps to a &amp;lt;path&amp;gt; or &amp;lt;rect&amp;gt; or even a &amp;lt;g&amp;gt;. By contrast, because the content of a &amp;lt;canvas&amp;gt; is basically just a picture, it’s all on you to figure out what’s being clicked.&lt;/li&gt;
&lt;li&gt;Accessibility: A treemap isn’t easily comprehendible to someone without sight, but at least it exists in the DOM and can be detected. A canvas, again, is more or less just an image.
Despite all that, converting to rendering to canvas didn’t go that badly! (Here’s most of the changes in code form, if you’re into that.) I had to do some odd things, though, which I’ll explain below.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Step on a crack, break your mama’s back&lt;/h1&gt;

&lt;p&gt;When rendering 1px borders around the cells in my treemap, I had to position lines so that their centers fell on the middle of pixels (e.g. 1.5 instead 1.0) so that the line’s width fell entirely within one pixel instead of at the border of two.&lt;/p&gt;
&lt;h1&gt;Imperative, not declarative&lt;/h1&gt;

&lt;p&gt;&amp;lt;canvas&amp;gt; elements don’t accept width values in percentages, so I had to start with a fixed pixel width value, then adjust it in JavaScript while rendering.&lt;/p&gt;
&lt;h1&gt;Secret canvases&lt;/h1&gt;

&lt;p&gt;As mentioned above, you have to do a bunch of work to catch clicks to shapes you’ve drawn in canvas. Fortunately, Yannick Assogba wrote a &lt;a href=&quot;https://bocoup.com/blog/2d-picking-in-canvas&quot;&gt;really good article&lt;/a&gt; about this technique in which you create a secret hidden &amp;lt;canvas&amp;gt; and draw the same shapes to it that you do to your “display” &amp;lt;canvas&amp;gt;. In the hidden one, you assign unique colors to each shape. (Assuming you don’t want to make your hidden canvas transparent, which costs extra, performance-wise, you can have as many shapes as there are colors, and there are 0xFFFFFF of them–16,777,215 colors.) You keep a map from those unique colors to the associated datum or shape. Then, when someone clicks on the hidden canvas, you find the color of the pixel that was clicked and can use the map to find out what datum or shape is associated with it!&lt;/p&gt;
&lt;p&gt;In Yannick’s example, he only renders the hidden canvas in the event handler for the main canvas click. That’s intense, and while it does save on renders, I was a concerned that it’d make the event handler slow. In retrospect, I could see the render time being imperceptible. But I went with rendering every time the main, visible canvas was rendered. This approach happens to perform fine on mobile and desktop, so I left it like that.&lt;/p&gt;
&lt;p&gt;The article puts the event handler on the main, visible canvas, then uses the click coordinates from that canvas to look up colors in the hidden canvas. The HTML is not specified, but I assume this means the hidden canvas is meant to be hidden by placing it off-screen. Having had some bad experiences with putting elements off-screen (left: -10000px) when doing some “menu that slides in from the left” stuff a few years ago, I decided to avoid that. I just stuck the hidden canvas on top of the main, visible canvas. Of course, to do that, I had to mess with position: absolute, but I lived.&lt;/p&gt;
&lt;p&gt;I had apprehensions about this technique because it is indeed a hack. (Also, it reminds me of the ancient HTML 2.0 &amp;lt;imagemap&amp;gt;.) But it works well, and I see another potential use for it: Easily making click targets diverge in size and shape from their visually rendered counterparts.&lt;/p&gt;
&lt;p&gt;&lt;h1&gt;Smudgy text&lt;/h2&gt;&lt;/p&gt;
&lt;p&gt;When I rendered text onto the canvas with fillText, I got some horrible, horrible smudgy text. Nothing sends the subliminal message this is crap like text with mealy blurriness or ragged aliasing. Googling led me to believe there is no reliable way to get crisp canvas text, but definitely let me know if you know how!&lt;/p&gt;
&lt;p&gt;What I ended up doing was bringing back an SVG layer just for text. I put it over my visible canvas layer and added text elements. I end up creating a few hundred of those, with transforms on them. It all seems to still perform snappily.&lt;/p&gt;
&lt;p&gt;I still use canvas when figuring out how to size the text and whether or not it should be rotated. (If the label for a region is taller than it is wide, it should be rotated so that it is written vertically.) I use the canvas context’s measureText method to determine how wide the label will be.&lt;/p&gt;
&lt;p&gt;Before, I had to use the SVGtext element’s getBBox method, which was incredibly slow. (Sorry, I don’t have the profile anymore, but if you use it in your code, Chrome warns you about it specifically in the console.) By contrast, measureText can be called many times on every render without any problem. In fact, it’s so fast that the next time I have to figure out what the size of an SVG text element will be at a given font and size, I might use a hidden canvas to do it, even if there is no other reason for the canvas.&lt;/p&gt;
&lt;p&gt;Also, SVG text is readable by screen readers, so this extra SVG layer may be worth having, even if you crisp canvas text was available.&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;So, my project now uses this uncomfortable-seeming Canvas/SVG Combination Platter. It’s strange, but it’s also snappy and consistent! I’m glad I tried it.&lt;/p&gt;
&lt;p&gt;P.S. &lt;a href=&quot;https://www.youtube.com/watch?v=s7eGq1VXupw&quot;&gt;This talk about canvas by Kai Chang&lt;/a&gt; &lt;a href=&quot;https://bl.ocks.org/syntagmatic/raw/c157cd20973d7f92e913fac28cfa8a56/#1&quot;&gt;(slides)&lt;/a&gt; from OpenVis Conf last year is really good.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Organizational failure at a garage</title>
      <link>http://jimkang.com/weblog/articles/garage-organizational-failure/</link>
      <pubDate>Sat, 25 Feb 2017 19:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/garage-organizational-failure/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;b&gt;Saturday, 11 AM&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;I talked to a friendly manager at a garage in the morning on Saturday. He explained a problem with my car via a demonstration, which was novel to me. It won me over and made me feel I could trust this garage. He said they could probably have the problem fixed by 6 PM that night, but if not certainly by Sunday. I agreed to the repair and left.&lt;/p&gt;
&lt;p&gt;That turned out to be a mistake.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;Saturday, 5:44 PM&lt;/h3&gt;

&lt;p&gt;I called them later that day on Saturday, at 5:44 PM. I talked to the friendly manager again, and he explained that they needed a part and would fix it first thing Sunday morning. I could pick up my car at noon on Sunday, he told me. I said that sounded good.&lt;/p&gt;
&lt;h3&gt;Sunday, 11:50 AM&lt;/h3&gt;

&lt;p&gt;On Sunday, I called at 11:50 AM. The person who answered said my car hadn’t been worked on. He said the mechanic would be in any minute, and that they’d let me know when they worked on it. I told him that the manager said it would be ready to pick up by 12. The person got agitated and rushed me off the call. (Also, he called me “honey”, which was odd.)&lt;/p&gt;
&lt;h3&gt;Sunday, 12:33 PM&lt;/h3&gt;

&lt;p&gt;After hearing nothing, I called back at 12:33 PM. The mechanic had still not arrived.&lt;/p&gt;
&lt;p&gt;I was disappointed, but since it was a non-critical repair, I decided I’d just skip the repair, take back the car, get groceries, and have the repair done somewhere else next weekend.&lt;/p&gt;
&lt;p&gt;I said OK, I’m going to just get the car. &lt;i&gt;Don’t&lt;/i&gt; do the repair even if the mechanic does come in.&lt;/p&gt;
&lt;p&gt;The person answering the phone was the same one I talked to last call. He said OK, but I couldn’t pick it up until the mechanic came in because the car was on a lift. I asked him to please call me when the mechanic does come in.&lt;/p&gt;
&lt;h3&gt;Sunday, 2:55 PM&lt;/h3&gt;

&lt;p&gt;No word. I called again at 2:55 PM. A different person answers.&lt;/p&gt;
&lt;p&gt;I told him that I wanted to pick up my car and asked them to &lt;b&gt;not&lt;/b&gt; do the repairs. He replied that the repairs have already been done.&lt;/p&gt;
&lt;p&gt;I found it disturbing that this garage ignored my request, but I was glad that at least I could get the car back. I walked to the garage.&lt;/p&gt;
&lt;p&gt;When I got to the garage, there was a single employee in the office. He said that he tried to call me and tell me not to come down, but I didn’t answer. I may have missed the call.&lt;/p&gt;
&lt;p&gt;He explained that my car was not there at the garage.&lt;/p&gt;
&lt;p&gt;Where is it, then? I asked. I would like it back.&lt;/p&gt;
&lt;p&gt;He replied that:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The mechanic should have been in but he didn’t come in.&lt;/li&gt;
&lt;li&gt;The garage is part of a “big business” that has many garages, and it could be at one of those garages; he doesn’t know—he’s just the gas attendant.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Neither of those responses explained where my car is. Also, no one mentioned before that my car might be shipped to another location.&lt;/p&gt;
&lt;p&gt;I asked if I could talk to his manager. He didn’t like this, but he picked up the phone, called, and asked about my car. After he hung up, he told me his manager didn’t know. He said I should just call back tomorrow.&lt;/p&gt;
&lt;p&gt;I asked if I could have the manager’s number and talk to him directly. He replied no, his manager was busy and with his family. Then, I asked if I could talk to the mechanic he mentioned. He also said no to that.&lt;/p&gt;
&lt;p&gt;He went out to service some gas customers that had pulled in.&lt;/p&gt;
&lt;p&gt;There was another customer in the office with me. She explained that she was in the same situation. She let them do some extremely expensive repairs and was originally told they’d be done Saturday. The garage still did not have her car ready and could not even tell her where her car was. She needed to pick it up now so she could drive to visit her husband in a nursing home that day.&lt;/p&gt;
&lt;p&gt;I offered to contact her if I got a hold of the manager or the mechanic or found where my car was. She declined, wished me luck, and went home.&lt;/p&gt;
&lt;p&gt;When the gas attendant (the sole available garage employee) came back in, I asked again: Is there a manager I can talk to or another way I could get my car back now? Again, he said no.&lt;/p&gt;
&lt;p&gt;I walked out to go around the block to see if it was parked on the street.&lt;/p&gt;
&lt;p&gt;It was not.&lt;/p&gt;
&lt;h3&gt;Sunday, 3:25 PM&lt;/h3&gt;

&lt;p&gt;I could wait to see if things worked out. Now, however, I doubted everything about this business. I felt that if I didn’t deal with it today, there was a chance I’d have to deal with the same issue tomorrow, except I’d have to do it under the constraints of a weekday.&lt;/p&gt;
&lt;p&gt;Also, I now found it minutely possible that my car was lost, stolen, damaged, or in another condition the garage wanted to hide. I called the Cambridge Police non-emergency number to see if they had any advice on the situation.&lt;/p&gt;
&lt;p&gt;I explained, and the police officer on the phone asked where I was and said he’d send an officer out. I was a little surprised and said I didn’t want to cause trouble — I just wanted to get my car. The police officer said he understood and that they’d get it straightened out. He reacted so quickly that I think there is a chance that this a common issue.&lt;/p&gt;
&lt;p&gt;While I was waiting, I wrung my hands about whether I was being unreasonable or not. On one hand, it’s not the fault of the person at the garage that no one told him where my car is. I have seen this cruel firewall of accessibility at many companies, which puts low-ranking employees and upset customers on one side and the actual creators of the problems safely isolated on the other. &lt;/p&gt;
&lt;p&gt;On the other, I have the right to know where my car is and to get it back at the time they communicated that I could. I had already tried asking directly for this access.&lt;/p&gt;
&lt;p&gt;When the police officer arrived, I explained again that I didn’t want any hardships for anyone — I just needed my car back. We went into the office, and he basically asked the same things I did, except more directly.&lt;/p&gt;
&lt;p&gt;This time, the garage employee called his manager and left a message asking about my car and noting that the police were here. He also called that manager’s manager, who spoke to us.&lt;/p&gt;
&lt;p&gt;The “big boss” said that he didn’t know where my car was but that he’d find out and get us a call back.&lt;/p&gt;
&lt;p&gt;The police officer left and said to call them back if they didn’t produce the car. I thanked him, then sat in the office for an extremely awkward wait.&lt;/p&gt;
&lt;p&gt;The manager I had originally talked to on Saturday called. Over the phone, he explained that the car actually was still in the garage on a lift. &lt;i&gt;It had never actually left&lt;/i&gt;. &lt;/p&gt;
&lt;p&gt;The employee in the office then actually blamed &lt;b&gt;me&lt;/b&gt; for not knowing this, even though &lt;em&gt;he&lt;/em&gt; was the one who told me my car was not here. I had taken him at his word.&lt;/p&gt;
&lt;p&gt;The manager apologized on this call and also offered the defenses that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This normally doesn’t happen.&lt;/li&gt;
&lt;li&gt;The mechanic is the root of these problems.&lt;/li&gt;
&lt;li&gt;The employee in the office right now is just a gas attendant and doesn’t actually know how things work.&lt;/li&gt;
&lt;li&gt;Mechanics don’t normally work on Sundays.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;During the discussion, I tried to make the points that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It’s OK to be behind on work, but it is wrong and possibly illegal to deny customers access to their car after the point at which the business says it will be available.&lt;/li&gt;
&lt;li&gt;It is wrong to not be able to tell customers where there car is.&lt;/li&gt;
&lt;li&gt;It is terrible to give customers the impression that their car has been moved to another site without their consent.&lt;/li&gt;
&lt;li&gt;If the only person working at the office is a gas attendant who is not able or intended to know where the customers’ cars are, it is still the business’s responsibility to be able to tell customers where their cars are and when they can get them. The business should get someone else to answer those calls.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(I didn’t say this on the call, but if a business can’t provide a way to inform customers on the whereabouts of their cars, then it should tell customers up front before they submit their cars that once they give up the car, they may not be told about its whereabouts or condition for an unpredictable number of days. Be honest about the level of service you can provide.)&lt;/p&gt;
&lt;p&gt;I have no idea how much of what I said was accepted. The manager said that they would complete the work on my car sometime on Monday morning and that he would give me a “small discount” on the work.&lt;/p&gt;
&lt;p&gt;I pointed out that I already called around 12:30 PM that day to tell them not to do the work. Apparently, that call was either unprocessed or completely ignored. I asked to not be charged for that work and for them to just put whatever they took out back in so I could retake possession. He reluctantly agreed to that.&lt;/p&gt;
&lt;h3&gt;Tomorrow&lt;/h3&gt;

&lt;p&gt;Unfortunately, I’m not sure how much that agreement means. I will find out tomorrow.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>How a bot (may) get caught in a (possible) Twitter hellban</title>
      <link>http://jimkang.com/weblog/articles/twitter-bot-hellban/</link>
      <pubDate>Tue, 21 Jun 2016 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/twitter-bot-hellban/</guid>
      <author></author>
      <description>&lt;p&gt;People were reporting to me that my bot, &lt;a href=&quot;https://twitter.com/linkfinds&quot;&gt;@linkfinds&lt;/a&gt;, was replying to them, and they were getting notifications, but when they went to check their mentions (the “Notifications” tab in web Twitter), the reply was not there. They could see the reply if they scrolled down in their timelines, however.&lt;/p&gt;
&lt;p&gt;For them, it was a frustrating experience. They’d get a notification, then go to Notifications and couldn’t find anything.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I read Twitter on the computer via Tweetbot for Mac. I did a few tests from there, and things seemed fine – replies to me showed up in my Tweetbot “Mentions” tab. I’ve been busy, so sadly, it slipped out of my focus.&lt;/p&gt;
&lt;p&gt;Another wave of people brought it up, though, and I did check it out again, and I did see it happen on web Twitter and the iOS Tweetbot. Dant-dant-dah!&lt;/p&gt;
&lt;p&gt;I did various experiments with setting reply-related in the bot’s reply &lt;a href=&quot;https://dev.twitter.com/rest/reference/post/statuses/update&quot;&gt;posts&lt;/a&gt;. Previously, it had just been setting the &lt;code&gt;in_reply_to_status_id_str&lt;/code&gt; field. I tried setting all of these in various combinations:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;in_reply_to_status_id
in_reply_to_status_id_str
in_reply_to_user_id
in_reply_to_user_id_str
in_reply_to_screen_name
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;None of this mattered; replies still did not show up in the mentions of those they were directed at. That makes sense since &lt;a href=&quot;https://twitter.com/godtributes&quot;&gt;@godtributes&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/mountainkilwala&quot;&gt;@mountainkilwala&lt;/a&gt;, et al only set &lt;code&gt;in_reply_to_status_id_str&lt;/code&gt; or &lt;code&gt;in_reply_to_status_id&lt;/code&gt;, and their replies all show up in their addressees’ Notifications/Mentions.&lt;/p&gt;
&lt;p&gt;Next, I tried running the bot with another account’s credentials. This made a difference. Replies from the bot via that account did show up in mentions. &lt;strong&gt;The problem was with the account itself.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I do not know for certain why that account’s replies got filtered from the Twitter Notifications tab. However, I speculate that it has to do with it being tagged as a bot early on. When I created the account, I immediately did the OAuth dance to get a token, then used that token to post with the bot right away.&lt;/p&gt;
&lt;p&gt;I then got an error message from the Twitter API explaining that the account had been disabled for “automated behavior”. At the Twitter web site, I was told I could reenable the account by adding a phone number and verifying it, so I did that.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Maybe&lt;/em&gt; at this point, the account was placed in some Twitter user segment whose replies are all filtered out of the Notifications tabs. Perhaps this is a sort of hellbanning that prevents spam bots from noticing that they are no longer reaching anyone.&lt;/p&gt;
&lt;p&gt;Here’s some things that I &lt;em&gt;speculate&lt;/em&gt; could have lead to the account disabling and possible user segment tagging:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Posting via API before posting manually via web Twitter.&lt;/li&gt;
&lt;li&gt;Posting before setting up a profile with a userpic.&lt;/li&gt;
&lt;li&gt;Skipping entering a phone number during sign up.&lt;/li&gt;
&lt;li&gt;Adding an app (to get the OAuth token) before setting up a profile with a userpic.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Again, I can’t prove that any of these things matter or that the original @linkfinds account was put in a special user segment are a result. All I can say to botmakers – or all Twitter users, really – is that &lt;em&gt;if your account gets disabled, after you reenable it, check that everything still works before proceeding&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;As for the Link Finding Things bot, I had no recourse but to move it to another account. So, I changed the original account’s username to &lt;a href=&quot;https://twitter.com/linkfinds_old&quot;&gt;@linkfinds_old&lt;/a&gt;, then created a new account with the username &lt;a href=&quot;https://twitter.com/linkfinds&quot;&gt;@linkfinds&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I tried to let people know that if they’re following @linkfinds_old, they need to follow &lt;a href=&quot;https://twitter.com/linkfinds&quot;&gt;@linkfinds&lt;/a&gt; instead. I know tons of people will miss that tweet, but it’s all that can be done.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;link-finds-mysteries.png&quot; alt=&quot;DOO DOO DOO DOO!&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;twitter-bot-hellban-update&quot;&gt;&lt;/a&gt;
&lt;strong&gt;Update, 6/23/2016:&lt;/strong&gt; Well, after working fine for a while, the new account somehow got flagged such that its notifications don’t show up, either.  ¯\_(ツ)_/¯ I’m not going to spend any more time on this.&lt;/p&gt;
&lt;p&gt;Twitter is a great platform for this kind of entity, yet at the same time, it’s not really at all transparent to developers about things like this. I really wish there was another venue where something like Link Finding Things could live. Well, it does &lt;a href=&quot;http://linkfinds.tumblr.com/&quot;&gt;live on Tumblr&lt;/a&gt;, too, but can’t really interact with followers the same way. From a certain perspective, I’m lucky it wasn’t worse. Other bot makers have had their keys revoked without explanation.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Freezable children</title>
      <link>http://jimkang.com/weblog/articles/freezable-children/</link>
      <pubDate>Fri, 18 Mar 2016 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/freezable-children/</guid>
      <author></author>
      <description>&lt;p&gt;I’m not much of writer of the fiction kind, but if I were, I’d take a crack at this premise:&lt;/p&gt;
&lt;blockquote&gt;&lt;b&gt;In the future, humans have the ability and right to put their children into flawless suspended animation.&lt;/b&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;They can do this until their children accrete eighteen total years of “animated” age.&lt;/p&gt;
&lt;p&gt;So, after a tiring day of childcare, parents freeze their kid and take the next day easy. They can then spend the next couple of days after that working on  projects. And maybe then they can bear down on their jobs, if that’s what they like to do.&lt;/p&gt;
&lt;p&gt;All that time, they can chew over a puzzling day with the kid and come to a considered course of action. When they’re ready, they restore the kid and spend a day or with them, 100% engaged and untired!&lt;/p&gt;
&lt;p&gt;As a result, some parents reach the age of 90 by the time their child is 18 in animated years. Parents more commonly die before their kids become adults. Groups of parents form tribes around whatever limit on suspension they’ve set for themselves. Economic and power disparities risie from the uneven distribution of the privilege of suspension. Paranoia grows about hidden physiological effects of suspension when, in truth, it &lt;i&gt;actually is perfect&lt;/i&gt;.&lt;/p&gt;
&lt;p&gt;Then, there are the effects of adults suspending themselves simply because they don’t like their lives and hope that a few rolls of the dice will change things for the better.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;frostillicus.jpg&quot; alt=&quot;Behold: Frostillicus!&quot; /&gt;&lt;/p&gt;
&lt;p&gt;(Image courtesy of &lt;a href=&quot;https://frinkiac.com/caption/S09E17/238270&quot;&gt;Frinkiac&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Writers, feel free to have at it!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Simple inertial scrolling</title>
      <link>http://jimkang.com/weblog/articles/simple-inertial-scrolling-with-d3/</link>
      <pubDate>Wed, 01 Apr 2015 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/simple-inertial-scrolling-with-d3/</guid>
      <author></author>
      <description>&lt;p&gt;Here’s an example of inertial scrolling without a lot of elaborate plugin business going all over the place.&lt;/p&gt;
&lt;p&gt;The scroll position on web pages can be controlled by simply setting &lt;code&gt;document.body.scrollTop&lt;/code&gt;. Other than that there’s only a couple of things you need for inertial scrolling:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A function that tells you how far to move the scroll position based on the time. We want one that gives the impression of inertia, so it’d dictate relatively slow movement at first, then ramp up, then slow down. &lt;code&gt;d3.ease&lt;/code&gt; provides a cubic function like the &lt;a href=&quot;http://easings.net/&quot;&gt;easeInOutCubic here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A timer that updates at intervals so that you can call the easing function to figure out where the scroll position should be and update the scroll position.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That’s what the example does. If you want to keep your code as small as possible, you can use &lt;a href=&quot;https://github.com/mbostock/smash/wiki&quot;&gt;D3 Smash&lt;/a&gt; to make yourself a little build of D3 that includes only the transition module, which is where &lt;code&gt;d3.timer&lt;/code&gt; and &lt;code&gt;d3.ease&lt;/code&gt; live.&lt;/p&gt;
&lt;p&gt;If you want to keep it really small, you can just grab a cubic ease-in-ease-out function from somewhere and use plain JavaScript’s &lt;code&gt;setInterval&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can try it out down here:&lt;/p&gt;
&lt;style&gt;

body {
  display: flex;
  flex-direction: column;
  align-items: center;
  font-size: 24px;
}

#container {
  display: flex;
  flex-direction: column;
  max-width: 20em;
  align-contents: center;
}

.item {
  text-align: center;
  padding: 1em;
}

.button {
  background-color: rgb(234, 106, 68);
  text-align: center;
  padding: 0.5em;
  border-radius: 0.5em;
  box-shadow: hsla(240, 30%, 30%, 0.15) 2px 2px;
  color: #eee;
  margin: 0.2em;
  cursor: pointer;
}

&lt;/style&gt;

&lt;body&gt;


&lt;script src=&quot;http://d3js.org/d3.v3.min.js&quot;&gt;&lt;/script&gt;

&lt;div id=&quot;container&quot;&gt;
  &lt;div id=&quot;top-element&quot; class=&quot;scroll-to-middle button&quot;&gt;Scroll to a middle element&lt;/div&gt;
  &lt;div class=&quot;scroll-to-bottom button&quot;&gt;Scroll to the bottom element&lt;/div&gt;

  &lt;div class=&quot;item&quot;&gt;Hooligan&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Muscleman&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Tough Guy&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Bullyboy&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Tearaway&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Plug-Ugly&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Chav&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Muscle&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Skinhead&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Skinhead (10th level)&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Yob&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Yob of the Body&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Yob of Feelings&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Yob of the Mind&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Yob of the Mind (15th level)&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Yob of the Mind (16th level)&lt;/div&gt;

  &lt;hr&gt;&lt;/hr&gt;

  &lt;div class=&quot;item&quot;&gt;Technologist&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Hacker&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Cyberpunk&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Applied Scientist&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Cyber-Terrorist&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Engineer&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Computer User&lt;/div&gt;

  &lt;div class=&quot;scroll-to-top button&quot;&gt;Scroll to the top element&lt;/div&gt;
  &lt;div class=&quot;item&quot; id=&quot;middle-element&quot;&gt;Middle Element&lt;/div&gt;
  &lt;div class=&quot;scroll-to-bottom button&quot;&gt;Scroll to the bottom element&lt;/div&gt;

  &lt;div class=&quot;item&quot;&gt;Cracker&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Programmer&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Programmer (10th level)&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Chief Programmer&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Master Programmer&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Grandmaster Programmer&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Grandmaster Programmer (14th level)&lt;/div&gt;

  &lt;hr&gt;&lt;/hr&gt;

  &lt;div class=&quot;item&quot;&gt;Bun&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Bunny&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Sciurine&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Con&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Rodent&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Rodent (6th level)&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Rodent (7th level)&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Rodent (8th level)&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Rodent (9th level)&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Squirrel&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Squirrel (11th level)&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Squirrel (12th level)&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Expert Squirrel&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Prime Squirrel&lt;/div&gt;

  &lt;div class=&quot;scroll-to-middle button&quot;&gt;Scroll to a middle element&lt;/div&gt;
  &lt;div id=&quot;bottom-element&quot; class=&quot;scroll-to-top button&quot;&gt;Scroll to the top element&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;
&lt;script&gt;

var easingFn = d3.ease('cubic');

function scrollTo(toTop, time) {
  var fromTop = document.body.scrollTop;
  var scrollDistance = toTop - fromTop;
  var scrolledTop = 0;

  d3.timer(updateScrollTop);

  function updateScrollTop(elapsed) {
    var portion = easingFn(elapsed * 1.0 /time);
    var scrollChange = scrollDistance * portion;

    document.body.scrollTop = fromTop + scrollChange;

    // Stop the timer by returning true if we've scrolled as far as requested.
    if (scrollDistance &lt; 0 &amp;&amp; document.body.scrollTop &lt;= toTop) {
      return true;
    }
    if (scrollDistance &gt;= 0 &amp;&amp; document.body.scrollTop &gt;= toTop) {
      return true;
    }
    if (elapsed &gt; time) {
      // This is as far as we're going to get.
      return true;
    }
  }
}

function scrollToElement(el, time) {
  scrollTo(el.offsetTop, time);
}

d3.selectAll('.scroll-to-middle').on('click', scrollToMiddle);
d3.selectAll('.scroll-to-top').on('click', scrollToTop);
d3.selectAll('.scroll-to-bottom').on('click', scrollToBottom);

function scrollToMiddle() {
  scrollToElement(d3.select('#middle-element').node(), 1500);
}


function scrollToTop() {
  scrollToElement(d3.select('#top-element').node(), 1500);
}


function scrollToBottom() {
  scrollToElement(d3.select('#bottom-element').node(), 1500);
}

&lt;/script&gt;
</description>
    </item>
    <item>
      <title>2014, Aspect B</title>
      <link>http://jimkang.com/weblog/articles/2014-aspect-b/</link>
      <pubDate>Sat, 03 Jan 2015 19:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/2014-aspect-b/</guid>
      <author></author>
      <description>&lt;style&gt;
li p {
  margin-bottom: 0.5em;
}

li {
  line-height: 1.3em;
  padding-left: 0;
}

ul {
  margin-top: 0.5em;
}

ul li ul li {
  font-size: smaller
}

.aside {
  border: 1px gray dotted;
  font-size: smaller;
  padding: 1em;
  color: #777;
}

&lt;/style&gt;

&lt;p&gt;While the year’s activities were &lt;a href=&quot;http://jimkang.com/articles/2014-aspect-a/&quot;&gt;dominated&lt;/a&gt; by Life Events, I did get some projects done. More than I did in 2013, I think. When I was looking at &lt;a href=&quot;https://gist.github.com/dariusk/aa4fc2da6f47eaed63db&quot;&gt;Darius’s list&lt;/a&gt;, I realized I couldn’t remember what I had done beyond the last three months. So, taking stock is a good idea.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Projects that were released in 2014. If a project has subprojects built to support it, they are listed under it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://soundcloud.com/isilence/recovery&quot;&gt;Recovery&lt;/a&gt;. Writing this brought to my attention that this was the only song I wrote in 2014. I usually do two or three a year, except years in which I do albums. Maybe I’ll go for an album this year?&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/probable&quot;&gt;probable&lt;/a&gt;. A &lt;a href=&quot;http://nodejs.org/&quot;&gt;Node&lt;/a&gt; module that provides basic randomization utilities, as well as functions for making D&amp;amp;D-style random tables. I’ve used this in at least four projects.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://nonstopscrollshop.com/&quot;&gt;Non-Stop Scroll Shop&lt;/a&gt;. It’s your one-stop non-stop scroll shop! Products forever!&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://jimkang.com/reactivecell/example/liquid.html&quot;&gt;A browser-based cellular automaton&lt;/a&gt;. I had big, yet vague plans for building off of this, but I just kinda drifted away into Twitter bots. I will come back, though.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/reactivecell&quot;&gt;reactivecell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/cellseriesviewer&quot;&gt;cellseriesviewer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/roguemap-parse-stream&quot;&gt;roguemap-parse-stream&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/cellgridrenderer&quot;&gt;cellgridrenderer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/cellmap&quot;&gt;cellmap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;aside&quot;&gt;You may notice that a lot of modules go into most of my projects. This is because I’ve drifted into practicing a &lt;a href=&quot;http://substack.net/how_I_write_modules&quot;&gt;small module philosophy&lt;/a&gt;, and it has worked out really well for my projects. If you have to start and stop projects a lot, as I do, it really helps to be able to build in small, tangible units, rather than huge all-or-nothing colossuses. Also, this is the lowest-friction reusability situation I’ve ever been in.&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://jimkang.com/quadtreevis&quot;&gt;An interactive explanation of quadtrees&lt;/a&gt;. When I was building my cellular automaton, I wanted to try storing my cells in quadtrees to save space. It was then that I realized I wasn’t that clear on how quadtrees work, so I built this explanation.&lt;/p&gt;
&lt;p&gt;It was pretty well-received. Non-programmer-, non-mathematics-types understood quadtrees by trying it. The power of moving shapes!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/quadtreevis&quot;&gt;quadtreevis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/quadtreetree&quot;&gt;quadtreetree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/quadtreemap&quot;&gt;quadtreemap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/one-at&quot;&gt;one-at&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://smidgeo.com/&quot;&gt;Smidgeo.com&lt;/a&gt;. Finally our cat’s corporation has a base on the web! GET! I still enjoy that CSS animation.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/scrollwatcher&quot;&gt;scrollwatcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/gravitybox&quot;&gt;gravitybox&lt;/a&gt; - This powers the very busy &lt;a href=&quot;http://smidgeo.com/plan/&quot;&gt;Smidgital Digital Plan&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://twitter.com/godtributes&quot;&gt;@godtributes&lt;/a&gt;. This is a merciless generalization of the “BLOOD FOR THE BLOOD GOD!” meme. I wasn’t really into it until my friend &lt;a href=&quot;http://nynex.hydrogenproject.com/&quot;&gt;Matt&lt;/a&gt; said “GROWTH FOR THE GROWTH GOD!” in reference to House Republicans. Then, it clicked. In turn, this bot has clicked with far more people than I had expected. I think it might my most popular project.&lt;/p&gt;
&lt;p&gt;Through @godtributes, I learned quite a lot about pluralization inconsistencies in the English language, Twitter REST API rate limits, and just how easy it is for a bot to unintentionally say horrific things.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/iscool&quot;&gt;iscool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/canonicalizer&quot;&gt;canonicalizer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/chronicler&quot;&gt;chronicler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/emojisource&quot;&gt;emojisource&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/nounfinder&quot;&gt;nounfinder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/wordnok&quot;&gt;wordnok&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Phoneme-based Node modules: &lt;a href=&quot;https://github.com/jimkang/homophonizer&quot;&gt;homophonizer&lt;/a&gt;, &lt;a href=&quot;https://github.com/jimkang/phonemenon&quot;&gt;phonemenon&lt;/a&gt;. Some of my future projects hinge on knowing what sounds like what what. So, I’ve done a lot of playing around with phonemes. Like the cellular automata stuff, I need to harvest the fruits of these projects in 2015.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Translation bots: &lt;a href=&quot;https://twitter.com/a_chance_bot&quot;&gt;@a_chance_bot&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/translatedbible&quot;&gt;@translatedbible&lt;/a&gt;, and &lt;a href=&quot;https://twitter.com/new_aeneid&quot;&gt;@new_aeneid&lt;/a&gt;. These are bots (working off of the &lt;a href=&quot;https://github.com/jimkang/lossyfortunes&quot;&gt;same app&lt;/a&gt;) that take some source quotation, then translate it to several non-English languages and back to English. The results have been largely disappointing. I am amused by about one post from each of these bots a day.&lt;/p&gt;
&lt;p&gt;I started this project after watching a &lt;a href=&quot;https://www.youtube.com/watch?v=-4Yp3j_jk8Q&quot;&gt;Leslie Lamport video&lt;/a&gt; and then wrote a &lt;a href=&quot;https://github.com/jimkang/lossyfortunes#specification&quot;&gt;rigorous specification&lt;/a&gt;, which I’ve never done before. That took a while. I also scratched bikeshedding itch by making my own &lt;a href=&quot;https://github.com/jimkang/wardboss&quot;&gt;dependency injector&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In a sense, I made the classic mistake of investing too much engineering effort without first proving that doing so is worthwhile. However, I can also write this off as a chance to scratch some itches. On the whole, I still think I paid too much to do that, though.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/conform-async&quot;&gt;conform-async&lt;/a&gt;. There’s not much to this module, but I end up using it a lot to keep peace between async-expecting code and sync code.&lt;/li&gt;
&lt;li&gt;Rap bots: &lt;a href=&quot;https://twitter.com/rapgamemetaphor&quot;&gt;@rapgamemetaphor&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/autocompleterap&quot;&gt;@autocompleterap&lt;/a&gt;. These bots amuse me on the regular. I have some further plans for them.&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/autocompl&quot;&gt;autocompl&lt;/a&gt; - A module that gives you Google’s autocomplete suggestions for given strings.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://lonewolfandparenting.tumblr.com/&quot;&gt;Lone Wolf and Parenting&lt;/a&gt;. I’ve been rereading Lone Wolf and Cub, a great but flawed comic from the ‘70s. This time, the parent stuff jumps out at me a little more, and I’ve been highlighting amusing stuff on this Tumblr. It’s nice having a non-technology-driven project.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Projects that didn’t make it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Massachusetts Childcare Search. While we were searching for daycare, I wanted a site that served the EEC data in a less painful way than the EEC web site. So, I &lt;a href=&quot;http://masschildcaredata.github.io/&quot;&gt;scraped the site for data&lt;/a&gt; and was planning to build an app that would use that data. Never got beyond the scraping.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dariusk/NaNoGenMo-2014&quot;&gt;NaNoGenMo&lt;/a&gt;. I &lt;a href=&quot;https://github.com/jimkang/novelrrbot&quot;&gt;started building an engine&lt;/a&gt; for generating a novel, but I got stuck on trying define what an “event” in a novel is and how it could be represented simply. Might keep at this one.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I feel good about 2014 (the personal stuff, not the world events). As I do every year, in 2015, I want to be more careful about what I start and clearer on what I expect to get out of each project. And I want to do more with music and visualization again. And maybe write a game, too?&lt;/p&gt;
&lt;p&gt;There’s some utility apps I want to write, but that’s at odds with the fact that generative projects are always far more satisfying than ones that just do what you tell them to do. So, yeah, I got stuff to work out for 2015.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>2014, Aspect A</title>
      <link>http://jimkang.com/weblog/articles/2014-aspect-a/</link>
      <pubDate>Thu, 01 Jan 2015 19:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/2014-aspect-a/</guid>
      <author></author>
      <description>&lt;style&gt;
li p {
  margin-bottom: 0.5em;
}

li {
  line-height: 1.3em;
  padding-left: 0;
}

ul {
  margin-top: 0.5em;
}
&lt;/style&gt;


&lt;p&gt;This was very much a Life Year, one packed with Life Events. There was one root Life Event that triggered a million Life Subevents.&lt;/p&gt;
&lt;p&gt;Katt and I had this guy:
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;section class=&quot;center-img-zone&quot;&gt;

&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/gp/ignignokt/Cvdies&quot;&gt;&lt;img src=&quot;https://farm8.staticflickr.com/7524/16083616772_db60f440aa_z.jpg&quot; width=&quot;480&quot; height=&quot;640&quot; alt=&quot;R.!&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;He’s a great guy. On his behalf, we:
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Found a deleaded apartment.&lt;/li&gt;
&lt;li&gt;Moved.&lt;/li&gt;
&lt;li&gt;Called and visited a ton of daycares.&lt;/li&gt;
&lt;li&gt;Went to child birth classes.&lt;/li&gt;
&lt;li&gt;Gave birth/supported birth-giving. (I did the support part, BTW.)&lt;/li&gt;
&lt;li&gt;Went to the doctor a jillion times.&lt;/li&gt;
&lt;li&gt;Got over baby bodily fluid revulsion.&lt;/li&gt;
&lt;li&gt;Gave up sleeping in favor getting blasted by night screaming.&lt;/li&gt;
&lt;li&gt;Fought bizarre and intense paranoia when leaving him at daycare.&lt;/li&gt;
&lt;li&gt;Googled a lot of infant maladies.&lt;/li&gt;
&lt;li&gt;Read a lot of &lt;a href=&quot;http://smile.amazon.com/Fuzzy-Bee-Friends-Cloth-Books/dp/0312491506/ref=sr_1_1?ie=UTF8&amp;qid=1420248331&amp;sr=8-1&amp;keywords=fuzzy+bee+and+friends&quot;&gt;Fuzzy Bee and Friends&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Partially on his behalf, we:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Established (relative) peace between our cats.&lt;/li&gt;
&lt;li&gt;I changed jobs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We are on an ongoing journey to keep him alive (don’t worry, he’s not especially sick, other than an ear infection) and to develop his skills and power.&lt;/p&gt;
&lt;p&gt;This endeavor has become rewarding far earlier than expected.&lt;/p&gt;
&lt;p&gt;One, I’m simply amazed that he exists. I have never seen someone go from not existing to existing. When he was born, he crossed the line from theoretical to real as hell.&lt;/p&gt;
&lt;p&gt;Two, he’s often happy, and when he is, it is far happier than any adult is even capable of being. You’d think that it’d be sad to be reminded of one’s emotional limitations, but nah, it’s more like witnessing a guy playing amazing guitar solos that you never could.&lt;/p&gt;
&lt;p&gt;Well, that was meant to be a preface for a post where I talked about the projects I did this year. Bumping that to a future post.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Awaiting the Final Moment</title>
      <link>http://jimkang.com/weblog/articles/awaiting-the-final-moment/</link>
      <pubDate>Sun, 10  Aug 2014 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/awaiting-the-final-moment/</guid>
      <author></author>
      <description>&lt;section class=&quot;center-img-zone&quot;&gt;

&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;/articles/awaiting-the-final-moment/&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5574/14882569462_8ee010f9c5_h.jpg&quot; width=&quot;800&quot; height=&quot;598&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This was our final weekend as non-parents. We mostly conducted ourselves as normal, except that we went to a restaurant that was fairly schmance, just because we might not be able to do that again for a while, even though we’re not normal consumers of schmance.&lt;/p&gt;
&lt;p&gt;&lt;/section&gt;
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;section class=&quot;center-img-zone&quot;&gt;
I felt the urge to code a lot because I have heard much of the interruptive power of babies, but A) I should be engaging with my pregnant wife and also life B) furious, desperate coding rarely amounts to much. So, instead we went outside a lot, and one of those times, we went out to Menotomy Rocks.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14696330848&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5572/14696330848_3cd4930d6b_h.jpg&quot; width=&quot;800&quot; height=&quot;155&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here is one of the rocks. I guess it’s of the Menotomy sort. It was large, and I was impressed.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14879865931&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5577/14879865931_a8b8d1c2b2_h.jpg&quot; width=&quot;800&quot; height=&quot;599&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Oh, nature. Much articulation/reticulation wow&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14879869981&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5563/14879869981_39612dfb1d_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Menotomy Rocks park is not that big, and a lot of people live right next to it. I just thought it must be fairly ballin’ perk to live near an urban center, yet have a forest as your backyard.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14902789113&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5559/14902789113_28b9dac223_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Another rock, this one mossier. It reminded me of the Hulk.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14859956866&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5569/14859956866_2c447d5902_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It’s probably the very non-woodsy nature of my upbringing, but scenes like this remind me of &lt;a href=&quot;http://www.agamesroom.com/library/images/screenshots/qfg1/qfg1ss4.gif&quot;&gt;Hero’s&lt;/a&gt; &lt;a href=&quot;http://www.mobygames.com/game/dos/heros-quest-so-you-want-to-be-a-hero/screenshots&quot;&gt;Quest&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14696297738&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3912/14696297738_a04255c858_h.jpg&quot; width=&quot;800&quot; height=&quot;312&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I thought this pond did some real good work with reflecting.&lt;/p&gt;
&lt;p&gt;Speaking of which, it feels like we’re about to move to another home or something.&lt;/p&gt;
&lt;p&gt;Also, despite:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Taking childbirth classes&lt;/li&gt;
&lt;li&gt;Assembling a crib and making space&lt;/li&gt;
&lt;li&gt;Reading up on safe living conditions for children and wrangling for them&lt;/li&gt;
&lt;li&gt;Searching for childcare&lt;/li&gt;
&lt;li&gt;Pretty much centering the last nine months on the arrival of our son&lt;/li&gt;
&lt;li&gt;Hearing about how hard the sacrifices are&lt;/li&gt;
&lt;li&gt;It being morning of the day of labor induction&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I don’t really comprehend what it’s going to be like. I want to see this guy and help him develop, but I don’t really feel the fear I should be. Fortunately, this frog-before-the-boiling attitude toward big events keeps me from useless worry, so, eh.&lt;/p&gt;
&lt;p&gt;Well, it’s been good being a non-child-having guy, but now I will see how it is being a child-having guy!
&lt;/section&gt;
&amp;nbsp;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>The mysteries of north North Cambridge</title>
      <link>http://jimkang.com/weblog/articles/north-north-cambridge/</link>
      <pubDate>Fri, 08  Aug 2014 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/north-north-cambridge/</guid>
      <author></author>
      <description>&lt;section class=&quot;center-img-zone&quot;&gt;

&lt;p&gt;&lt;a class=&quot;img-container&quot; class=&quot;img-container&quot; href=&quot;/articles/north-north-cambridge/&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3884/14869644464_dadf66129e_h.jpg&quot; width=&quot;800&quot; height=&quot;598&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;style&gt;
body {
  background-color: #1d1a14;
}

body, a, a:visited {
  color: #807A69;
}
&lt;/style&gt;

&lt;section class=&quot;center-img-zone&quot;&gt;

&lt;p&gt;This is the moon, not the sun.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14849125206&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3922/14849125206_ce1b602bbe_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Magic plant, possibly evil.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14849126956&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3922/14849126956_4eb2904fc4_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Moon vortex!&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14685575497&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3863/14685575497_29fda125ef_h.jpg&quot; width=&quot;800&quot; height=&quot;602&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Some sort of animal committee or congress.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14871774372&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3912/14871774372_b40b8206da_h.jpg&quot; width=&quot;800&quot; height=&quot;599&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We also found empty lots, weird houses, a talkative guide, a &lt;a href=&quot;https://grace.com/en-us&quot;&gt;massive corporation&lt;/a&gt;, and a cat.&lt;/p&gt;
&lt;p&gt;&lt;/section&gt;
&amp;nbsp;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Much Blue</title>
      <link>http://jimkang.com/weblog/articles/much-blue/</link>
      <pubDate>Sun, 06 Jul 2014 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/much-blue/</guid>
      <author></author>
      <description>&lt;section class=&quot;center-img-zone&quot;&gt;

&lt;p&gt;We went on a walk a bit after sunset this Sunday. A down-but-not-out sun can create an intensely saturated dark blue in the sky. We were awed. The phone didn’t capture that exact blue, but it did get some good ones.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;/articles/much-blue/&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5510/14590397224_09e0cc4616_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;
&lt;/section&gt;
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;style&gt;
body {
  background-color: #001018;  
}

body, a, a:visited {
  color: #667;
}
&lt;/style&gt;

&lt;section class=&quot;center-img-zone&quot;&gt;

&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14617464233&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3924/14617464233_f4bfa77f81_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14405696699&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3879/14405696699_e8d2b195bf_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14405861777&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm3.staticflickr.com/2927/14405861777_dd62c4a766_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14410804819&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3839/14410804819_02847e1374_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14588995321&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3853/14588995321_ed52789adc_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14612367263&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3856/14612367263_046c188d78_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14405690509&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm3.staticflickr.com/2935/14405690509_79e5d01174_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14569234496&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3895/14569234496_cafa096100_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14410960657&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3908/14410960657_e3812d87b1_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14592284295&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5596/14592284295_2f5e0e022f_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14574350356&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5485/14574350356_e7e2e282f7_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/section&gt;
&amp;nbsp;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Pink Overlord</title>
      <link>http://jimkang.com/weblog/articles/pink-overlord/</link>
      <pubDate>Sat, 28 Jun 2014 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/pink-overlord/</guid>
      <author></author>
      <description>&lt;section class=&quot;center-img-zone&quot;&gt;

&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;/articles/pink-overlord/&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3849/14347670628_6a72091546_h.jpg&quot; width=&quot;800&quot; height=&quot;345&quot; alt=&quot;Trunk full of junk&quot;&gt;&lt;/a&gt;
&lt;/section&gt;
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;section class=&quot;center-img-zone&quot;&gt;

&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14347641729&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3856/14347641729_6a14dd778f_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Little Free Library&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14347795017&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3842/14347795017_d967ad22af_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14511123816&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5492/14511123816_4075d62b68_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14533267442&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm3.staticflickr.com/2915/14533267442_97acbe1949_h.jpg&quot; width=&quot;800&quot; height=&quot;450&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14349198430&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm3.staticflickr.com/2916/14349198430_36f7ebe32c_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14555963353&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5595/14555963353_5897f4658c_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/section&gt;
&amp;nbsp;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Rendering faster by hiding DOM elements instead of removing them</title>
      <link>http://jimkang.com/weblog/articles/browser-disapproval-of-frequent-dom-removal/</link>
      <pubDate>Tue, 24 Jun 2014 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/browser-disapproval-of-frequent-dom-removal/</guid>
      <author></author>
      <description>&lt;p&gt;I know that DOM manipulation is expensive, but I’ve found it just doesn’t make a difference in a typical web app. (And of course, DOM manipulation can rarely be avoided entirely in graphically-oriented apps; it’s a matter of reducing the amount of DOM-touching that happens in those cases.) Recently, I ran into a case in which it &lt;em&gt;did&lt;/em&gt; matter, &lt;code&gt;removeChild&lt;/code&gt; in particular.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I have been working on a &lt;a href=&quot;https://github.com/jimkang/reactivecell&quot;&gt;cellular automaton&lt;/a&gt;. The latest thing I did with it was to make it run in the browser. (Before I was running it with Node.) That part was smooth, but when I hooked it up to some &lt;a href=&quot;https://github.com/jimkang/cellgridrenderer&quot;&gt;straightforward D3 rendering code&lt;/a&gt; to render each cell at each iteration, I ran into some trouble. It was sluggish once there were about 6000 cells out.&lt;/p&gt;
&lt;p&gt;D3 apps usually work around an &lt;a href=&quot;http://bost.ocks.org/mike/join/&quot;&gt;enter/update/exit&lt;/a&gt; loop. Each iteration, you tell D3 to “join” the data (an array of some sort) with the DOM (usually SVG) elements that represent them. D3 figures out:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Which data elements are not currently represented in the DOM&lt;/li&gt;
&lt;li&gt;Which data elements are represented (but may need updating)&lt;/li&gt;
&lt;li&gt;Which DOM elements represent data elements that no longer exist&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It gives you the first and the last set as via &lt;code&gt;enter()&lt;/code&gt; and &lt;code&gt;exit()&lt;/code&gt;. Usually, you use the selection returned by &lt;code&gt;enter()&lt;/code&gt; to create new DOM elements to represent the new data, and you use &lt;code&gt;exit()&lt;/code&gt;‘s selection to remove DOM elements. That’s what I was doing.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; function renderCells(cells) {
    var cellRenditions = tileRoot.selectAll(&amp;#39;.&amp;#39; + opts.cellClass)
      .data(cells, a.id);

    var newCellRenditions = cellRenditions.enter()
      .append(&amp;#39;g&amp;#39;).classed(opts.cellClass, true);

    newCellRenditions.append(&amp;#39;rect&amp;#39;).attr({
      x: 0,
      y: 0,
      width: 1,
      height: 1
    });

    if (opts.customizeCellRendition) {
      cellRenditions.each(opts.customizeCellRendition);
    }

    cellRenditions.attr(&amp;#39;transform&amp;#39;, a.transform);

    cellRenditions.exit().remove();
  }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I profiled some late iterations in Chrome DevTools to check out see where time was being spent in the code. Here’s what the flame graph for a single iteration’s rendering looked like:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;fit-to-width&quot; src=&quot;renderCells-profile-with-remove.png&quot; alt=&quot;Flame graph screenshot&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Rougly 80 ms was spent in &lt;code&gt;removeChild&lt;/code&gt;. The entire &lt;code&gt;renderCells&lt;/code&gt; call took 137 ms. So I thought, are &lt;code&gt;removeChild&lt;/code&gt; calls something I eliminate?&lt;/p&gt;
&lt;p&gt;Removing DOM elements makes sense for a lot of visualizations. A datum could disappear after an interation and never appear again.&lt;/p&gt;
&lt;p&gt;In a cellular automaton, all of the cells are in fixed positions. In my cellular automaton, only cells that do not match the profile of a “default cell” are tracked and rendered. Thus, a cell can “disappear” (become a default cell) in one iteration, and then “reappear” (become a cell that deviates from the default). So, I tried out &lt;a href=&quot;https://github.com/jimkang/cellgridrenderer/blob/master/fixedcellgridrenderer.js&quot;&gt;hiding exiting cells instead of removing them&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function renderCells(cells) {
  var cellRenditions = tileRoot.selectAll(&amp;#39;.&amp;#39; + opts.cellClass)
    .data(cells, opts.idFunction);

  var newCellRenditions = cellRenditions.enter()
    .append(&amp;#39;g&amp;#39;).classed(opts.cellClass, true);

  newCellRenditions
    .append(&amp;#39;rect&amp;#39;).attr({
      x: 0,
      y: 0,
      width: 1,
      height: 1
    })
    .attr(&amp;#39;transform&amp;#39;, a.transform);

  cellRenditions.attr(&amp;#39;opacity&amp;#39;, 1.0);

  if (opts.customUpdate) {
    opts.customUpdate(cellRenditions);
  }

  // Hide exited cells instead of removing.
  cellRenditions.exit()
    .attr(&amp;#39;opacity&amp;#39;, 0);
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here is the flame graph looked like after that change:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;fit-to-width&quot; src=&quot;renderCells-profile-without-remove.png&quot; alt=&quot;Flame graph screenshot&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Now &lt;code&gt;renderCells&lt;/code&gt; takes about 30 ms. Most of that time is now spent in the data join. &lt;a href=&quot;http://jimkang.com/reactivecell/example/&quot;&gt;Give it a try!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ask your doctor if hiding instead of removing DOM elements in your app is right for you.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Sunday Moseying</title>
      <link>http://jimkang.com/weblog/articles/sunday-moseying/</link>
      <pubDate>Sat, 31 May 2014 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/sunday-moseying/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;section class=&quot;center-img-zone&quot;&gt;
  Here’s some stuff we saw while walking around North Cambridge and thereabouts Sunday morning.&lt;/p&gt;
&lt;p&gt;  &lt;a class=&quot;img-container&quot; href=&quot;/articles/sunday-moseying/&quot;&gt;&lt;img src=&quot;https://farm3.staticflickr.com/2903/14341308253_c75873731c_c.jpg&quot; alt=&quot;Sunday moseying&quot; /&gt;&lt;/a&gt;
&lt;/section&gt;
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;section class=&quot;center-img-zone&quot;&gt;

&lt;p&gt;  Something I really like about this neighborhood is that seems to have no one telling you your house has to be beige or whatever. You can paint your house however you like. It seems unlikely we’ll be able to afford to own in this area, but if we do, I want the house to be nice and saturated like this powerful yellow one.&lt;/p&gt;
&lt;p&gt;  &lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14321073655/in/set-72157644546343690&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5547/14321073655_992f05a8e0_c.jpg&quot; alt=&quot;Sunday moseying&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  In a similar vein, I like that you can basically have a meadow by your house (presumably) without complaints about dandelions.&lt;/p&gt;
&lt;p&gt;  &lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14321110075/in/set-72157644546343690&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5530/14321110075_755b39c01c_c.jpg&quot; alt=&quot;Sunday moseying&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  Katt (contemplating the tree above) says this is some variant of dogwood, except with wide, flat petals. They almost form a plane. I am into that.&lt;/p&gt;
&lt;p&gt;  There’s these lofts that you can see from the Alewife Linear Park/Minuteman Bikeway that we call “Expensive Lofts.” I think the development is actually called either Tannery Brook Row or Davis Lofts. (A friend of ours told us pointed out that &lt;a href=&quot;http://en.wikipedia.org/wiki/Tanning&quot;&gt;tanneries&lt;/a&gt; are actually fairly toxic, so it’s like this place is actually built on some poison burial grounds. If you don’t eat plants grown in the soil, you’re probably fine, though.)&lt;/p&gt;
&lt;p&gt;  &lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14317718821/in/set-72157644546343690&quot;&gt;&lt;img src=&quot;https://farm3.staticflickr.com/2939/14317718821_4147c41344_c.jpg&quot; alt=&quot;Sunday moseying&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  We checked out the other side of it today, and it’s kinda nifty. There’s little ponds and gardens. This picture has some really out-of-control exposure, but some of the passages look like some kinda wooded elf town.&lt;/p&gt;
&lt;p&gt;  &lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14134420119/in/set-72157644546343690&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5114/14134420119_69b29bcd8f_c.jpg&quot; alt=&quot;Sunday moseying&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  There’s the ruins of a small house. In front, there are the matching ruins of a driveway. Perhaps there was some contention between that house and its bigger neighbor; small house lost. The big house razed the small house to its foundations, leaving just a bit standing as a monument to its power.&lt;/p&gt;
&lt;p&gt;  &lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14134529817/in/set-72157644546343690&quot;&gt;&lt;img src=&quot;https://farm3.staticflickr.com/2926/14134529817_9b62be418b_c.jpg&quot; alt=&quot;Sunday moseying&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  I liked this secret porch set up. You can enjoy the outside while not being obvious to passersby. Wearing the proper camo, you could possibly even be invisible.&lt;/p&gt;
&lt;p&gt;  &lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14317713991/in/set-72157644546343690&quot;&gt;&lt;img src=&quot;https://farm3.staticflickr.com/2930/14317713991_e49c74cc95_c.jpg&quot; alt=&quot;Sunday moseying&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  This was a pretty cool contrail.  &lt;/p&gt;
&lt;p&gt;  &lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14297907336/in/set-72157644546343690&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5233/14297907336_c5d137a9ae_c.jpg&quot; alt=&quot;Sunday moseying&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  A tree with a chunk missing by Davis Station. Was this tree struck by lightning? I thought it may have been &lt;a href=&quot;https://www.flickr.com/photos/ignignokt/8674311065/&quot;&gt;this tree&lt;/a&gt;, but that was a different one, blown over by the wind.&lt;/p&gt;
&lt;p&gt;  &lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14134386578/in/set-72157644546343690&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5315/14134386578_1edd0bd69c_c.jpg&quot; alt=&quot;Sunday moseying&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  Things were very dappled today. So much dappling!&lt;/p&gt;
&lt;p&gt;&lt;/section&gt;
BTW, if you also have a static html blog like this one and a Flickr account and want to put together a photo post with them, you may find it can be kind of annoying to get all the picture links you want out of a photo set. So, I wrote &lt;a href=&quot;https://github.com/jimkang/flickrset-to-html&quot;&gt;flickrset-to-html&lt;/a&gt; to do that for me, then just posted the resulting html into this post.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Between 480,000 and 960,000</title>
      <link>http://jimkang.com/weblog/articles/between-480000-and-960000/</link>
      <pubDate>Sat, 17 May 2014 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/between-480000-and-960000/</guid>
      <author></author>
      <description>&lt;style&gt;
  .tagbox {
    font-size: 32px;
  }

  .pipe {
    fill: hsla(0, 100%, 0%, 0.0);
    stroke-width: 1;
    stroke: #888;
  }

  svg {
    font-size: 20px;
  }

  svg text {
    fill: #585858;
  }

  .station {
    stroke: #777;
    stroke-width: 3;
    fill: #fff;
  }

  .station-label {
    font-size: 24px;
    text-align: center;
    text-anchor: middle;
  }

  #block-layer text {
    fill: hsl(0, 60%, 60%);
  }
&lt;/style&gt;

&lt;p&gt;I’ve been working on a &lt;a href=&quot;https://github.com/jimkang/roguemap-parse-stream&quot;&gt;simple streaming parser&lt;/a&gt; for plain text maps. While writing the browser example (I originally wrote it for Node), I began to wonder if I could use the &lt;a href=&quot;https://github.com/substack/stream-handbook&quot;&gt;Power of Streaming&lt;/a&gt; to use it to render some really huge maps.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;
I gave it a map file with about 16 million entities that were each to render to three SVG entities. After fiddling with each of the streams involved to make them respect backpressure, I was able to keep the browser responsive for a while while it rendered these entities. However, at some point, the page would inevitably become unresponsive and the tab would crash.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Who to blame?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I stepped away from the JavaScript and made a huge static HTML file. It has 960,000 SVG &lt;code&gt;&amp;lt;g&amp;gt;&lt;/code&gt; elements, each containing a &lt;code&gt;&amp;lt;rect&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;text&amp;gt;&lt;/code&gt; element.&lt;/p&gt;
&lt;p&gt;Chrome 34.0.1847.131 quits on it (“Aw, Snap!” page) on a Mac running Mavericks with a 2.8 GHz Core i7 and 16 GB RAM. &lt;a href=&quot;https://dl.dropboxusercontent.com/u/263768/lotsofelements.html&quot;&gt;You can try it yourself.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(However, Chrome &lt;em&gt;will&lt;/em&gt; successfully load a page with 480,000 &lt;code&gt;&amp;lt;g&amp;gt;&lt;/code&gt;s!)&lt;/p&gt;
&lt;p&gt;So, if you find yourself having to create this many elements via JavaScript, keep in mind that &lt;em&gt;the fans may scream because of sheer rendering stress, not necessarily because there’s something wrong with your code.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Streaming into a lagoon&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I think there’s a lesson here about streaming as well. Streams are about processing data a manageable chunk at a time, but if you can’t dispose of those chunks after you’re done with them, those chunks pool up, and the chunk-at-a-time benefit of streams is negated. &lt;/p&gt;
&lt;p&gt;In the situation I set up &amp;mdash; piping a huge text file to a parser stream, then piping the parsed tokens to a renderer &amp;mdash; streams of text were transformed into streams of token objects which were then transformed into SVG elements. But those SVG elements did not “pass through.” They piled up in the DOM, eating up memory.&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;stream-overload-diagram-anchor&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;svg width=&quot;800&quot; height=&quot;600&quot; id=&quot;stream-overload-diagram&quot;&gt;
  &lt;defs&gt;
    &lt;radialGradient id=&quot;sphere-gradient&quot;&gt;
      &lt;stop offset=&quot;0&quot; stop-color=&quot;hsl(30, 100%, 80%)&quot;/&gt;
      &lt;stop offset=&quot;0.75&quot; stop-color=&quot;hsl(20, 100%, 60%)&quot;&gt;
        &lt;animate attributeName=&quot;offset&quot; values=&quot;0.75;0.9;0.75&quot; keySplines=&quot;0.1 0.8 0.2 1; 0.1 0.8 0.2 1; 0.1 0.8 0.2 1&quot; dur=&quot;4s&quot; repeatCount=&quot;indefinite&quot; /&gt;
      &lt;/stop&gt;
      &lt;stop offset=&quot;1&quot; stop-color=&quot;hsl(10, 100%, 50%)&quot;&gt;
        &lt;animate attributeName=&quot;stop-color&quot; values=&quot;hsl(10, 100%, 50%);hsl(40, 100%, 70%);hsl(10, 100%, 50%)&quot; keySplines=&quot;0.1 0.8 0.2 1; 0.1 0.8 0.2 1; 0.1 0.8 0.2 1&quot; dur=&quot;4s&quot; repeatCount=&quot;indefinite&quot; /&gt;
      &lt;/stop&gt;
    &lt;/radialGradient&gt;

    &amp;lt;linearGradient id=”pipe-gradient” x1=”0” y1=”0” x2=”100%”, y2=”0”&amp;gt;
      &lt;stop offset=&quot;0&quot; stop-color=&quot;hsl(200, 100%, 10%)&quot; /&gt;
      &lt;stop offset=&quot;0.5&quot; stop-color=&quot;hsl(180, 100%, 20%)&quot;&gt;
        &lt;animate attributeName=&quot;offset&quot; values=&quot;0.5;0.9;0.5&quot; keySplines=&quot;0.1 0.8 0.2 1; 0.1 0.8 0.2 1; 0.1 0.8 0.2 1&quot; dur=&quot;10s&quot; repeatCount=&quot;indefinite&quot; /&gt;
      &lt;/stop&gt;
      &lt;stop offset=&quot;1&quot; stop-color=&quot;hsl(200, 100%, 30%)&quot;&gt;
      &lt;/stop&gt;
    &lt;/linearGradient&gt;
  &lt;/defs&gt;
  &lt;g class=&quot;background-layer&quot;&gt;
  &lt;/g&gt;
  &lt;g id=&quot;chunk-layer&quot;&gt;
  &lt;/g&gt;
  &lt;g id=&quot;static-layer&quot;&gt;
    &lt;g&gt;
      &lt;rect id=&quot;reader&quot; x=&quot;30&quot; y=&quot;300&quot; width=&quot;200&quot; height=&quot;120&quot; 
      class=&quot;station&quot; /&gt;
      &lt;text x=&quot;30&quot; dx=&quot;4.2em&quot; y=&quot;300&quot; dy=&quot;2.8em&quot; width=&quot;200&quot; class=&quot;station-label&quot;&gt;Internet requester&lt;/text&gt;
    &lt;/g&gt;

    &lt;g&gt;
      &lt;path d=&quot; M 250 4
                L 440 4
                L 345 154
                Z&quot;
            class=&quot;station&quot;
            id=&quot;parser&quot; x=&quot;250&quot; y=&quot;4&quot; width=&quot;100&quot; height=&quot;100&quot; /&gt;
      &lt;text x=&quot;250&quot; y=&quot;4&quot; dx=&quot;4em&quot; dy=&quot;2.35em&quot; class=&quot;station-label&quot;&gt;Parser&lt;/text&gt;
    &lt;/g&gt;

    &lt;g&gt;
      &lt;circle id=&quot;renderer&quot; x=&quot;525&quot; y=&quot;175&quot; width=&quot;150&quot; height=&quot;150&quot;
      r=&quot;75&quot; cx=&quot;600&quot; cy=&quot;250&quot; class=&quot;station&quot;&gt;&lt;/circle&gt;
      &lt;text x=&quot;525&quot; y=&quot;175&quot; dx=&quot;3.1em&quot; dy=&quot;2.25em&quot; class=&quot;station-label&quot;&gt;Renderer&lt;/text&gt;
    &lt;/g&gt;
  &lt;/g&gt;
  &lt;g id=&quot;block-layer&quot;&gt;
  &lt;/g&gt;

&lt;/svg&gt;  

&lt;p&gt;Not every object benefits from being hit with a hammer, and some situations benefit less than others from having a streaming pattern applied.&lt;/p&gt;
&lt;script src=&quot;d3.v3.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;basicrequest.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;wordgetter.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;scrollwatcher.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;gravitybox.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;idmaker.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;mover.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;flowcontroller.js&quot;&gt;&lt;/script&gt;
</description>
    </item>
    <item>
      <title>How quadtrees work</title>
      <link>http://jimkang.com/weblog/articles/quadtreevis/</link>
      <pubDate>Mon, 21 Apr 2014 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/quadtreevis/</guid>
      <author></author>
      <description>&lt;p&gt;An interactive explanation of quadtrees relate to spaces, with some details about D3’s implementation of the quadtree.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Writing Chrome Extensions and bookmarklets that mess with the DOM</title>
      <link>http://jimkang.com/weblog/articles/writing-dom-modifying-extensions/</link>
      <pubDate>Sat, 29 Mar 2014 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/writing-dom-modifying-extensions/</guid>
      <author></author>
      <description>&lt;p&gt;Let’s say you want to vandalize with a web page that you didn’t author. You want to see the New York Times in Comic Sans. Or you want to show only the last letter of every paragraph in the &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/UserExperience/Conceptual/AppleHIGuidelines/Intro/Intro.html&quot;&gt;HIG&lt;/a&gt; to see if there’s some &lt;a href=&quot;http://en.wikipedia.org/wiki/Bible_code&quot;&gt;secret message&lt;/a&gt;. Or perhaps you want to do something useful with the web page.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;
One way to do this is open the developer tools in your browser and directly change things in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM&quot;&gt;DOM&lt;/a&gt;. But if you want the world to also be able to do the same, you need to ship a program that does it. For quite a long time, people have been used &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/greasemonkey/&quot;&gt;Greasemonkey&lt;/a&gt; scripts in Firefox deliver them.&lt;/p&gt;
&lt;p&gt;On Chrome, &lt;a href=&quot;http://developer.chrome.com/extensions/index&quot;&gt;Chrome extensions&lt;/a&gt; do this. There’s also &lt;a href=&quot;http://en.wikipedia.org/wiki/Bookmarklet&quot;&gt;bookmarklets&lt;/a&gt;, which are less capable but will work across all browsers.&lt;/p&gt;
&lt;p&gt;Here’s a look at what it takes to make a DOM-altering Chrome extension or bookmarklet. (If you know that what you want to do is make a bookmarklet, though, I recommend you just &lt;a href=&quot;http://jimkang.com/articles/writing-dom-modifying-extensions/#contentscript&quot;&gt;skip down to the content script and bookmarklet parts&lt;/a&gt;.)&lt;/p&gt;
&lt;h1&gt;Extension structure&lt;/h1&gt;

&lt;p&gt;A Chrome extension is a package of JavaScript, CSS, and resource files. They’re balled up into a crx file on the Chrome Web Store, but in development, you can load an unpacked directory in &lt;a href=&quot;chrome://extensions&quot;&gt;chrome://extensions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There’s a &lt;a href=&quot;http://developer.chrome.com/extensions/manifest&quot;&gt;manifest.json&lt;/a&gt; that you need to fill out. Salient fields:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;permissions&amp;quot;: [
  &amp;quot;https://twitter.com/*&amp;quot;
],
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This tells Chrome that this extension will operate on pages that have URLs that begin with &lt;code&gt;https://twitter.com&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;browser_action&amp;quot;: {
    &amp;quot;default_icon&amp;quot;: {
      &amp;quot;19&amp;quot;: &amp;quot;onebyone_icon_19.png&amp;quot;,
      &amp;quot;38&amp;quot;: &amp;quot;onebyone_icon_38.png&amp;quot;
    }
  },
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you specify a &lt;code&gt;browser_action&lt;/code&gt; field, Chrome will put a button in the toolbar for you using the image files you specify. There’s a button click event your script can listen for. You can use this to do something when the user clicks your extension’s button.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;background&amp;quot;: {
  &amp;quot;scripts&amp;quot;: [&amp;quot;node_modules/scriptchain/scriptchain.js&amp;quot;, &amp;quot;background.js&amp;quot;],
  &amp;quot;persistent&amp;quot;: false
},
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here, we’re specifying the &lt;a href=&quot;https://developer.chrome.com/extensions/background_pages&quot;&gt;background scripts&lt;/a&gt; we want to have at the ready to respond to user-instigated events. Usually, I have a background.js file which listens for clicks to the extension’s button, then executes scripts in the context of the active tab. Executing scripts in the context of the active tab is kinda like going to the web page you want to mess with, then running code in the JavaScript console.&lt;/p&gt;
&lt;p&gt;Background script example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var scriptchain = createScriptChain(
  [&amp;#39;readability.js&amp;#39;, &amp;#39;parser.js&amp;#39;, &amp;#39;onebyone.js&amp;#39;], null, false
);

chrome.browserAction.onClicked.addListener(function respondToClick(tab) {
  scriptchain.loadChain();
});
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It’s registering for the &lt;code&gt;chrome.browserAction.onClicked&lt;/code&gt; event and responding to that event by calling &lt;code&gt;scriptchain.loadChain&lt;/code&gt;. &lt;a href=&quot;https://www.npmjs.org/package/scriptchain&quot;&gt;scriptchain&lt;/a&gt; is a helper I wrote that runs a list of scripts on the active tab in order. It’s a convenience, but alternatively, you can call &lt;a href=&quot;http://developer.chrome.com/extensions/tabs#method-executeScript&quot;&gt;chrome.tabs.executeScript&lt;/a&gt; to run your scripts on the tab.&lt;/p&gt;
&lt;p&gt;To sum up, the flow of execution goes like this:&lt;/p&gt;
&lt;ol start=&quot;0&quot;&gt;
&lt;li&gt;User visits a page that is included in the manifest’s &lt;code&gt;permissions&lt;/code&gt; property.&lt;/li&gt;
&lt;li&gt;Chrome loads the background scripts you specified in the manifest. One of them subscribes to the browser button click event.&lt;/li&gt;
&lt;li&gt;User clicks on the extension button in the Chrome toolbar.&lt;/li&gt;
&lt;li&gt;The background script gets the event and responds by executing a script in the context of the tab.&lt;/li&gt;
&lt;li&gt;That script does some cool stuff with the web page in the tab.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a name=&quot;contentscript&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;The content script: Actually doing stuff to the web page, finally&lt;/h1&gt;

&lt;p&gt;Once you’re finally executing code in the context of the web page, it’s a lot like being at a web page, opening the Web Inspector console, and running code. This is where you do your business, so to speak.&lt;/p&gt;
&lt;p&gt;Typically, you want to select DOM elements, read them and then change them or add to them or delete them. You may want to avoid including a big library like jQuery that abstracts that kind of thing in order to keep things light, especially if you’re going to be creating a bookmarklet version of your extension. Fortunately, the DOM API, while clunkier, is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/document.querySelectorAll&quot;&gt;not really all that different&lt;/a&gt; from the abstraction libraries these days.&lt;/p&gt;
&lt;p&gt;Here’s an example from &lt;a href=&quot;http://jimkang.com/twittershuffle/&quot;&gt;Twitter Shuffle&lt;/a&gt;, an extension and bookmarklet I wrote to shuffle around tweets and their authors for some misattribution fun and confusion. (&lt;a href=&quot;https://github.com/jimkang/twitter-shuffle-chrome-extension&quot;&gt;The unabridged file is here.&lt;/a&gt;)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;((function shuffleTweets() {
  ...

  var tweetTexts = document.querySelectorAll(&amp;#39;.tweet-text&amp;#39;);
  var tweetContents = [];
  tweetTexts.forEach(function getContents(tweet) {
    tweetContents.push(tweet.innerHTML);
  });
  var shuffledContents = shuffle(tweetContents);

  tweetTexts.forEach(function replaceWithShuffled(tweetText, i) {
    tweetText.innerHTML = shuffledContents[i];
  });

})());
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here is where you’d do the thing you want to do with the web page. You could do anything here. It’s like a &lt;a href=&quot;http://html5zombo.com/&quot;&gt;Zombo.com&lt;/a&gt; inside of that &lt;a href=&quot;http://benalman.com/news/2010/11/immediately-invoked-function-expression/&quot;&gt;IIFE&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;bookmarkletize&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Bookmarkletize&lt;/h1&gt;

&lt;p&gt;So, how would this work as a bookmarklet? You just have get a bookmark created on your users’ browsers that has a URL that looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;javascript:&amp;lt;Your IIFE&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can’t really tell most users “copy this code, then edit a bookmark and paste it into the URL field.” You need to create a web page that has a link that contains your code in the &lt;code&gt;href&lt;/code&gt; and tell them to drag it to the bookmarks bar. Like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;Drag this to your bookmarks bar:&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
  &amp;lt;a class=&amp;quot;bookmarklet&amp;quot; href=&amp;quot;javascript:&amp;lt;Your IIFE&amp;quot;&amp;gt;Greatest Bookmarklet of All Time!&amp;lt;/a&amp;gt;
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It’d be great if bookmarklet installation could be even simpler (some people don’t have their bookmarks bar showing), but I think it’s the best we can do for now.&lt;/p&gt;
&lt;p&gt;To squeeze your IIFE into an &lt;code&gt;href&lt;/code&gt;, you’ll need to crunch it down to one line Minification wouldn’t hurt, either. You can do it by hand, but I recommend your run it through &lt;a href=&quot;https://github.com/mishoo/UglifyJS2&quot;&gt;UglifyJS&lt;/a&gt;. On a Mac, you do this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;uglifyjs yourcontentscript.js -m | pbcopy
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The minified code will be in your pasteboard. You can cmd+V it into your &lt;code&gt;href=&amp;quot;javascript:&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;Why even bother with a Chrome extension, then?&lt;/h1&gt;

&lt;p&gt;Well, there’s stuff you can do in a Chrome extension that you can’t do in a bookmarklet. Chrome extensions are also easier to install. At least on Chrome. But yeah, if you know you don’t need any of that, just make a bookmarklet.&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>