<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jimkang.com</title>
    <atom:link href="http://jimkang.com/feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>http://jimkang.com</link>
    <description>It's dot com.</description>
    <pubDate>Thu, 10 Oct 2019 20:00:00 -0400</pubDate>
    <generator>Wintersmith - https://github.com/jnordberg/wintersmith</generator>
    <language>en</language>
    <item>
      <title>Russell's Paradox</title>
      <link>http://jimkang.com/weblog/articles/russells-paradox/</link>
      <pubDate>Thu, 10 Oct 2019 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/russells-paradox/</guid>
      <author></author>
      <description>&lt;p&gt;Back in 1902, mathematicians defined a set as follows:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A collection of distinct objects, where an object can be anything, including a set.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, here are some sets under that definition:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;{ 4, 5, 6 }
{ a, b, c, d }
{ 8, a, üåç, ‚ÄúThe concept of FOMO‚Äù, ü§î }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But also: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A = { 0, 1, 2, A }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Where A is a set that has the element A, which is‚Ä¶itself.&lt;/p&gt;
&lt;p&gt;For decades, mathematicians thought this was fine, until Bertrand Russell pointed out a paradox.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Bertrand_Russell&quot;&gt;Bertrand Russell&lt;/a&gt; gave the label ‚Äúextraordinary sets‚Äù to sets like A that refer to themselves. He called non-self-referential sets (like &lt;code&gt;{ 4, 5, 6}&lt;/code&gt;) ‚Äúordinary sets‚Äù. It follows that every set must be either: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Extraordinary&lt;/li&gt;
&lt;li&gt;Ordinary&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;However! If you say that there is a set, S, that is a collection of &lt;em&gt;all ordinary sets&lt;/em&gt;, is S ordinary or or is it extraordinary?&lt;/p&gt;
&lt;p&gt;The answer is that it is &lt;strong&gt;neither&lt;/strong&gt;, which is why this is a paradox. Here‚Äôs a verbal explanation that looks at the two cases.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;S is an ordinary set.&lt;/strong&gt; Well, this can‚Äôt be right because if it ‚Äúcontains all ordinary sets‚Äù, and S is an ordinary set, then S contains S. If S contains S, S is a an extraordinary set.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;S is an extraordinary set.&lt;/strong&gt; An extraordinary set contains itself. But S is the set of all ordinary sets. If it contains itself, then it contains an extraordinary set. So, it cannot be both an extraordinary set and the set of all ordinary sets.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, yeah, it is neither.&lt;/p&gt;
&lt;p&gt;I had a bit of trouble getting this to sink in. I made this face ü§î for quite a while. I think it would have helped me to think of it this way:&lt;/p&gt;
&lt;h2 id=&quot;there-are-two-conditions-that-need-to-be-met-in-order-for-it-to-not-be-a-paradox-&quot;&gt;There are two conditions that need to be met in order for it to NOT be a paradox.&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;S has to contain all ordinary sets, as defined.&lt;/li&gt;
&lt;li&gt;You have to designate S to be either extraordinary or ordinary, and that designation has to hold up. (If you say it‚Äôs ordinary, it has to be ordinary.)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;there-are-two-things-you-can-change-to-see-if-you-can-meet-both-of-the-above-conditions-&quot;&gt;There are two things you can change to see if you can meet both of the above conditions.&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;S can either contain itself or not contain itself.&lt;/li&gt;
&lt;li&gt;S can be designated as either extraordinary or ordinary.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;work-it-out-for-yourself&quot;&gt;Work it out for yourself&lt;/h1&gt;
&lt;p&gt;Below is a tool that:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Lets you change the two things you can change. &lt;strong&gt;Click&lt;/strong&gt; on ‚ÄúOrdinary‚Äù or ‚ÄúExtraordinary‚Äù to change the designation of S. &lt;strong&gt;Drag&lt;/strong&gt; the ‚ÄúReference to set S‚Äù inside and outside of the box that represents set S.&lt;/li&gt;
&lt;li&gt;Automaticaly evaluates the effects of your changes on the two conditions.&lt;/li&gt;
&lt;/ol&gt;
&lt;style&gt;
  .centered-col {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  #russell-experiment-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    border-radius: 1em;
    font-family: Ubuntu, roboto, noto, segoe ui, -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, arial, sans-serif;
    position: relative;
  }

  #russell-experiment-container h1,h2,h3 {
    font-family: Ubuntu, roboto, noto, segoe ui, -apple-system, BlinkMacSystemFont, avenir next, avenir, helvetica neue, helvetica, arial, sans-serif;
  }

  #russell-experiment-container h1 {
    font-size: 1.2em;
  }

  #russell-experiment-container h2 {
    font-size: 1em;
  }

  #sets-container {
    width: 45%;
    min-width: 15em;
    border: 1px solid #666;
    border-radius: 1em;
    padding: 1em;
  }

  #evaluator-container {
    width: 45%;
    padding-right: 0.5em;
    border-radius: 1em;
  }

  #set-s {
    border: 8px solid hsl(310, 70%, 50%);
    border-radius: 1em;
    padding-bottom: 7em;
    padding-left: 0.5em;
    padding-right: 0.5em;
    margin-bottom: 6em;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  #russell-experiment-container .controls {
  }

  #russell-experiment-container .controls ul {
    list-style-type: none;
    margin: 0;
  }

  #ref-s {
    background-color: hsla(313.3, 80.8%, 67.3%, 0.8);
    position: absolute;
    cursor: pointer;
    padding-top: 0.3em;
    padding-bottom: 0.3em;
    padding-left: 0.5em;
    padding-right: 0.5em;
    border-radius: 0.5em;
    border-color: hsl(300.5, 53.9%, 42.5%);
    border-style: solid;
    border-width: 4px;
  }

  #evaluator-container ul {
     list-style-type: none;
     margin: 0;
  }

  #evaluator-container li {
    border-style: solid;
    border-width: 4px;
    border-radius: 0.5em;
    padding: 1em;
  }

  #evaluator-container .verdict {
    font-weight: 900;
    font-size: 1.5em;
    text-transform: uppercase;
    text-align: center;
  }

  .condition {
    border-color: #d22312; /* red, a little rusty */
    opacity: 1;
    transition: height 1s, opacity 1s, padding 1s;
  }

  #s-contains-all-ordinary-condition-second-pass {
    height: 11em;
  }

  .condition-passed {
    border-color: #29c16a; /* green */
  }

  .condition .reason {
    font-style: italic;
    font-size: 0.7em;
    margin-top: 0.5em;
  }

  .aura {
    box-shadow: 0 0 10px 4px hsla(310, 80%, 50%, 0.75);
  }

  #ref-s {
    text-align: center;
  }

  #ref-s.selected {
    border-style: dashed;
  }

  #s-contains-all-ordinary-condition-second-pass.hidden {
    height: 0;
    opacity: 0;
    padding: 0;
  }

&lt;/style&gt;

&lt;div id=&quot;russell-experiment-container&quot;&gt;
  &lt;div id=&quot;sets-container&quot;&gt;
  &lt;div id=&quot;set-s&quot; class=&quot;centered-col&quot;&gt;
  &lt;h1&gt;Set S&lt;/h1&gt;
  &lt;div class=&quot;set-element&quot;&gt;
    [ &lt;em&gt;{ 0, 1, 2 }&lt;/em&gt;, &lt;em&gt;{ a, b, c }&lt;/em&gt;, and all of the other ordinary sets ]
  &lt;/div&gt;
  &lt;/div&gt;&lt;!-- close set-s --&gt;
  &lt;div class=&quot;controls centered-col&quot;&gt;
    &lt;strong&gt;Designate S as:&lt;/strong&gt;
    &lt;form&gt;&lt;ul&gt;
      &lt;li&gt;&lt;input id=&quot;set-designation-ordinary&quot; type=&quot;radio&quot; name=&quot;set-designation&quot; checked&gt;&lt;label for=&quot;set-designation-ordinary&quot;&gt;Ordinary&lt;/label&gt;&lt;/li&gt;
      &lt;li&gt;&lt;input id=&quot;set-designation-extraordinary&quot; type=&quot;radio&quot; name=&quot;set-designation&quot;&gt;&lt;label for=&quot;set-designation-extraordinary&quot;&gt;Extraordinary&lt;/label&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/form&gt;
  &lt;/div&gt;
  &lt;/div&gt;&lt;!-- close sets-container --&gt;
  &lt;div id=&quot;evaluator-container&quot; class=&quot;centered-col&quot;&gt;
    &lt;h1&gt;Condition checkers&lt;/h1&gt;
    &lt;ul id=&quot;evaluator-list&quot;&gt;
      &lt;li class=&quot;condition&quot; id=&quot;s-contains-all-ordinary-condition&quot;&gt;
        &lt;div class=&quot;description&quot;&gt;S contains all ordinary sets per definition of S:&lt;/div&gt;
        &lt;div class=&quot;verdict&quot;&gt;NO&lt;/div&gt;
        &lt;div class=&quot;reason&quot;&gt;&lt;/div&gt;
      &lt;/li&gt;
      &lt;li class=&quot;condition&quot; id=&quot;s-designation-condition&quot;&gt;
        &lt;div class=&quot;description&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;verdict&quot;&gt;NO&lt;/div&gt;
        &lt;div class=&quot;reason&quot;&gt;&lt;/div&gt;
      &lt;/li&gt;
      &lt;li class=&quot;condition hidden&quot; id=&quot;s-contains-all-ordinary-condition-second-pass&quot;&gt;
        &lt;div class=&quot;description&quot;&gt;&lt;em&gt;[Second look]&lt;/em&gt; S contains all ordinary sets per definition of S:&lt;/div&gt;
        &lt;div class=&quot;verdict&quot;&gt;NO&lt;/div&gt;
        &lt;div class=&quot;reason&quot;&gt;&lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div id=&quot;ref-s&quot; draggable=&quot;true&quot; style=&quot;left: 120px; top: 440px;&quot;&gt;Reference to set S&lt;br&gt;&lt;em&gt;(You can drag this.)&lt;/em&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;script&gt;
(function russell() {
  var dragEl = document.getElementById('ref-s');
  var setEl = document.getElementById('set-s');
  var extraordinaryButton = document.getElementById(
    'set-designation-extraordinary'
  );
  var ordinaryButton = document.getElementById('set-designation-ordinary');
  var sContainsAllOrdinaryEl = document.getElementById(
    's-contains-all-ordinary-condition'
  );
  var sDesignationHoldsUpEl = document.getElementById(
    's-designation-condition'
  );
  var sContainsAllOrdinarySecondPassEl = document.getElementById(
    's-contains-all-ordinary-condition-second-pass'
  );

  var dragging = false;

  var lastPageX;
  var lastPageY;

  dragEl.addEventListener('mousedown', onMouseDown);
  window.addEventListener('mouseup', onMouseUp);
  window.addEventListener('mousemove', onMouseMove);

  dragEl.addEventListener('touchstart', onMouseDown);
  window.addEventListener('touchend', onMouseUp);
  window.addEventListener('touchcancel', onMouseUp);
  window.addEventListener('touchmove', onMouseMove);

  extraordinaryButton.addEventListener('click', onSetDesignationClick);
  ordinaryButton.addEventListener('click', onSetDesignationClick);

  passStateFromUIToEvaluate();


  function onMouseDown(e) {
    e.preventDefault();
    dragging = true;
    //console.log('dragging', dragging);
    dragEl.classList.add('selected');
  }

  function onMouseUp(e) {
    e.preventDefault();
    dragging = false;
    //console.log('dragging', dragging);
    dragEl.classList.remove('selected');
    setEl.classList.remove('aura');

    passStateFromUIToEvaluate();
  }

  function onMouseMove(e) {
    //e.preventDefault();

    if (!dragging) {
      return;
    }

    //console.log('e.pageX', e.pageX);
    if (lastPageX === undefined || lastPageY === undefined) {
      lastPageX = e.pageX;
      lastPageY = e.pageY;
      return;
    }

    const deltaX = e.pageX - lastPageX;
    const deltaY = e.pageY - lastPageY;

    // Chop off 'px' from string.
    const oldX = +dragEl.style.getPropertyValue('left').slice(0, -2);
    const oldY = +dragEl.style.getPropertyValue('top').slice(0, -2);

    const newX = oldX + deltaX;
    const newY = oldY + deltaY;

    /*
    console.log(
      'oldX',
      oldX,
      'oldY',
      oldY,
      'deltaX',
      deltaX,
      'deltaY',
      deltaY,
      'newX',
      newX,
      'newY',
      newY
    );
    */

    dragEl.style.setProperty('left', newX + 'px');
    dragEl.style.setProperty('top', newY + 'px');

    lastPageX = e.pageX;
    lastPageY = e.pageY;

    // Could optimize this with a flag instead of always changing class.
    if (elOverlapsEl(dragEl, setEl)) {
      setEl.classList.add('aura');
    } else {
      setEl.classList.remove('aura');
    }
  }

  function onSetDesignationClick() {
    passStateFromUIToEvaluate();
  }

  function passStateFromUIToEvaluate() {
    evaluateConditions({
      refIsInSet: elOverlapsEl(dragEl, setEl),
      sDesignation: extraordinaryButton.checked ? 'extraordinary' : 'ordinary'
    });
  }

  function evaluateConditions({ refIsInSet, sDesignation }) {
    var sContainsAllOrdinarySets;
    var containsReason;
    var hideSecondPass = true;

    if (sDesignation === 'ordinary') {
      // If it's an ordinary set, in order for S to contain
      // all ordinary sets, S has to contain itself!
      sContainsAllOrdinarySets = refIsInSet;
      containsReason = `Since S is ordinary, a set that contains all ordinary sets must contain S (an ordinary set). S does ${refIsInSet ? '' : 'NOT '}contain S.`;
      hideSecondPass = !refIsInSet;
    } else {
      sContainsAllOrdinarySets = !refIsInSet;
      containsReason = `Since S is extrardinary, a set that contains all ordinary sets (and ONLY ordinary sets) cannot contain S. S does ${refIsInSet ? '' : 'NOT '}contain S.`;
    }

    var sDesignationHoldsUp;
    var sDesignationHoldsUpReason;

    if (sDesignation === 'ordinary') {
      sDesignationHoldsUp = !refIsInSet;
      sDesignationHoldsUpReason = `Ordinary sets must not contain themselves. S does ${refIsInSet ? '' : 'NOT '}contain itself.`;
    } else {
      // If it is designated an extraordinary set, then
      // it has to have a reference to itself.
      sDesignationHoldsUp = refIsInSet;
      sDesignationHoldsUpReason = `Extraordinary sets must contain themselves. S does ${refIsInSet ? '' : 'NOT '}contain itself.`;
    }

    const conditionTextHTML = `As you have designated it, S is an ${sDesignation} set (&lt;strong&gt;is${
      sDesignation === 'ordinary' ? ' not' : ''
    } &lt;/strong&gt; an element of itself):`;

    var sContainsAllOrdinarySetsSecondPass = sContainsAllOrdinarySets;
    var containsSecondPassReason = containsReason;
    // Reevaluate based on the discovery that S is extraordinary.
    if (!hideSecondPass) {
      const isExtraordinary = (sDesignation === 'ordinary' &amp;&amp; !sDesignationHoldsUp) || (sDesignationHoldsUp === 'extraordinary' &amp;&amp; sDesignationHoldsUp);
      sContainsAllOrdinarySetsSecondPass = sContainsAllOrdinarySets &amp;&amp; refIsInSet &amp;&amp; !isExtraordinary;
      containsSecondPassReason = `Upon finding that the designation of &quot;${sDesignation}&quot; ${sDesignationHoldsUp ? 'CAN ' : 'CANNOT '} be true (see above), we now say that S is ${isExtraordinary ? 'extraordinary' : 'ordinary'}, so it does ${isExtraordinary ? 'NOT ' : ' '}contain only ordinary sets.`;
    }

    updateConditionEl({
      verdict: sContainsAllOrdinarySets,
      parent: sContainsAllOrdinaryEl,
      reason: containsReason
    });
    updateConditionEl({
      descriptionHTML: conditionTextHTML,
      verdict: sDesignationHoldsUp,
      parent: sDesignationHoldsUpEl,
      reason: sDesignationHoldsUpReason
    });

    updateConditionEl({
      hide: hideSecondPass,
      verdict: sContainsAllOrdinarySetsSecondPass,
      parent: sContainsAllOrdinarySecondPassEl,
      reason: containsSecondPassReason
    });
  }

  function updateConditionEl({ verdict, parent, descriptionHTML, reason, hide }) {
    parent.classList[verdict ? 'add' : 'remove']('condition-passed');
    if (descriptionHTML) {
      let desc = document.querySelector(`#${parent.id} .description`);
      if (desc) {
        desc.innerHTML = descriptionHTML;
      }
    }
    let verdictEl = document.querySelector(`#${parent.id} .verdict`);
    if (verdictEl) {
      // We don't make these all caps here because Wintersmith
      // will convert it to &lt;span class=&quot;caps&quot;&gt;YES&lt;/span&gt;
      verdictEl.textContent = verdict ? 'yes' : 'no';
    }
    let reasonEl = document.querySelector(`#${parent.id} .reason`);
    if (reasonEl) {
      reasonEl.textContent = reason;
    }
    parent.classList[hide ? 'add' : 'remove']('hidden');
  }

  function elOverlapsEl(el1, el2) {
    var bounds1 = el1.getBoundingClientRect();
    var bounds2 = el2.getBoundingClientRect();

    var left1IsInsideEl2,
      right1IsInsideEl2,
      top1IsInsideEl2,
      bottom1IsInsideEl2;

    left1IsInsideEl2 = nIsInsideRange(
      bounds1.left,
      bounds2.left,
      bounds2.right
    );
    if (!left1IsInsideEl2) {
      right1IsInsideEl2 = nIsInsideRange(
        bounds1.right,
        bounds2.left,
        bounds2.right
      );
    }

    top1IsInsideEl2 = nIsInsideRange(bounds1.top, bounds2.top, bounds2.bottom);
    if (!top1IsInsideEl2) {
      bottom1IsInsideEl2 = nIsInsideRange(
        bounds1.bottom,
        bounds2.top,
        bounds2.bottom
      );
    }

    return (
      (left1IsInsideEl2 || right1IsInsideEl2) &amp;&amp;
      (top1IsInsideEl2 || bottom1IsInsideEl2)
    );
  }

  function nIsInsideRange(n, lower, upper) {
    return n &gt;= lower &amp;&amp; n &lt;= upper;
  }
})();
&lt;/script&gt;

&lt;p&gt;&lt;br&gt;
Go ahead and try out all of the possible combinations. I hope you‚Äôll see that there‚Äôs no options that result in both the definition of S as the set of all ordinary sets being respected &lt;em&gt;and&lt;/em&gt; S being either ordinary or extraordinary.&lt;/p&gt;
&lt;p&gt;(Due to me not coming to this concept with fresh eyes, I can‚Äôt really know for sure whether or not this will help you understand Russell‚Äôs Paradox. Please &lt;a href=&quot;mailto:jimkang@fastmail.com&quot;&gt;email me&lt;/a&gt; and let me know if it does not or does!)&lt;/p&gt;
&lt;p&gt;If you‚Äôre wondering what they did about this paradox, eight years after he introduced the paradox, Russell proposed redefining sets so that mathematicians could continue with their work. Sets were redefined so that they could not include themselves. Collections that included themselves are now called &lt;em&gt;classes&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I learned about Russell‚Äôs Paradox from the excellent graph theory book &lt;a href=&quot;https://www.goodreads.com/book/show/906275.Dots_And_Lines&quot;&gt;Dots and Lines by Richard J. Trudeau&lt;/a&gt;, which is &lt;a href=&quot;https://www.abebooks.com/servlet/SearchResults?sts=t&amp;cm_sp=SearchF-_-home-_-Results&amp;kn=&amp;an=richard+trudeau&amp;tn=dots+and+lines&amp;isbn=&quot;&gt;~$5 used&lt;/a&gt;!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Running your own email server (so you can have an automated mailing list)</title>
      <link>http://jimkang.com/weblog/articles/running-your-own-email-server/</link>
      <pubDate>Sat, 10  Aug 2019 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/running-your-own-email-server/</guid>
      <author></author>
      <description>&lt;p&gt;Earlier this month, I needed to be able to send automated email in order to send &lt;a href=&quot;https://tinyletter.com/bots&quot;&gt;daily roundups&lt;/a&gt; of stuff produced by my &lt;a href=&quot;https://smidgeo.com/bots/&quot;&gt;bots&lt;/a&gt;. Most of the APIs I saw for sending lots of email was for mass marketing (with the kind of pricing and data policies you‚Äôd expect to come along with that). So, I thought, email is well-established&lt;a href=&quot;http://jimkang.com/articles/running-your-own-email-server/#ps-email-history&quot;&gt;*&lt;/a&gt;, so it must be in reach of the common developer! I‚Äôll just set up my own email server and mailing list.&lt;/p&gt;
&lt;p&gt;Well, you know how this is going to go.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;configuring-the-service-on-your-server&quot;&gt;Configuring the service on your server&lt;/h1&gt;
&lt;p&gt;The mildest part of this undertaking was installing and configuring a mail transfer agent (MTA). The MTA is the thing that the mail clients send mail to and receive mail from. The MTA relays that mail to other MTAs, which eventually route the mail to its ultimate destination.&lt;/p&gt;
&lt;p&gt;On Ubuntu 18 (and probably earlier versions), postfix is installed by default. Installation done!&lt;/p&gt;
&lt;p&gt;The configuration file for it is at &lt;code&gt;/etc/postfix/main.cf&lt;/code&gt;. I changed the following things in it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Set the domain to your domain. My domain happens to be smidgeo.com.
mydomain = smidgeo.com
# Set your hostname to be on your domain.
myhostname = mail.smidgeo.com
# Tell postfix to use say that mail from here some from @$mydomain.
myorigin = $mydomain
# Send notification emails about all of these kinds of problems to root@$mydomain.
notify_classes = resource, software, bounce, policy
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I then restarted postfix (&lt;code&gt;[sudo] service postfix restart&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;I tested by sending mail from the server (I tried both &lt;code&gt;sendmail&lt;/code&gt; and &lt;code&gt;mutt&lt;/code&gt;) to an address on Fastmail. After a while, I guessed that it wasn‚Äôt going to make it.&lt;/p&gt;
&lt;p&gt;This is the most brutal problem with debugging mail stuff: Sending mail isn‚Äôt instantaneous, and you can‚Äôt tell how long is a reasonable time to wait to see if something failed. Sometimes mail doesn‚Äôt get to its destination for an hour, then makes it after that.&lt;/p&gt;
&lt;p&gt;Tailing the mail log before you send an email helps to at least verify that postfix got the mail.  &lt;code&gt;tail -f /var/log/mail.log&lt;/code&gt;. A bunch of stuff will appear in the log if postfix gets your email and attempts to send it out. Sometimes, it‚Äôll log that a relay rejected an email it sent, with a reason, which really helps!&lt;/p&gt;
&lt;h1 id=&quot;setting-up-dns-so-that-your-mail-server-appears-proper&quot;&gt;Setting up DNS so that your mail server appears proper&lt;/h1&gt;
&lt;p&gt;I had known about MX records, but I wasn‚Äôt sure how necessary they were. My mail wasn‚Äôt going through, so it looked like they were necessary. Referring to the DNS section of the &lt;a href=&quot;https://www.c0ffee.net/blog/mail-server-guide/#overview&quot;&gt;mail server guide&lt;/a&gt;, I created the following records:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;A&lt;/code&gt; record for the mail domain&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MX&lt;/code&gt; record to point to the mail domain&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TXT&lt;/code&gt; record that says &lt;code&gt;v=spf1 mx -all&lt;/code&gt; (I don‚Äôt actually know what that means.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Over in my postfix config, I initially did not have a fully qualified‚Ä¶something. It was either &lt;code&gt;myhostname&lt;/code&gt; or &lt;code&gt;myorigin&lt;/code&gt;. As a result, I got a &lt;code&gt;mail.log&lt;/code&gt; entry that let me know Fastmail had rejected my MTA‚Äôs email:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Jul 21 21:04:00 smallcatlabs-disruption-pod postfix/smtp[19654]: 42AE5DF3AD: to=jimkang@fastmail.com, relay=in1-smtp.messagingengine.com[66.111.4.72]:25, delay=1.1,delays=0.02/0.01/1.1/0.02, dsn=5.5.2, status=bounced (host in1-smtp.messagingengine.com[66.111.4.72] said: 504 5.5.2 root@smallcatlabs-disruption-pod: Sender address rejected: need fully-qualified address (in reply to RCPT TO command))
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Once I fully qualified the domain name, emails sent from my MTA were accepted by Fastmail‚Äôs relay!&lt;/p&gt;
&lt;h1 id=&quot;the-next-barrier-gmail&quot;&gt;The next barrier: Gmail&lt;/h1&gt;
&lt;p&gt;Since everyone‚Äôs on Gmail (actually one of the milder symptoms of the &lt;a href=&quot;https://concentrationcrisis.openmarketsinstitute.org/&quot;&gt;concentration crisis&lt;/a&gt;), I then tested by sending to Gmail. Gmail bounced my email. &lt;a href=&quot;https://support.google.com/mail/answer/81126#authentication&quot;&gt;They have guidelines that give hints about why they bounce stuff.&lt;/a&gt; The most likely reason was that I did not set up a reverse DNS record.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/reverse_DNS_lookup&quot;&gt;Reverse DNS&lt;/a&gt; is not a standard, and as far as I can tell, in practice, it‚Äôs only used to verify that a spammer is sending email using a hijacked domain. I had some trouble finding out how to set up a reverse DNS record. My domain registrar, Hover, told me they couldn‚Äôt do it and suggested other companies.&lt;/p&gt;
&lt;p&gt;I wanted to avoid something as disruptive as moving registrars, so I looked around a bit more on Duck Duck Go. Turns out that my virtual private server provider, Digital Ocean, provides reverse DNS for free. You just have to name your droplet (their branded term for a server instance) to match the domain name!&lt;/p&gt;
&lt;h1 id=&quot;and-yet-another-several-rakes-to-step-on&quot;&gt;And yet another several rakes to step on&lt;/h1&gt;
&lt;p&gt;With the reverse DNS record set up, Gmail stopped bouncing mail from my server. However, it also put it in the spam box 100% of the time.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/running-your-own-email-server/sideshow-bob-next-rake.gif&quot; alt=&quot;Sideshow Bob steps on the next rake&quot;&gt;&lt;/p&gt;
&lt;p&gt;To get out of Gmail‚Äôs spam box, there are a few dozen suggestions on &lt;a href=&quot;https://support.google.com/mail/answer/81126&quot;&gt;Google‚Äôs sender guidelines page&lt;/a&gt;, including using DKIM, SPF, and DMARC. Any one of those suggestions could have potentially taken days to implement, and there is no guarantee that following every one of them would get my emails out of the spam box.&lt;/p&gt;
&lt;p&gt;I‚Äôm not some kind of email superfan, so I decided to avoid getting into this world.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/running-your-own-email-server/sideshow-bob-rakes.png&quot; alt=&quot;More rakes for Sideshow Bob to step on&quot;&gt;&lt;/p&gt;
&lt;p&gt;Since the mail issue was getting trust from Gmail, I decided to leverage someone else‚Äôs reputation.&lt;/p&gt;
&lt;h1 id=&quot;tinyletter&quot;&gt;TinyLetter&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://tinyletter.com/&quot;&gt;Tinyletter&lt;/a&gt; is a mailing list service that I use for my &lt;a href=&quot;https://tinyletter.com/jimkang&quot;&gt;projects newsletter&lt;/a&gt;. Tinyletter is a MailChimp product that Google already trusts. So, if I had something compose my bot emails and send email through TinyLetter, I could get that email through to my mailing list subscribers that are on Gmail.&lt;/p&gt;
&lt;p&gt;In addition to having a UI in which you can compose and send emails to your mailing list, TinyLetter provides a secret email. You can send a message to that email, then TinyLetter will post that message to your mailing list.&lt;/p&gt;
&lt;p&gt;The complication ‚Äî for a fully automated mailing list ‚Äî is that it requires you to confirm that you want to send the email. TinyLetter replies to your email with another email asking you to reply to that second email without changing the subject in order to send the first email to the mailing list.&lt;/p&gt;
&lt;h1 id=&quot;auto-reply&quot;&gt;Auto-reply&lt;/h1&gt;
&lt;p&gt;The first thing I needed to do to get auto-replies to these confirmation requests working was to actually be able to recieve mail at my server. Receiving email hadn‚Äôt worked, and I didn‚Äôt care. Well, now the time for caring was at hand.&lt;/p&gt;
&lt;p&gt;One more of of the following measures have fixed receiving email at my server:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I opened port 25 to the world by running &lt;code&gt;ufw allow 25&lt;/code&gt;. (I neglected to check whether it was closed before I ran this, so it may not have mattered.)&lt;/li&gt;
&lt;li&gt;Properly included my domain in &lt;code&gt;mydestination&lt;/code&gt; in &lt;code&gt;/etc/postfix/mail.cf&lt;/code&gt;. Before, I had mail.smidgeo.com, even though the mail is actually addressed to @smidgeo.com. It has to match the part after the @ in emails sent to the server.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Next, I needed something to auto-reply to TinyLetter confirmation emails. I was hoping to not write something, so I checked out &lt;code&gt;vacation&lt;/code&gt;, a nicely established simple Unix program for sending auto-replies that say the user is on vacation.&lt;/p&gt;
&lt;p&gt;After getting it to work, I found out you can‚Äôt (as far as I could tell) make it reply using the &lt;code&gt;Reply-To&lt;/code&gt; field instead of the &lt;code&gt;From&lt;/code&gt; field of the incoming message.&lt;/p&gt;
&lt;p&gt;This ended my &lt;code&gt;vacation&lt;/code&gt; journey. TinyLetter confirmation emails come from some Mandrill remailer thing; sending your reply there does nothing. You have to send your reply to the email in the &lt;code&gt;Reply-To&lt;/code&gt; field for TinyLetter to actually send the message to the mailing list.&lt;/p&gt;
&lt;p&gt;So, I added my own little &lt;a href=&quot;https://github.com/jimkang/email-rss-sample/blob/master/respond-to-confirmation.js&quot;&gt;auto-reply program&lt;/a&gt; to &lt;a href=&quot;https://github.com/jimkang/email-rss-sample&quot;&gt;email-rss-sample&lt;/a&gt;, my Node package for grabbing RSS, formatting the sampled entries into HTML email, then sending them via &lt;code&gt;sendmail&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I hooked it up to receive incoming mail through stdin by adding this line to my &lt;code&gt;.forward&lt;/code&gt; file (people that went to college in the ‚Äò90s may remember &lt;code&gt;.forward&lt;/code&gt; files as text files you just put a single email into):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  \&amp;lt;username that the program runs as&amp;gt;, &amp;quot;|&amp;lt;location of this project on your server&amp;gt;/respond-to-confirmation.js&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That pipes email for the user to the program, which checks various conditions, then shells out to sendmail to send a reply.&lt;/p&gt;
&lt;h1 id=&quot;what-i-ended-up-with&quot;&gt;What I ended up with&lt;/h1&gt;
&lt;p&gt;In the end, to email samples of what my bots did each day to a mailing list, I needed this system:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://jimkang.com/articles/running-your-own-email-server/bot-email-system.svg&quot; alt=&quot;Arrows pointing at lots of things involved in sending emails&quot;&gt;&lt;/p&gt;
&lt;p&gt;In the diagram above, every box represents some sort of program. Every arrow is a communication between a program with another program, containing a payload. The payload could be an email message, an RSS feed, or text. Each communication has a number indicating the order in which it is executed.&lt;/p&gt;
&lt;p&gt;The part where RSS posts from my bots are sampled are formatted and assembled into an HTML summary is fairly straightforward and unit testable. Once we move on to the volleys of emails, things become less deterministic and controllable.&lt;/p&gt;
&lt;p&gt;All that said, it‚Äôs been working fine for about a week. &lt;a href=&quot;https://tinyletter.com/bots&quot;&gt;Sign up&lt;/a&gt; if you want some art generated each day! I‚Äôve only had to &lt;a href=&quot;https://tinyletter.com/bots/letters/what-the-bots-are-apologizing-for-today&quot;&gt;apolologize once&lt;/a&gt; so far.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;hr&gt;

&lt;h1 id=&quot;-span-id-ps-email-history-p-s-why-i-thought-it-would-be-easy-span-&quot;&gt;&lt;span id=&quot;ps-email-history&quot;&gt;P.S. Why I thought it would be easy&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;Email is a technology that has been around since nearly the beginning of the Internet. &lt;/p&gt;
&lt;p&gt;Here in 2019, &lt;a href=&quot;https://morningconsult.com/2017/06/21/poll-gmail-dominates-email-use/&quot;&gt;70% of people use either Gmail or Yahoo Mail&lt;/a&gt;, at least according to that poll. But in the ‚Äò90s (and before), email traffic was handled by servers run by a diverse group of institutions. If you went to a university, your email was likely received and relayed by some computers on campus. If you worked at a company, your work email probably also went through servers in your company‚Äôs buildings. ISPs (and there used to be many ISPs) each had their own email servers.&lt;/p&gt;
&lt;p&gt;This history made it seem like a stable technology that could be administered by someone with a 1999-level of technical understanding. Unfortunately, the spam wars (and maybe the consolidation of the control of email into very few hands), have made trust in email a much more complex issue.&lt;/p&gt;
&lt;p&gt;As a result, sending email from your own server, like so many things, is more or less out of the hands of a person that has a day job and a limited amount of time. It is the domain of large corporate aggregators that trust each other.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Weasley debugging</title>
      <link>http://jimkang.com/weblog/articles/weasley-debugging/</link>
      <pubDate>Sat, 02 Mar 2019 19:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/weasley-debugging/</guid>
      <author></author>
      <description>&lt;p&gt;Roughly 80% of the code in &lt;a href=&quot;https://github.com/jimkang/play-audio-url&quot;&gt;a module I just wrote&lt;/a&gt; will never come into play. This is because I was debugging a problem in the manner of Ron Weasley blaming Snape for some evil at the beginning of a Harry Potter book.
&lt;br&gt;&lt;br&gt;
In my case, Snape is the Safari web browser.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I‚Äôm predisposed to believing Safari is bizarre and the cause of many problems. When I hit an issue with it not allowing my web app to play audio though the other browsers did allow it, I started writing code before &lt;a href=&quot;https://tvtropes.org/pmwiki/pmwiki.php/Main/MistakenForEvidence&quot;&gt;making sure I knew the cause of a problem&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Yesterday, I said the purpose of the play-audio-url was this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Plays audio when it‚Äôs possible to play it via an HTMLAudioElement (as of 3/1/2019, this will work in Firefox and Chrome) and falls back to downloading the audio file and playing via an AudioContext if it can‚Äôt (as of 3/1/2019, Safari doesn‚Äôt allow HTMLAudioElement to play programmatically, even if the user has already clicked on the web page).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The above is a lie, it turns out.&lt;/p&gt;
&lt;p&gt;I got there because I was trying to make &lt;a href=&quot;http://jimkang.com/flame-buddy-sword-assistant/&quot;&gt;Flame Buddy Sword Assistant&lt;/a&gt; work on iOS.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(Flame Buddy Sword Assistant is a web version of a magic sword from a D&amp;amp;D game I‚Äôm running. In short, unlike most magic swords, Flame Buddy Sword Assistant isn‚Äôt there to serve the user; it‚Äôs there to deliver the user to another entity. It‚Äôs not unlike quite a few software and hardware products today. And so, while it does work as a sword (sometimes), it speaks a lot on the behalf of its providing entity.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;From a technical perspective, it‚Äôs like an old-school Flash soundboard, but it operates under with modern web audio requirements and restrictions.&lt;/p&gt;
&lt;p&gt;One of the recent restrictions is that a web page cannot play audio unless the user has first interacted with the page. Ostensibly, this is for the benefit of the user, however, this restriction does not apply to certain ‚Äúimportant‚Äù whitelisted sites. Google chooses these sites; there‚Äôs no open process for deciding who the autoplaying elite are.&lt;/p&gt;
&lt;p&gt;That one is not a problem for the app; I designed it so people would have to click to hear something from Flame Buddy Sword Assistant (the much more difficult alternative being having it recognize speech). And it worked fine on Firefox and Chrome. As you may recall, it did not work on Safari and Mobile Safari.&lt;/p&gt;
&lt;p&gt;I implemented audio playing by setting the &lt;code&gt;src&lt;/code&gt; of an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement&quot;&gt;HTMLAudioElement&lt;/a&gt;, then calling the &lt;code&gt;play&lt;/code&gt; method on the element. On Safari, when I call that method, the promise returned by that method fails with an error with the message &lt;code&gt;&amp;quot;Operation not supported&amp;quot;&lt;/code&gt; and nothing more.&lt;/p&gt;
&lt;p&gt;I searched the web for that and got into all of these articles and discussions about autoplay policy in Safari. It turns out that ‚Äòautoplay‚Äô in these contexts &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Media/Autoplay_guide&quot;&gt;includes all sorts of programmatic media playing&lt;/a&gt;, not just stuff that plays when the page loads. I thought that, perhaps, Safari had misclassified my program as acting without interaction.&lt;/p&gt;
&lt;p&gt;&lt;span id=&quot;the-mistake&quot;&gt;This is where I should have backed up and made sure this was indeed Safari‚Äôs issue but did not.&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;I saw that some people said that you could work around the perceived restriction by playing buffers in &lt;code&gt;AudioContext&lt;/code&gt;. I was all, aw yea I‚Äôm gonna solve this problem that a lot of people have in a neat NPM package!&lt;/p&gt;
&lt;p&gt;I started &lt;code&gt;play-audio-url&lt;/code&gt;. It would try the &lt;code&gt;HTMLAudioElement&lt;/code&gt; to play a url (via the &lt;code&gt;Audio&lt;/code&gt; API). If that failed, it would fall back to use &lt;code&gt;AudioContext&lt;/code&gt; to do everything that &lt;code&gt;HTMLAudioElement&lt;/code&gt; would do:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download the file at the given url&lt;/li&gt;
&lt;li&gt;Decode the file contents to an uncompressed audio buffer&lt;/li&gt;
&lt;li&gt;Play the audio buffer via an AudioContext and SourceNode.&lt;/li&gt;
&lt;li&gt;Provide means to stop playback&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It worked on Firefox, and then I tried it in Safari.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Nothing played.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Same error. &lt;code&gt;Operation not supported&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;I found web pages talking about what formats Safari can understand. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats#Browser_compatibility&quot;&gt;Here‚Äôs a table from Mozilla&lt;/a&gt; that says that Safari does not support ogg files. My audio file was an ogg file. &lt;strong&gt;DANT DANT DAH&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I transcoded it to mp3. When I tried to play it, Safari &lt;em&gt;still&lt;/em&gt; played static.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(It was late in the evening now, though I hadn‚Äôt realized it at the time. I‚Äôm no longer accustomed to staying up late, as I have a miserable time doing kid stuff on low sleep.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;After a bit of poking around, including some amusing console mucking like this &amp;mdash;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; (new Audio).canPlayType(&amp;#39;audio/ogg&amp;#39;)
&amp;quot;maybe&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;mdash; and trying out sample rate adjustments, I tried playing the file in a player outside of the browser. &lt;em&gt;The file actually contained all static.&lt;/em&gt; I had messed up the transcoding. After encoding it as an mp3 correctly, Safari played it fine via the HTMLAudioElement without needing all of that fallback code at all.&lt;/p&gt;
&lt;p&gt;I don‚Äôt think I literally slapped my forehead, but I should have.&lt;/p&gt;
&lt;p&gt;If I had looked into file formats &lt;a href=&quot;http://jimkang.com/articles/weasley-debugging/#the-mistake&quot;&gt;way back here&lt;/a&gt;, I would not have lost sight of the truth and simply converted my audio files to mp3 and solved the problem with no code.&lt;/p&gt;
&lt;p&gt;That sucked. Still, &lt;code&gt;play-audio-url&lt;/code&gt; is a convenient, if inessential, shorthand for the stuff you have to do with &lt;code&gt;HTMLAudioElement&lt;/code&gt;/&lt;code&gt;Audio&lt;/code&gt; if you want to download and play an audio file. Also, I was able to brush up on WebAudio. Did you know that &lt;code&gt;stop&lt;/code&gt; is no longer a method on AudioContext?&lt;/p&gt;
&lt;p&gt;(I‚Äôm also writing this post so that I feel like I‚Äôm wrenching more value out of the mistake.)&lt;/p&gt;
</description>
    </item>
    <item>
      <title>How to make a tl;dr control</title>
      <link>http://jimkang.com/weblog/articles/tldr-control/</link>
      <pubDate>Tue, 15 Jan 2019 19:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/tldr-control/</guid>
      <author></author>
      <description>&lt;p&gt;A while back, a colleague at work pointed out a nifty tl;dr slider on the &lt;a href=&quot;https://parametric.press/&quot;&gt;Parametric Press site&lt;/a&gt;. You can move it all the way to the left to get the gist of the article. The further you move it to the right, the more words (and details) you‚Äôll get.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I took a peek to see how it was built, and it appears to be tied into &lt;a href=&quot;https://github.com/idyll-lang/idyll&quot;&gt;Idyll&lt;/a&gt;, which renders things with React. Most of it is implemented in a React component named Conditional which sets the style tag on a div to &lt;code&gt;display: none&lt;/code&gt; if some condition &amp;mdash; probably specified in each tag &amp;mdash; isn‚Äôt met.&lt;/p&gt;
&lt;p&gt;Idyll looks neat, but what if you want to apply this to a simple web page that you don‚Äôt want to convert to it? What if, like me, you avoid React when possible?&lt;/p&gt;
&lt;p&gt;Fortunately, the concept is really simple, which is the best kind of clever concept. I thought for a moment about building some kind of module so everyone that uses modules could add such a slider, but the best way to enable people to get this into their web app is to just explain it. A module would have to bend over backward to anticipate the varying conditions it might be used in. Whereas a person understanding the concept can easily apply it.&lt;/p&gt;
&lt;p&gt;So, here it is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You put a slider on the page. (An input element with type &lt;code&gt;range&lt;/code&gt;.)&lt;/li&gt;
&lt;li&gt;You add JS code that listens to change events from the slider and uses the values from the slider to modify the classes on the &lt;code&gt;body&lt;/code&gt; element. For example, if the user moves the slider to 3, then it adds the class &lt;code&gt;show-3&lt;/code&gt; to the body. Here‚Äôs an implementation:

&lt;pre&gt;
  var slider = document.getElementById(‚Äòtldr-slider‚Äô);
  slider.addEventListener(‚Äòchange‚Äô, onTLDRChange);

  const maxLevel = +slider.max;

  function onTLDRChange() {
    updateTLDRClasses();
  }

  function updateTLDRClasses() {
    const level = Math.round(slider.value);
    for (var i = 0; i &amp;lt;= maxLevel; ++i) {
      let className = ‚Äúshow-‚Äú + i;
      if (i &amp;lt;= level) {
        document.body.classList.add(className);
      } else {
        document.body.classList.remove(className);
      }
    }
  }

  updateTLDRClasses();
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;You create a CSS class like &lt;code&gt;tldr&lt;/code&gt; that has the property &lt;code&gt;display: none&lt;/code&gt;. You put this class on every element that might possibly be hidden.&lt;/li&gt;

&lt;li&gt;Also, you create CSS rules for each level of detail you plan to have. Each one will set their element to &lt;code&gt;display: block&lt;/code&gt; (or &lt;code&gt;flex&lt;/code&gt; or what have you).  The conditions they‚Äôll look for is ‚Äúthe ‚Äòlevel‚Äô class is a child of the ‚Äòshow‚Äô class.‚Äù For example:
&lt;pre&gt;
.show-2 .lvl-2 {
  display: block;
}&lt;/pre&gt;

How the class is used:
&lt;pre&gt;
&amp;lt;div class=‚Äùtldr lvl-2‚Äù&amp;gt;Hey, this isn‚Äôt very important information! It will
be hidden if the slider has a value of less than 2!&amp;lt;/div&amp;gt;
&lt;/pre&gt;
&lt;/li&gt;&lt;/ol&gt;

&lt;p&gt;Now, when the user moves the slider to 2, &lt;code&gt;body&lt;/code&gt; will have  the classes &lt;code&gt;show-1&lt;/code&gt; and &lt;code&gt;show-2&lt;/code&gt;. An element that has the classes &lt;code&gt;tldr&lt;/code&gt; and &lt;code&gt;show-2&lt;/code&gt; will then satisfy the rule ‚Äúchild of show-2 that has the class lvl-2‚Äù, and display will be set to &lt;code&gt;block&lt;/code&gt; instead of the default &lt;code&gt;none&lt;/code&gt; (which comes from the &lt;code&gt;tldr&lt;/code&gt; class).&lt;/p&gt;
&lt;p&gt;When the user moves the slider down to 1, &lt;code&gt;body&lt;/code&gt; will have  the class &lt;code&gt;show-1&lt;/code&gt;, and the condition for the above rule will no longer be met, so &lt;code&gt;display&lt;/code&gt;will stay &lt;code&gt;none&lt;/code&gt;, and the element won‚Äôt show.&lt;/p&gt;
&lt;p&gt;So, knowing this, you‚Äôll have something you can apply in any framework (or lack thereof), you‚Äôll understand how it actually works, and it‚Äôll be (negligibly) more performant because only one DOM element‚Äôs properties are being modified.&lt;/p&gt;
&lt;p&gt;If you want a working example, I was looking at this so I could have a tl;dr control on my &lt;a href=&quot;http://jimkang.com/resume/&quot;&gt;resume site&lt;/a&gt;. You can use your browser‚Äôs dev tools to check it out or see the &lt;a href=&quot;http://github.com/jimkang/resume/&quot;&gt;source here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Platform-free bots</title>
      <link>http://jimkang.com/weblog/articles/platform-free-bots/</link>
      <pubDate>Sun, 14 Jan 2018 19:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/platform-free-bots/</guid>
      <author></author>
      <description>&lt;p&gt;I‚Äôve made &lt;a href=&quot;https://twitter.com/deathmtn/lists/robotic-council-of-doom/members&quot;&gt;several bots&lt;/a&gt; over the years. They‚Äôre mostly Twitter bots. Some of them are throwaway larks, and some of them only work in the moment. If Twitter becomes too harmful to humanity to gift with free content, I‚Äôm OK with letting those go. However, there are many bots whose fate I want to keep in my own hands, rather than Twitter‚Äôs. To that end, I built a &lt;a href=&quot;https://github.com/jimkang/static-web-archive-on-git&quot;&gt;static site updater&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;Motivation&lt;/h3&gt;

&lt;p&gt;For a long time, I‚Äôve been bothered by concerns that that are often discussed in the bot community, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What if the company behind Twitter (or any other platform, really) goes out of business?&lt;/li&gt;
&lt;li&gt;What if people just stop using Twitter?&lt;/li&gt;
&lt;li&gt;What if Twitter just decides to ban your bot and not explain it? Or &lt;a href=&quot;http://jimkang.com/weblog/articles/twitter-bot-hellban/&quot;&gt;hellban it&lt;/a&gt;?&lt;/li&gt;
&lt;li&gt;What if, in the future, &lt;a href=&quot;https://www.wired.com/story/after-fcc-vote-net-neutrality-fight-moves-to-courts-congress/&quot;&gt;internet access is hard to come by&lt;/a&gt;?&lt;/li&gt;
&lt;li&gt;What if you want to find old tweets by your bot? This is notoriously difficult for any Twitter user right now.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Twitter does have an archive request feature. You can request your account archives from right now by going to settings in the Twitter web app. However, this doesn‚Äôt give me much comfort because:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The archives do not include images or video, which are the main medium of some bots.&lt;/li&gt;
&lt;li&gt;Under duress, I‚Äôm not sure you‚Äôll be able to get the archives. When Vine shut down, I requested my archive. I got a notification that said the archiving process started, but it didn‚Äôt complete before the company and service shut down. I never got my archive.&lt;/li&gt;
&lt;li&gt;Twitter can stop offering the archives at any time.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I could have my bots crosspost to Tumblr and Mastodon, and some do. The issue is that, although the eggs are now in multiple baskets, the baskets still have many of the same problems: various sorts of potential inaccessiblity&lt;/p&gt;
&lt;p&gt;There is something that is likely to last longer than any social media platform, though: &lt;strong&gt;HTML &amp;mdash; the nearly three-decades-old Hypertext Markup Language.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;That&lt;/em&gt; is the format I need my bots‚Äô output to be in. I meant to  make them post to plain HTML for a while, but inertia is hard to fight.&lt;/p&gt;
&lt;p&gt;When Vine shut down, I had a Vine account that was very valuable to my extended family. So, I built a &lt;a href=&quot;https://github.com/jimkang/off-brand-vine&quot;&gt;service that handled simple video posting&lt;/a&gt; on my own server. Doing this gave me some code I could reuse to finally make my platform-free bot archives.&lt;/p&gt;
&lt;h3&gt;How to use it&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jimkang/static-web-archive-on-git&quot;&gt;static-web-archive-on-git&lt;/a&gt; is a Node module that will maintain a static weblog for you. From the README:&lt;/p&gt;
&lt;blockquote&gt;The idea here is that you have a GitHub repo that is the source for a lightweight static weblog, and you have a program that you want to update it programmatically.&lt;/blockquote&gt;

&lt;p&gt;If you have a bot written in Node, it can take whatever it posts to Twitter or Mastodon (some text and an image or a video) and also post that to its static web archive by calling a function.&lt;/p&gt;
&lt;p&gt;By doing so, it will build an archive of the bot‚Äôs content &amp;mdash; including media &amp;mdash; that is &lt;em&gt;extremely portable&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;It stores the html (the index pages and single-entry pages, classic weblog-style) in a GitHub repo. With this, you can do any of the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make the default branch of that repo &lt;code&gt;gh-pages&lt;/code&gt; and &lt;a href=&quot;https://pages.github.com&quot;&gt;automatically get a working web site&lt;/a&gt; at &lt;code&gt;your-username.github.io/repo-name&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Pull down the contents of that repo to some server you control that has a web server on it and serve it from there.&lt;/li&gt;
&lt;li&gt;Send the contents to the &lt;a href=&quot;https://archive.org&quot;&gt;Internet Archive&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Zip it all up and keep it wherever you think is safe and let future archaeologists find it. (If they have a thing that can read images and text, they‚Äôll figure it out if they understand your language. If they have a thing that reads HTML, then they‚Äôll be golden.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Whatever you do with your HTML, it won‚Äôt matter what Twitter does.&lt;/p&gt;
&lt;p&gt;I‚Äôve already integrated it into my bot &lt;a href=&quot;https://twitter.com/linkfinds&quot;&gt;linkfinds&lt;/a&gt;. Its archive is over at &lt;a href=&quot;http://jimkang.com/linkfound/&quot;&gt;jimkang.com/linkfound&lt;/a&gt;. I‚Äôm going to try to get all of my bots posting to archives. I‚Äôm sure I‚Äôll find bugs, but I‚Äôm fairly sure it‚Äôll eventually work for most of them.&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;archive-list&quot;&gt;&lt;/a&gt;
&lt;strong&gt;Update, 1/31/2018:&lt;/strong&gt; So, I‚Äôve set up archiving for most of my bots. It‚Äôs surprisingly nice to see them outside of the Twitter frame. The design is not complete for some of them, but they‚Äôre all functional. Check ‚Äòem out:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/linkfound/&quot;&gt;Link Finds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/ourmagickfuture/&quot;&gt;Our Magick Future&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/hail-ants-archive/&quot;&gt;Hail Ants Bot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/snakepeoplebot/&quot;&gt;Snake People Bot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/memberfacts/&quot;&gt;Member Facts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/spaceweirdnessbot/&quot;&gt;Space Weirdness Bot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/bot-in-the-street/&quot;&gt;Bot in the Street&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/improvebot/&quot;&gt;Improvebot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/demake-archive/&quot;&gt;Demake Bot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/pokemon-nypl-archive/&quot;&gt;Pok√©mon in the NYPL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/fuckingshakespeare/&quot;&gt;Fucking Shakespeare&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/businesswords-archive/&quot;&gt;Business Words&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/contingency-messages/&quot;&gt;Contingency Messages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/cleromancer/&quot;&gt;Cleromancer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/autocompletejok/&quot;&gt;Autocomplete Jokes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/monstersubtypes/&quot;&gt;Monster Subtypes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/autocompleterap-archive/&quot;&gt;Autocomplete Rap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/2020-candidates/&quot;&gt;2020 Candidate Bot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/godtributes-archive/&quot;&gt;GODTRIBUTES&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jimkang.com/hills-archive/&quot;&gt;Hills bot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Limitations&lt;/h3&gt;

&lt;p&gt;There are quite a few limitations to this approach, many of which you may have noticed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;This only works for bots whose meaning can be divorced from a particular medium.&lt;/strong&gt; Much of what people like about &lt;a href=&quot;https://twitter.com/godtributes&quot;&gt;godtributes&lt;/a&gt;, for example, is how it responds to them. The lion‚Äôs share of its tweets are responses, and they are mostly only meaningful to the person it‚Äôs replying to. That cannot be captured through this kind of archiving, as it‚Äôs only part of the story.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Archives cannot replicate the experience of bots dropping into your life by making tiny, occasional visits.&lt;/strong&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;The current implementation depends on another massive VC-funded company, GitHub.&lt;/strong&gt; Like all companies in this position, it may not survive that long or may become too detrimental to the world to touch. &lt;/p&gt;
&lt;p&gt;The shutting-down concern is mitigated by the fact that it‚Äôs pretty easy to regularly and incrementally download the contents posted to GitHub (that‚Äôs what git is made for).&lt;/p&gt;
&lt;p&gt;If I need to get off of the platform because I want nothing to do with it, it is actually easy to remove the GitHub parts from &lt;code&gt;static-web-archive-on-git&lt;/code&gt; and have it maintain a local archive of HTML files. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This, however, comes with the trade-off that, should it mess up in a destructive way, everything could be lost. You would not be able to get everything back after an accidental wipe by reverting to a previous commit as you could with a git-backed archive.&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;
&lt;li&gt;However, this problem itself could be mitigated by backing the whole thing up regularly.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;It is Node-specific.&lt;/strong&gt; At some point, I can plug this into a simple REST service so that any bot can use it, regardless of how it is built as long as it can make an http request. It‚Äôs not known if anyone really needs this yet, so I haven‚Äôt bothered.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Updating the archive is slow&lt;/strong&gt; because there are stalling &lt;code&gt;setTimeout&lt;/code&gt; calls everywhere.&lt;/p&gt;
&lt;p&gt;Internally, the GitHub API makes updates via commits. &lt;a href=&quot;https://developer.github.com/v3/repos/contents/#update-a-file&quot;&gt;The update REST method&lt;/a&gt; does not take a parent commit SHA because it figures out which one it should use on its own. Unfortunately, it also seems to respond to REST calls before it actually applies whatever commit it creates &lt;em&gt;across the board&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I‚Äôve observed the following race condition:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We send an http request for Update 1 via the &lt;a href=&quot;https://developer.github.com/v3/repos/contents/#update-a-file&quot;&gt;GitHub API update file method&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The Github API sends a response to Update 1 that indicates that it worked fine.&lt;/li&gt;
&lt;li&gt;Thinking that the branch is updated, we send a request for Update 2.&lt;/li&gt;
&lt;li&gt;The GitHub API responds to Update 2 with an error status code (409), citing that it‚Äôs a commit based on a commit that is &lt;strong&gt;not&lt;/strong&gt; the current tip of the branch.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I don‚Äôt know what‚Äôs happening internally, but my guess is that a commit created for an API call does not propagate to all API servers by the time a response is sent back for that API call. e.g. Something like this is going on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Commit 0 is the tip of the branch on all GitHub machines.&lt;/li&gt;
&lt;li&gt;Update 1 is received by Machine A, and Commit 1 is created, using Commit 0 as a parent.&lt;/li&gt;
&lt;li&gt;Machine B applies Commit 1; Commit 1 is the tip of the branch on Machines B, D, and some other GitHub machines now, but not on Machine C.&lt;/li&gt;
&lt;li&gt;A response for Update 1 is sent back by some machine.&lt;/li&gt;
&lt;li&gt;Update 2 happens to be received by Machine C, which does not have the latest yet, and Commit 2 is created, using Commit 0 as the parent.&lt;/li&gt;
&lt;li&gt;Machine D attempts to apply Commit 2. Here, Commit 1 is the tip of the branch, so it fails.&lt;/li&gt;
&lt;li&gt;A response for Update 2 is sent back with an error message like &lt;code&gt;&amp;quot;is at 1 but expected 0&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The above scenario is pure speculation, but the following is definitely true: &lt;strong&gt;Updates are not atomic.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The setTimeouts are an attempt to space out update calls in order to avoid these wrong-commit-parent clashes. They don‚Äôt always, but they do most of the time. I‚Äôve used &lt;a href=&quot;https://github.com/jimkang/off-brand-vine&quot;&gt;this code&lt;/a&gt; for about eight months as of 1/15/2018, and it‚Äôs mostly been fine, FWIW. Obviously, it‚Äôs not going to work out for extremely real-time-dependent archiving purposes, though.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;

&lt;p&gt;Well, that‚Äôs it. May you enjoy being platform-free via one method or another!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Weird, but worth it</title>
      <link>http://jimkang.com/weblog/articles/weird-but-worth-it/</link>
      <pubDate>Fri, 13 Oct 2017 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/weird-but-worth-it/</guid>
      <author></author>
      <description>&lt;style&gt;
li p {
  margin-bottom: 0.5em;
}

li {
  line-height: 1.3em;
  padding-left: 0;
}

ul {
  margin-top: 0.5em;
}

.caption {
  text-align: center;
  font-style: italic;
  margin-top: 0;
  margin-bottom: 1em;
}

&lt;/style&gt;

&lt;p&gt;I have a web page at which I was rendering 14,000 DOM elements. &lt;a href=&quot;http://jimkang.com/observatory/&quot;&gt;(It‚Äôs this work-in-progress visualizer for GitHub projects. And maybe someday other projects, too?)&lt;/a&gt; Things were getting choppy under that load, especially on the phone.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;observatory-screenshot.png&quot; alt=&quot;Screenshot of Observatory&quot; width=&quot;100%&quot;&gt;&lt;/img&gt;&lt;/p&gt;
&lt;div class=&quot;caption&quot;&gt;Above: A few of the 14,000 DOM nodes&lt;/div&gt;

&lt;p&gt;To mitigate the clunkiness, I tried:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Throttling the render calls. (Observatory re-renders each time it gets new chunks of data so as to not make users sit there for a long time with a blank page.)&lt;/li&gt;
&lt;li&gt;Resizing and repositioning the text labels to fit inside of their areas much less frequently. (In order to resize and reposition, Observatory had to make expensive calls to getBBox.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These things helped a little, but on iOS, I still had to wait seconds for a response when I would tap one of the cells. Sometimes, more than ten seconds. (When a cell is clicked, a detail overlay is supposed to come up, telling you more about the deed represented by the cell.)&lt;/p&gt;
&lt;p&gt;At this point, I considered a video-game-style scheme in which Observatory would only render things contained in a fixed-size viewport. It‚Äôd have to assess what data in the treemap (which I am building via d3-hierarchy) would be visible in that viewport, then render just that. Then, I‚Äôd have to implement some control scheme for moving the viewport.&lt;/p&gt;
&lt;p&gt;Guh.&lt;/p&gt;
&lt;p&gt;That was complex enough that I then decided it was time try rendering to canvas instead of SVG.
The reasons I am hesitant to use canvas for visualizations, despite it being faster and less memory-intensive than SVG are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SVG is far more easily debugged. Because SVG elements appear in the DOM, if something is going wrong, you can right-click on whatever looks wrong in the browser, then inspect that SVG element. You can even change its properties right on the spot. This lets you experiment live with potential fixes or, at the least, gets you more information. This has been invaluable to me while working on &lt;a href=&quot;http://jimkang.com/quadtreevis/&quot;&gt;An Interactive Explanation of Quadtrees&lt;/a&gt; and other complex renderings.&lt;/li&gt;
&lt;li&gt;In the past, I‚Äôve found raster graphics situations (Unity, Core Graphics) to be very finicky about rendering crisp lines.&lt;/li&gt;
&lt;li&gt;You can put event handlers on individual SVG elements. You can easily and reliably get notified about clicks or taps to a &amp;lt;path&amp;gt; or &amp;lt;rect&amp;gt; or even a &amp;lt;g&amp;gt;. By contrast, because the content of a &amp;lt;canvas&amp;gt; is basically just a picture, it‚Äôs all on you to figure out what‚Äôs being clicked.&lt;/li&gt;
&lt;li&gt;Accessibility: A treemap isn‚Äôt easily comprehendible to someone without sight, but at least it exists in the DOM and can be detected. A canvas, again, is more or less just an image.
Despite all that, converting to rendering to canvas didn‚Äôt go that badly! (Here‚Äôs most of the changes in code form, if you‚Äôre into that.) I had to do some odd things, though, which I‚Äôll explain below.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Step on a crack, break your mama‚Äôs back&lt;/h1&gt;

&lt;p&gt;When rendering 1px borders around the cells in my treemap, I had to position lines so that their centers fell on the middle of pixels (e.g. 1.5 instead 1.0) so that the line‚Äôs width fell entirely within one pixel instead of at the border of two.&lt;/p&gt;
&lt;h1&gt;Imperative, not declarative&lt;/h1&gt;

&lt;p&gt;&amp;lt;canvas&amp;gt; elements don‚Äôt accept width values in percentages, so I had to start with a fixed pixel width value, then adjust it in JavaScript while rendering.&lt;/p&gt;
&lt;h1&gt;Secret canvases&lt;/h1&gt;

&lt;p&gt;As mentioned above, you have to do a bunch of work to catch clicks to shapes you‚Äôve drawn in canvas. Fortunately, Yannick Assogba wrote a &lt;a href=&quot;https://bocoup.com/blog/2d-picking-in-canvas&quot;&gt;really good article&lt;/a&gt; about this technique in which you create a secret hidden &amp;lt;canvas&amp;gt; and draw the same shapes to it that you do to your ‚Äúdisplay‚Äù &amp;lt;canvas&amp;gt;. In the hidden one, you assign unique colors to each shape. (Assuming you don‚Äôt want to make your hidden canvas transparent, which costs extra, performance-wise, you can have as many shapes as there are colors, and there are 0xFFFFFF of them‚Äì16,777,215 colors.) You keep a map from those unique colors to the associated datum or shape. Then, when someone clicks on the hidden canvas, you find the color of the pixel that was clicked and can use the map to find out what datum or shape is associated with it!&lt;/p&gt;
&lt;p&gt;In Yannick‚Äôs example, he only renders the hidden canvas in the event handler for the main canvas click. That‚Äôs intense, and while it does save on renders, I was a concerned that it‚Äôd make the event handler slow. In retrospect, I could see the render time being imperceptible. But I went with rendering every time the main, visible canvas was rendered. This approach happens to perform fine on mobile and desktop, so I left it like that.&lt;/p&gt;
&lt;p&gt;The article puts the event handler on the main, visible canvas, then uses the click coordinates from that canvas to look up colors in the hidden canvas. The HTML is not specified, but I assume this means the hidden canvas is meant to be hidden by placing it off-screen. Having had some bad experiences with putting elements off-screen (left: -10000px) when doing some ‚Äúmenu that slides in from the left‚Äù stuff a few years ago, I decided to avoid that. I just stuck the hidden canvas on top of the main, visible canvas. Of course, to do that, I had to mess with position: absolute, but I lived.&lt;/p&gt;
&lt;p&gt;I had apprehensions about this technique because it is indeed a hack. (Also, it reminds me of the ancient HTML 2.0 &amp;lt;imagemap&amp;gt;.) But it works well, and I see another potential use for it: Easily making click targets diverge in size and shape from their visually rendered counterparts.&lt;/p&gt;
&lt;p&gt;&lt;h1&gt;Smudgy text&lt;/h2&gt;&lt;/p&gt;
&lt;p&gt;When I rendered text onto the canvas with fillText, I got some horrible, horrible smudgy text. Nothing sends the subliminal message this is crap like text with mealy blurriness or ragged aliasing. Googling led me to believe there is no reliable way to get crisp canvas text, but definitely let me know if you know how!&lt;/p&gt;
&lt;p&gt;What I ended up doing was bringing back an SVG layer just for text. I put it over my visible canvas layer and added text elements. I end up creating a few hundred of those, with transforms on them. It all seems to still perform snappily.&lt;/p&gt;
&lt;p&gt;I still use canvas when figuring out how to size the text and whether or not it should be rotated. (If the label for a region is taller than it is wide, it should be rotated so that it is written vertically.) I use the canvas context‚Äôs measureText method to determine how wide the label will be.&lt;/p&gt;
&lt;p&gt;Before, I had to use the SVGtext element‚Äôs getBBox method, which was incredibly slow. (Sorry, I don‚Äôt have the profile anymore, but if you use it in your code, Chrome warns you about it specifically in the console.) By contrast, measureText can be called many times on every render without any problem. In fact, it‚Äôs so fast that the next time I have to figure out what the size of an SVG text element will be at a given font and size, I might use a hidden canvas to do it, even if there is no other reason for the canvas.&lt;/p&gt;
&lt;p&gt;Also, SVG text is readable by screen readers, so this extra SVG layer may be worth having, even if you crisp canvas text was available.&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;So, my project now uses this uncomfortable-seeming Canvas/SVG Combination Platter. It‚Äôs strange, but it‚Äôs also snappy and consistent! I‚Äôm glad I tried it.&lt;/p&gt;
&lt;p&gt;P.S. &lt;a href=&quot;https://www.youtube.com/watch?v=s7eGq1VXupw&quot;&gt;This talk about canvas by Kai Chang&lt;/a&gt; &lt;a href=&quot;https://bl.ocks.org/syntagmatic/raw/c157cd20973d7f92e913fac28cfa8a56/#1&quot;&gt;(slides)&lt;/a&gt; from OpenVis Conf last year is really good.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Organizational failure at a garage</title>
      <link>http://jimkang.com/weblog/articles/garage-organizational-failure/</link>
      <pubDate>Sat, 25 Feb 2017 19:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/garage-organizational-failure/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;b&gt;Saturday, 11 AM&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;I talked to a friendly manager at a garage in the morning on Saturday. He explained a problem with my car via a demonstration, which was novel to me. It won me over and made me feel I could trust this garage. He said they could probably have the problem fixed by 6 PM that night, but if not certainly by Sunday. I agreed to the repair and left.&lt;/p&gt;
&lt;p&gt;That turned out to be a mistake.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;Saturday, 5:44 PM&lt;/h3&gt;

&lt;p&gt;I called them later that day on Saturday, at 5:44 PM. I talked to the friendly manager again, and he explained that they needed a part and would fix it first thing Sunday morning. I could pick up my car at noon on Sunday, he told me. I said that sounded good.&lt;/p&gt;
&lt;h3&gt;Sunday, 11:50 AM&lt;/h3&gt;

&lt;p&gt;On Sunday, I called at 11:50 AM. The person who answered said my car hadn‚Äôt been worked on. He said the mechanic would be in any minute, and that they‚Äôd let me know when they worked on it. I told him that the manager said it would be ready to pick up by 12. The person got agitated and rushed me off the call. (Also, he called me ‚Äúhoney‚Äù, which was odd.)&lt;/p&gt;
&lt;h3&gt;Sunday, 12:33 PM&lt;/h3&gt;

&lt;p&gt;After hearing nothing, I called back at 12:33 PM. The mechanic had still not arrived.&lt;/p&gt;
&lt;p&gt;I was disappointed, but since it was a non-critical repair, I decided I‚Äôd just skip the repair, take back the car, get groceries, and have the repair done somewhere else next weekend.&lt;/p&gt;
&lt;p&gt;I said OK, I‚Äôm going to just get the car. &lt;i&gt;Don‚Äôt&lt;/i&gt; do the repair even if the mechanic does come in.&lt;/p&gt;
&lt;p&gt;The person answering the phone was the same one I talked to last call. He said OK, but I couldn‚Äôt pick it up until the mechanic came in because the car was on a lift. I asked him to please call me when the mechanic does come in.&lt;/p&gt;
&lt;h3&gt;Sunday, 2:55 PM&lt;/h3&gt;

&lt;p&gt;No word. I called again at 2:55 PM. A different person answers.&lt;/p&gt;
&lt;p&gt;I told him that I wanted to pick up my car and asked them to &lt;b&gt;not&lt;/b&gt; do the repairs. He replied that the repairs have already been done.&lt;/p&gt;
&lt;p&gt;I found it disturbing that this garage ignored my request, but I was glad that at least I could get the car back. I walked to the garage.&lt;/p&gt;
&lt;p&gt;When I got to the garage, there was a single employee in the office. He said that he tried to call me and tell me not to come down, but I didn‚Äôt answer. I may have missed the call.&lt;/p&gt;
&lt;p&gt;He explained that my car was not there at the garage.&lt;/p&gt;
&lt;p&gt;Where is it, then? I asked. I would like it back.&lt;/p&gt;
&lt;p&gt;He replied that:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The mechanic should have been in but he didn‚Äôt come in.&lt;/li&gt;
&lt;li&gt;The garage is part of a ‚Äúbig business‚Äù that has many garages, and it could be at one of those garages; he doesn‚Äôt know‚Äîhe‚Äôs just the gas attendant.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Neither of those responses explained where my car is. Also, no one mentioned before that my car might be shipped to another location.&lt;/p&gt;
&lt;p&gt;I asked if I could talk to his manager. He didn‚Äôt like this, but he picked up the phone, called, and asked about my car. After he hung up, he told me his manager didn‚Äôt know. He said I should just call back tomorrow.&lt;/p&gt;
&lt;p&gt;I asked if I could have the manager‚Äôs number and talk to him directly. He replied no, his manager was busy and with his family. Then, I asked if I could talk to the mechanic he mentioned. He also said no to that.&lt;/p&gt;
&lt;p&gt;He went out to service some gas customers that had pulled in.&lt;/p&gt;
&lt;p&gt;There was another customer in the office with me. She explained that she was in the same situation. She let them do some extremely expensive repairs and was originally told they‚Äôd be done Saturday. The garage still did not have her car ready and could not even tell her where her car was. She needed to pick it up now so she could drive to visit her husband in a nursing home that day.&lt;/p&gt;
&lt;p&gt;I offered to contact her if I got a hold of the manager or the mechanic or found where my car was. She declined, wished me luck, and went home.&lt;/p&gt;
&lt;p&gt;When the gas attendant (the sole available garage employee) came back in, I asked again: Is there a manager I can talk to or another way I could get my car back now? Again, he said no.&lt;/p&gt;
&lt;p&gt;I walked out to go around the block to see if it was parked on the street.&lt;/p&gt;
&lt;p&gt;It was not.&lt;/p&gt;
&lt;h3&gt;Sunday, 3:25 PM&lt;/h3&gt;

&lt;p&gt;I could wait to see if things worked out. Now, however, I doubted everything about this business. I felt that if I didn‚Äôt deal with it today, there was a chance I‚Äôd have to deal with the same issue tomorrow, except I‚Äôd have to do it under the constraints of a weekday.&lt;/p&gt;
&lt;p&gt;Also, I now found it minutely possible that my car was lost, stolen, damaged, or in another condition the garage wanted to hide. I called the Cambridge Police non-emergency number to see if they had any advice on the situation.&lt;/p&gt;
&lt;p&gt;I explained, and the police officer on the phone asked where I was and said he‚Äôd send an officer out. I was a little surprised and said I didn‚Äôt want to cause trouble ‚Äî I just wanted to get my car. The police officer said he understood and that they‚Äôd get it straightened out. He reacted so quickly that I think there is a chance that this a common issue.&lt;/p&gt;
&lt;p&gt;While I was waiting, I wrung my hands about whether I was being unreasonable or not. On one hand, it‚Äôs not the fault of the person at the garage that no one told him where my car is. I have seen this cruel firewall of accessibility at many companies, which puts low-ranking employees and upset customers on one side and the actual creators of the problems safely isolated on the other. &lt;/p&gt;
&lt;p&gt;On the other, I have the right to know where my car is and to get it back at the time they communicated that I could. I had already tried asking directly for this access.&lt;/p&gt;
&lt;p&gt;When the police officer arrived, I explained again that I didn‚Äôt want any hardships for anyone ‚Äî I just needed my car back. We went into the office, and he basically asked the same things I did, except more directly.&lt;/p&gt;
&lt;p&gt;This time, the garage employee called his manager and left a message asking about my car and noting that the police were here. He also called that manager‚Äôs manager, who spoke to us.&lt;/p&gt;
&lt;p&gt;The ‚Äúbig boss‚Äù said that he didn‚Äôt know where my car was but that he‚Äôd find out and get us a call back.&lt;/p&gt;
&lt;p&gt;The police officer left and said to call them back if they didn‚Äôt produce the car. I thanked him, then sat in the office for an extremely awkward wait.&lt;/p&gt;
&lt;p&gt;The manager I had originally talked to on Saturday called. Over the phone, he explained that the car actually was still in the garage on a lift. &lt;i&gt;It had never actually left&lt;/i&gt;. &lt;/p&gt;
&lt;p&gt;The employee in the office then actually blamed &lt;b&gt;me&lt;/b&gt; for not knowing this, even though &lt;em&gt;he&lt;/em&gt; was the one who told me my car was not here. I had taken him at his word.&lt;/p&gt;
&lt;p&gt;The manager apologized on this call and also offered the defenses that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This normally doesn‚Äôt happen.&lt;/li&gt;
&lt;li&gt;The mechanic is the root of these problems.&lt;/li&gt;
&lt;li&gt;The employee in the office right now is just a gas attendant and doesn‚Äôt actually know how things work.&lt;/li&gt;
&lt;li&gt;Mechanics don‚Äôt normally work on Sundays.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;During the discussion, I tried to make the points that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It‚Äôs OK to be behind on work, but it is wrong and possibly illegal to deny customers access to their car after the point at which the business says it will be available.&lt;/li&gt;
&lt;li&gt;It is wrong to not be able to tell customers where there car is.&lt;/li&gt;
&lt;li&gt;It is terrible to give customers the impression that their car has been moved to another site without their consent.&lt;/li&gt;
&lt;li&gt;If the only person working at the office is a gas attendant who is not able or intended to know where the customers‚Äô cars are, it is still the business‚Äôs responsibility to be able to tell customers where their cars are and when they can get them. The business should get someone else to answer those calls.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(I didn‚Äôt say this on the call, but if a business can‚Äôt provide a way to inform customers on the whereabouts of their cars, then it should tell customers up front before they submit their cars that once they give up the car, they may not be told about its whereabouts or condition for an unpredictable number of days. Be honest about the level of service you can provide.)&lt;/p&gt;
&lt;p&gt;I have no idea how much of what I said was accepted. The manager said that they would complete the work on my car sometime on Monday morning and that he would give me a ‚Äúsmall discount‚Äù on the work.&lt;/p&gt;
&lt;p&gt;I pointed out that I already called around 12:30 PM that day to tell them not to do the work. Apparently, that call was either unprocessed or completely ignored. I asked to not be charged for that work and for them to just put whatever they took out back in so I could retake possession. He reluctantly agreed to that.&lt;/p&gt;
&lt;h3&gt;Tomorrow&lt;/h3&gt;

&lt;p&gt;Unfortunately, I‚Äôm not sure how much that agreement means. I will find out tomorrow.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>How a bot (may) get caught in a (possible) Twitter hellban</title>
      <link>http://jimkang.com/weblog/articles/twitter-bot-hellban/</link>
      <pubDate>Tue, 21 Jun 2016 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/twitter-bot-hellban/</guid>
      <author></author>
      <description>&lt;p&gt;People were reporting to me that my bot, &lt;a href=&quot;https://twitter.com/linkfinds&quot;&gt;@linkfinds&lt;/a&gt;, was replying to them, and they were getting notifications, but when they went to check their mentions (the ‚ÄúNotifications‚Äù tab in web Twitter), the reply was not there. They could see the reply if they scrolled down in their timelines, however.&lt;/p&gt;
&lt;p&gt;For them, it was a frustrating experience. They‚Äôd get a notification, then go to Notifications and couldn‚Äôt find anything.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I read Twitter on the computer via Tweetbot for Mac. I did a few tests from there, and things seemed fine ‚Äì replies to me showed up in my Tweetbot ‚ÄúMentions‚Äù tab. I‚Äôve been busy, so sadly, it slipped out of my focus.&lt;/p&gt;
&lt;p&gt;Another wave of people brought it up, though, and I did check it out again, and I did see it happen on web Twitter and the iOS Tweetbot. Dant-dant-dah!&lt;/p&gt;
&lt;p&gt;I did various experiments with setting reply-related in the bot‚Äôs reply &lt;a href=&quot;https://dev.twitter.com/rest/reference/post/statuses/update&quot;&gt;posts&lt;/a&gt;. Previously, it had just been setting the &lt;code&gt;in_reply_to_status_id_str&lt;/code&gt; field. I tried setting all of these in various combinations:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;in_reply_to_status_id
in_reply_to_status_id_str
in_reply_to_user_id
in_reply_to_user_id_str
in_reply_to_screen_name
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;None of this mattered; replies still did not show up in the mentions of those they were directed at. That makes sense since &lt;a href=&quot;https://twitter.com/godtributes&quot;&gt;@godtributes&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/mountainkilwala&quot;&gt;@mountainkilwala&lt;/a&gt;, et al only set &lt;code&gt;in_reply_to_status_id_str&lt;/code&gt; or &lt;code&gt;in_reply_to_status_id&lt;/code&gt;, and their replies all show up in their addressees‚Äô Notifications/Mentions.&lt;/p&gt;
&lt;p&gt;Next, I tried running the bot with another account‚Äôs credentials. This made a difference. Replies from the bot via that account did show up in mentions. &lt;strong&gt;The problem was with the account itself.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I do not know for certain why that account‚Äôs replies got filtered from the Twitter Notifications tab. However, I speculate that it has to do with it being tagged as a bot early on. When I created the account, I immediately did the OAuth dance to get a token, then used that token to post with the bot right away.&lt;/p&gt;
&lt;p&gt;I then got an error message from the Twitter API explaining that the account had been disabled for ‚Äúautomated behavior‚Äù. At the Twitter web site, I was told I could reenable the account by adding a phone number and verifying it, so I did that.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Maybe&lt;/em&gt; at this point, the account was placed in some Twitter user segment whose replies are all filtered out of the Notifications tabs. Perhaps this is a sort of hellbanning that prevents spam bots from noticing that they are no longer reaching anyone.&lt;/p&gt;
&lt;p&gt;Here‚Äôs some things that I &lt;em&gt;speculate&lt;/em&gt; could have lead to the account disabling and possible user segment tagging:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Posting via API before posting manually via web Twitter.&lt;/li&gt;
&lt;li&gt;Posting before setting up a profile with a userpic.&lt;/li&gt;
&lt;li&gt;Skipping entering a phone number during sign up.&lt;/li&gt;
&lt;li&gt;Adding an app (to get the OAuth token) before setting up a profile with a userpic.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Again, I can‚Äôt prove that any of these things matter or that the original @linkfinds account was put in a special user segment are a result. All I can say to botmakers ‚Äì or all Twitter users, really ‚Äì is that &lt;em&gt;if your account gets disabled, after you reenable it, check that everything still works before proceeding&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;As for the Link Finding Things bot, I had no recourse but to move it to another account. So, I changed the original account‚Äôs username to &lt;a href=&quot;https://twitter.com/linkfinds_old&quot;&gt;@linkfinds_old&lt;/a&gt;, then created a new account with the username &lt;a href=&quot;https://twitter.com/linkfinds&quot;&gt;@linkfinds&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I tried to let people know that if they‚Äôre following @linkfinds_old, they need to follow &lt;a href=&quot;https://twitter.com/linkfinds&quot;&gt;@linkfinds&lt;/a&gt; instead. I know tons of people will miss that tweet, but it‚Äôs all that can be done.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;link-finds-mysteries.png&quot; alt=&quot;DOO DOO DOO DOO!&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;twitter-bot-hellban-update&quot;&gt;&lt;/a&gt;
&lt;strong&gt;Update, 6/23/2016:&lt;/strong&gt; Well, after working fine for a while, the new account somehow got flagged such that its notifications don‚Äôt show up, either.  ¬Ø\_(„ÉÑ)_/¬Ø I‚Äôm not going to spend any more time on this.&lt;/p&gt;
&lt;p&gt;Twitter is a great platform for this kind of entity, yet at the same time, it‚Äôs not really at all transparent to developers about things like this. I really wish there was another venue where something like Link Finding Things could live. Well, it does &lt;a href=&quot;http://linkfinds.tumblr.com/&quot;&gt;live on Tumblr&lt;/a&gt;, too, but can‚Äôt really interact with followers the same way. From a certain perspective, I‚Äôm lucky it wasn‚Äôt worse. Other bot makers have had their keys revoked without explanation.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Freezable children</title>
      <link>http://jimkang.com/weblog/articles/freezable-children/</link>
      <pubDate>Fri, 18 Mar 2016 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/freezable-children/</guid>
      <author></author>
      <description>&lt;p&gt;I‚Äôm not much of writer of the fiction kind, but if I were, I‚Äôd take a crack at this premise:&lt;/p&gt;
&lt;blockquote&gt;&lt;b&gt;In the future, humans have the ability and right to put their children into flawless suspended animation.&lt;/b&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;They can do this until their children accrete eighteen total years of ‚Äúanimated‚Äù age.&lt;/p&gt;
&lt;p&gt;So, after a tiring day of childcare, parents freeze their kid and take the next day easy. They can then spend the next couple of days after that working on  projects. And maybe then they can bear down on their jobs, if that‚Äôs what they like to do.&lt;/p&gt;
&lt;p&gt;All that time, they can chew over a puzzling day with the kid and come to a considered course of action. When they‚Äôre ready, they restore the kid and spend a day or with them, 100% engaged and untired!&lt;/p&gt;
&lt;p&gt;As a result, some parents reach the age of 90 by the time their child is 18 in animated years. Parents more commonly die before their kids become adults. Groups of parents form tribes around whatever limit on suspension they‚Äôve set for themselves. Economic and power disparities risie from the uneven distribution of the privilege of suspension. Paranoia grows about hidden physiological effects of suspension when, in truth, it &lt;i&gt;actually is perfect&lt;/i&gt;.&lt;/p&gt;
&lt;p&gt;Then, there are the effects of adults suspending themselves simply because they don‚Äôt like their lives and hope that a few rolls of the dice will change things for the better.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;frostillicus.jpg&quot; alt=&quot;Behold: Frostillicus!&quot; /&gt;&lt;/p&gt;
&lt;p&gt;(Image courtesy of &lt;a href=&quot;https://frinkiac.com/caption/S09E17/238270&quot;&gt;Frinkiac&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Writers, feel free to have at it!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Simple inertial scrolling</title>
      <link>http://jimkang.com/weblog/articles/simple-inertial-scrolling-with-d3/</link>
      <pubDate>Wed, 01 Apr 2015 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/simple-inertial-scrolling-with-d3/</guid>
      <author></author>
      <description>&lt;p&gt;Here‚Äôs an example of inertial scrolling without a lot of elaborate plugin business going all over the place.&lt;/p&gt;
&lt;p&gt;The scroll position on web pages can be controlled by simply setting &lt;code&gt;document.body.scrollTop&lt;/code&gt;. Other than that there‚Äôs only a couple of things you need for inertial scrolling:&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A function that tells you how far to move the scroll position based on the time. We want one that gives the impression of inertia, so it‚Äôd dictate relatively slow movement at first, then ramp up, then slow down. &lt;code&gt;d3.ease&lt;/code&gt; provides a cubic function like the &lt;a href=&quot;http://easings.net/&quot;&gt;easeInOutCubic here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A timer that updates at intervals so that you can call the easing function to figure out where the scroll position should be and update the scroll position.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That‚Äôs what the example does. If you want to keep your code as small as possible, you can use &lt;a href=&quot;https://github.com/mbostock/smash/wiki&quot;&gt;D3 Smash&lt;/a&gt; to make yourself a little build of D3 that includes only the transition module, which is where &lt;code&gt;d3.timer&lt;/code&gt; and &lt;code&gt;d3.ease&lt;/code&gt; live.&lt;/p&gt;
&lt;p&gt;If you want to keep it really small, you can just grab a cubic ease-in-ease-out function from somewhere and use plain JavaScript‚Äôs &lt;code&gt;setInterval&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can try it out down here:&lt;/p&gt;
&lt;style&gt;

body {
  display: flex;
  flex-direction: column;
  align-items: center;
  font-size: 24px;
}

#container {
  display: flex;
  flex-direction: column;
  max-width: 20em;
  align-contents: center;
}

.item {
  text-align: center;
  padding: 1em;
}

.button {
  background-color: rgb(234, 106, 68);
  text-align: center;
  padding: 0.5em;
  border-radius: 0.5em;
  box-shadow: hsla(240, 30%, 30%, 0.15) 2px 2px;
  color: #eee;
  margin: 0.2em;
  cursor: pointer;
}

&lt;/style&gt;

&lt;body&gt;


&lt;script src=&quot;http://d3js.org/d3.v3.min.js&quot;&gt;&lt;/script&gt;

&lt;div id=&quot;container&quot;&gt;
  &lt;div id=&quot;top-element&quot; class=&quot;scroll-to-middle button&quot;&gt;Scroll to a middle element&lt;/div&gt;
  &lt;div class=&quot;scroll-to-bottom button&quot;&gt;Scroll to the bottom element&lt;/div&gt;

  &lt;div class=&quot;item&quot;&gt;Hooligan&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Muscleman&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Tough Guy&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Bullyboy&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Tearaway&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Plug-Ugly&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Chav&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Muscle&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Skinhead&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Skinhead (10th level)&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Yob&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Yob of the Body&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Yob of Feelings&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Yob of the Mind&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Yob of the Mind (15th level)&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Yob of the Mind (16th level)&lt;/div&gt;

  &lt;hr&gt;&lt;/hr&gt;

  &lt;div class=&quot;item&quot;&gt;Technologist&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Hacker&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Cyberpunk&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Applied Scientist&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Cyber-Terrorist&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Engineer&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Computer User&lt;/div&gt;

  &lt;div class=&quot;scroll-to-top button&quot;&gt;Scroll to the top element&lt;/div&gt;
  &lt;div class=&quot;item&quot; id=&quot;middle-element&quot;&gt;Middle Element&lt;/div&gt;
  &lt;div class=&quot;scroll-to-bottom button&quot;&gt;Scroll to the bottom element&lt;/div&gt;

  &lt;div class=&quot;item&quot;&gt;Cracker&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Programmer&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Programmer (10th level)&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Chief Programmer&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Master Programmer&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Grandmaster Programmer&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Grandmaster Programmer (14th level)&lt;/div&gt;

  &lt;hr&gt;&lt;/hr&gt;

  &lt;div class=&quot;item&quot;&gt;Bun&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Bunny&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Sciurine&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Con&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Rodent&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Rodent (6th level)&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Rodent (7th level)&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Rodent (8th level)&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Rodent (9th level)&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Squirrel&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Squirrel (11th level)&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Squirrel (12th level)&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Expert Squirrel&lt;/div&gt;
  &lt;div class=&quot;item&quot;&gt;Prime Squirrel&lt;/div&gt;

  &lt;div class=&quot;scroll-to-middle button&quot;&gt;Scroll to a middle element&lt;/div&gt;
  &lt;div id=&quot;bottom-element&quot; class=&quot;scroll-to-top button&quot;&gt;Scroll to the top element&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;
&lt;script&gt;

var easingFn = d3.ease('cubic');

function scrollTo(toTop, time) {
  var fromTop = document.body.scrollTop;
  var scrollDistance = toTop - fromTop;
  var scrolledTop = 0;

  d3.timer(updateScrollTop);

  function updateScrollTop(elapsed) {
    var portion = easingFn(elapsed * 1.0 /time);
    var scrollChange = scrollDistance * portion;

    document.body.scrollTop = fromTop + scrollChange;

    // Stop the timer by returning true if we've scrolled as far as requested.
    if (scrollDistance &lt; 0 &amp;&amp; document.body.scrollTop &lt;= toTop) {
      return true;
    }
    if (scrollDistance &gt;= 0 &amp;&amp; document.body.scrollTop &gt;= toTop) {
      return true;
    }
    if (elapsed &gt; time) {
      // This is as far as we're going to get.
      return true;
    }
  }
}

function scrollToElement(el, time) {
  scrollTo(el.offsetTop, time);
}

d3.selectAll('.scroll-to-middle').on('click', scrollToMiddle);
d3.selectAll('.scroll-to-top').on('click', scrollToTop);
d3.selectAll('.scroll-to-bottom').on('click', scrollToBottom);

function scrollToMiddle() {
  scrollToElement(d3.select('#middle-element').node(), 1500);
}


function scrollToTop() {
  scrollToElement(d3.select('#top-element').node(), 1500);
}


function scrollToBottom() {
  scrollToElement(d3.select('#bottom-element').node(), 1500);
}

&lt;/script&gt;
</description>
    </item>
    <item>
      <title>2014, Aspect B</title>
      <link>http://jimkang.com/weblog/articles/2014-aspect-b/</link>
      <pubDate>Sat, 03 Jan 2015 19:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/2014-aspect-b/</guid>
      <author></author>
      <description>&lt;style&gt;
li p {
  margin-bottom: 0.5em;
}

li {
  line-height: 1.3em;
  padding-left: 0;
}

ul {
  margin-top: 0.5em;
}

ul li ul li {
  font-size: smaller
}

.aside {
  border: 1px gray dotted;
  font-size: smaller;
  padding: 1em;
  color: #777;
}

&lt;/style&gt;

&lt;p&gt;While the year‚Äôs activities were &lt;a href=&quot;http://jimkang.com/articles/2014-aspect-a/&quot;&gt;dominated&lt;/a&gt; by Life Events, I did get some projects done. More than I did in 2013, I think. When I was looking at &lt;a href=&quot;https://gist.github.com/dariusk/aa4fc2da6f47eaed63db&quot;&gt;Darius‚Äôs list&lt;/a&gt;, I realized I couldn‚Äôt remember what I had done beyond the last three months. So, taking stock is a good idea.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Projects that were released in 2014. If a project has subprojects built to support it, they are listed under it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://soundcloud.com/isilence/recovery&quot;&gt;Recovery&lt;/a&gt;. Writing this brought to my attention that this was the only song I wrote in 2014. I usually do two or three a year, except years in which I do albums. Maybe I‚Äôll go for an album this year?&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/probable&quot;&gt;probable&lt;/a&gt;. A &lt;a href=&quot;http://nodejs.org/&quot;&gt;Node&lt;/a&gt; module that provides basic randomization utilities, as well as functions for making D&amp;amp;D-style random tables. I‚Äôve used this in at least four projects.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://nonstopscrollshop.com/&quot;&gt;Non-Stop Scroll Shop&lt;/a&gt;. It‚Äôs your one-stop non-stop scroll shop! Products forever!&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://jimkang.com/reactivecell/example/liquid.html&quot;&gt;A browser-based cellular automaton&lt;/a&gt;. I had big, yet vague plans for building off of this, but I just kinda drifted away into Twitter bots. I will come back, though.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/reactivecell&quot;&gt;reactivecell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/cellseriesviewer&quot;&gt;cellseriesviewer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/roguemap-parse-stream&quot;&gt;roguemap-parse-stream&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/cellgridrenderer&quot;&gt;cellgridrenderer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/cellmap&quot;&gt;cellmap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;aside&quot;&gt;You may notice that a lot of modules go into most of my projects. This is because I‚Äôve drifted into practicing a &lt;a href=&quot;http://substack.net/how_I_write_modules&quot;&gt;small module philosophy&lt;/a&gt;, and it has worked out really well for my projects. If you have to start and stop projects a lot, as I do, it really helps to be able to build in small, tangible units, rather than huge all-or-nothing colossuses. Also, this is the lowest-friction reusability situation I‚Äôve ever been in.&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://jimkang.com/quadtreevis&quot;&gt;An interactive explanation of quadtrees&lt;/a&gt;. When I was building my cellular automaton, I wanted to try storing my cells in quadtrees to save space. It was then that I realized I wasn‚Äôt that clear on how quadtrees work, so I built this explanation.&lt;/p&gt;
&lt;p&gt;It was pretty well-received. Non-programmer-, non-mathematics-types understood quadtrees by trying it. The power of moving shapes!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/quadtreevis&quot;&gt;quadtreevis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/quadtreetree&quot;&gt;quadtreetree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/quadtreemap&quot;&gt;quadtreemap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/one-at&quot;&gt;one-at&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://smidgeo.com/&quot;&gt;Smidgeo.com&lt;/a&gt;. Finally our cat‚Äôs corporation has a base on the web! GET! I still enjoy that CSS animation.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/scrollwatcher&quot;&gt;scrollwatcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/gravitybox&quot;&gt;gravitybox&lt;/a&gt; - This powers the very busy &lt;a href=&quot;http://smidgeo.com/plan/&quot;&gt;Smidgital Digital Plan&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://twitter.com/godtributes&quot;&gt;@godtributes&lt;/a&gt;. This is a merciless generalization of the ‚ÄúBLOOD FOR THE BLOOD GOD!‚Äù meme. I wasn‚Äôt really into it until my friend &lt;a href=&quot;http://nynex.hydrogenproject.com/&quot;&gt;Matt&lt;/a&gt; said ‚ÄúGROWTH FOR THE GROWTH GOD!‚Äù in reference to House Republicans. Then, it clicked. In turn, this bot has clicked with far more people than I had expected. I think it might my most popular project.&lt;/p&gt;
&lt;p&gt;Through @godtributes, I learned quite a lot about pluralization inconsistencies in the English language, Twitter REST API rate limits, and just how easy it is for a bot to unintentionally say horrific things.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/iscool&quot;&gt;iscool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/canonicalizer&quot;&gt;canonicalizer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/chronicler&quot;&gt;chronicler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/emojisource&quot;&gt;emojisource&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/nounfinder&quot;&gt;nounfinder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/wordnok&quot;&gt;wordnok&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Phoneme-based Node modules: &lt;a href=&quot;https://github.com/jimkang/homophonizer&quot;&gt;homophonizer&lt;/a&gt;, &lt;a href=&quot;https://github.com/jimkang/phonemenon&quot;&gt;phonemenon&lt;/a&gt;. Some of my future projects hinge on knowing what sounds like what what. So, I‚Äôve done a lot of playing around with phonemes. Like the cellular automata stuff, I need to harvest the fruits of these projects in 2015.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Translation bots: &lt;a href=&quot;https://twitter.com/a_chance_bot&quot;&gt;@a_chance_bot&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/translatedbible&quot;&gt;@translatedbible&lt;/a&gt;, and &lt;a href=&quot;https://twitter.com/new_aeneid&quot;&gt;@new_aeneid&lt;/a&gt;. These are bots (working off of the &lt;a href=&quot;https://github.com/jimkang/lossyfortunes&quot;&gt;same app&lt;/a&gt;) that take some source quotation, then translate it to several non-English languages and back to English. The results have been largely disappointing. I am amused by about one post from each of these bots a day.&lt;/p&gt;
&lt;p&gt;I started this project after watching a &lt;a href=&quot;https://www.youtube.com/watch?v=-4Yp3j_jk8Q&quot;&gt;Leslie Lamport video&lt;/a&gt; and then wrote a &lt;a href=&quot;https://github.com/jimkang/lossyfortunes#specification&quot;&gt;rigorous specification&lt;/a&gt;, which I‚Äôve never done before. That took a while. I also scratched bikeshedding itch by making my own &lt;a href=&quot;https://github.com/jimkang/wardboss&quot;&gt;dependency injector&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In a sense, I made the classic mistake of investing too much engineering effort without first proving that doing so is worthwhile. However, I can also write this off as a chance to scratch some itches. On the whole, I still think I paid too much to do that, though.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/conform-async&quot;&gt;conform-async&lt;/a&gt;. There‚Äôs not much to this module, but I end up using it a lot to keep peace between async-expecting code and sync code.&lt;/li&gt;
&lt;li&gt;Rap bots: &lt;a href=&quot;https://twitter.com/rapgamemetaphor&quot;&gt;@rapgamemetaphor&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/autocompleterap&quot;&gt;@autocompleterap&lt;/a&gt;. These bots amuse me on the regular. I have some further plans for them.&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jimkang/autocompl&quot;&gt;autocompl&lt;/a&gt; - A module that gives you Google‚Äôs autocomplete suggestions for given strings.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://lonewolfandparenting.tumblr.com/&quot;&gt;Lone Wolf and Parenting&lt;/a&gt;. I‚Äôve been rereading Lone Wolf and Cub, a great but flawed comic from the ‚Äò70s. This time, the parent stuff jumps out at me a little more, and I‚Äôve been highlighting amusing stuff on this Tumblr. It‚Äôs nice having a non-technology-driven project.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Projects that didn‚Äôt make it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Massachusetts Childcare Search. While we were searching for daycare, I wanted a site that served the EEC data in a less painful way than the EEC web site. So, I &lt;a href=&quot;http://masschildcaredata.github.io/&quot;&gt;scraped the site for data&lt;/a&gt; and was planning to build an app that would use that data. Never got beyond the scraping.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dariusk/NaNoGenMo-2014&quot;&gt;NaNoGenMo&lt;/a&gt;. I &lt;a href=&quot;https://github.com/jimkang/novelrrbot&quot;&gt;started building an engine&lt;/a&gt; for generating a novel, but I got stuck on trying define what an ‚Äúevent‚Äù in a novel is and how it could be represented simply. Might keep at this one.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I feel good about 2014 (the personal stuff, not the world events). As I do every year, in 2015, I want to be more careful about what I start and clearer on what I expect to get out of each project. And I want to do more with music and visualization again. And maybe write a game, too?&lt;/p&gt;
&lt;p&gt;There‚Äôs some utility apps I want to write, but that‚Äôs at odds with the fact that generative projects are always far more satisfying than ones that just do what you tell them to do. So, yeah, I got stuff to work out for 2015.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>2014, Aspect A</title>
      <link>http://jimkang.com/weblog/articles/2014-aspect-a/</link>
      <pubDate>Thu, 01 Jan 2015 19:00:00 -0500</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/2014-aspect-a/</guid>
      <author></author>
      <description>&lt;style&gt;
li p {
  margin-bottom: 0.5em;
}

li {
  line-height: 1.3em;
  padding-left: 0;
}

ul {
  margin-top: 0.5em;
}
&lt;/style&gt;


&lt;p&gt;This was very much a Life Year, one packed with Life Events. There was one root Life Event that triggered a million Life Subevents.&lt;/p&gt;
&lt;p&gt;Katt and I had this guy:
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;section class=&quot;center-img-zone&quot;&gt;

&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/gp/ignignokt/Cvdies&quot;&gt;&lt;img src=&quot;https://farm8.staticflickr.com/7524/16083616772_db60f440aa_z.jpg&quot; width=&quot;480&quot; height=&quot;640&quot; alt=&quot;Anderson!&quot;&gt;&lt;/a&gt;
&lt;/section&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;His name is Anderson. He‚Äôs a great guy. On his behalf, we:
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Found a deleaded apartment.&lt;/li&gt;
&lt;li&gt;Moved.&lt;/li&gt;
&lt;li&gt;Called and visited a ton of daycares.&lt;/li&gt;
&lt;li&gt;Went to child birth classes.&lt;/li&gt;
&lt;li&gt;Gave birth/supported birth-giving. (I did the support part, BTW.)&lt;/li&gt;
&lt;li&gt;Went to the doctor a jillion times.&lt;/li&gt;
&lt;li&gt;Got over baby bodily fluid revulsion.&lt;/li&gt;
&lt;li&gt;Gave up sleeping in favor getting blasted by night screaming.&lt;/li&gt;
&lt;li&gt;Fought bizarre and intense paranoia when leaving him at daycare.&lt;/li&gt;
&lt;li&gt;Googled a lot of infant maladies.&lt;/li&gt;
&lt;li&gt;Read a lot of &lt;a href=&quot;http://smile.amazon.com/Fuzzy-Bee-Friends-Cloth-Books/dp/0312491506/ref=sr_1_1?ie=UTF8&amp;qid=1420248331&amp;sr=8-1&amp;keywords=fuzzy+bee+and+friends&quot;&gt;Fuzzy Bee and Friends&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Partially on his behalf, we:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Established (relative) peace between our cats.&lt;/li&gt;
&lt;li&gt;I changed jobs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We are on an ongoing journey to keep him alive (don‚Äôt worry, he‚Äôs not especially sick, other than an ear infection) and to develop his skills and power.&lt;/p&gt;
&lt;p&gt;This endeavor has become rewarding far earlier than expected.&lt;/p&gt;
&lt;p&gt;One, I‚Äôm simply amazed that he exists. I have never seen someone go from not existing to existing. When he was born, he crossed the line from theoretical to real as hell.&lt;/p&gt;
&lt;p&gt;Two, he‚Äôs often happy, and when he is, it is far happier than any adult is even capable of being. You‚Äôd think that it‚Äôd be sad to be reminded of one‚Äôs emotional limitations, but nah, it‚Äôs more like witnessing a guy playing amazing guitar solos that you never could.&lt;/p&gt;
&lt;p&gt;Well, that was meant to be a preface for a post where I talked about the projects I did this year. Bumping that to a future post.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Walking with Anderson</title>
      <link>http://jimkang.com/weblog/articles/walking-with-anderson/</link>
      <pubDate>Sun, 07 Sep 2014 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/walking-with-anderson/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;section class=&quot;center-img-zone&quot;&gt;
On the way home, I saw a good sunset starting.
&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;/articles/walking-with-anderson/&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3871/15184185345_cbdd84c636_h.jpg&quot; width=&quot;800&quot; height=&quot;597&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/section&gt;
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;
So, we risked some major screaming and took Anderson out for a walk. He was very content with walking, as it happened.&lt;/p&gt;
&lt;section class=&quot;center-img-zone&quot;&gt;

&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14998449668&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3855/14998449668_07df3d2612_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14998448048&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3870/14998448048_7344c5037c_h.jpg&quot; width=&quot;800&quot; height=&quot;598&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/15161995606&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3898/15161995606_7618a29b90_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14997591047&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3899/14997591047_f95b24d473_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14997499220&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3894/14997499220_79f443f130_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14998346170&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3905/14998346170_fa2c434b23_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14998239819&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3899/14998239819_7457c971b3_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/15184168005&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5581/15184168005_2f1c9f971a_h.jpg&quot; width=&quot;800&quot; height=&quot;601&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14998441878&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3923/14998441878_957cae1c15_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/15161129646&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3886/15161129646_ed625a39f4_h.jpg&quot; width=&quot;800&quot; height=&quot;594&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Aaaand we‚Äôre back.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14998451787&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5577/14998451787_df96ddd3f9_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[Scream-packed bath time happened here, not pictured.]&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/15184830072&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5585/15184830072_fe79ff3362_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/section&gt;
&amp;nbsp;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Awaiting the Final Moment</title>
      <link>http://jimkang.com/weblog/articles/awaiting-the-final-moment/</link>
      <pubDate>Sun, 10  Aug 2014 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/awaiting-the-final-moment/</guid>
      <author></author>
      <description>&lt;section class=&quot;center-img-zone&quot;&gt;

&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;/articles/awaiting-the-final-moment/&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5574/14882569462_8ee010f9c5_h.jpg&quot; width=&quot;800&quot; height=&quot;598&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This was our final weekend as non-parents. We mostly conducted ourselves as normal, except that we went to a restaurant that was fairly schmance, just because we might not be able to do that again for a while, even though we‚Äôre not normal consumers of schmance.&lt;/p&gt;
&lt;p&gt;&lt;/section&gt;
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;section class=&quot;center-img-zone&quot;&gt;
I felt the urge to code a lot because I have heard much of the interruptive power of babies, but A) I should be engaging with my pregnant wife and also life B) furious, desperate coding rarely amounts to much. So, instead we went outside a lot, and one of those times, we went out to Menotomy Rocks.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14696330848&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5572/14696330848_3cd4930d6b_h.jpg&quot; width=&quot;800&quot; height=&quot;155&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here is one of the rocks. I guess it‚Äôs of the Menotomy sort. It was large, and I was impressed.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14879865931&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5577/14879865931_a8b8d1c2b2_h.jpg&quot; width=&quot;800&quot; height=&quot;599&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Oh, nature. Much articulation/reticulation wow&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14879869981&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5563/14879869981_39612dfb1d_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Menotomy Rocks park is not that big, and a lot of people live right next to it. I just thought it must be fairly ballin‚Äô perk to live near an urban center, yet have a forest as your backyard.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14902789113&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5559/14902789113_28b9dac223_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Another rock, this one mossier. It reminded me of the Hulk.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14859956866&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5569/14859956866_2c447d5902_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It‚Äôs probably the very non-woodsy nature of my upbringing, but scenes like this remind me of &lt;a href=&quot;http://www.agamesroom.com/library/images/screenshots/qfg1/qfg1ss4.gif&quot;&gt;Hero‚Äôs&lt;/a&gt; &lt;a href=&quot;http://www.mobygames.com/game/dos/heros-quest-so-you-want-to-be-a-hero/screenshots&quot;&gt;Quest&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14696297738&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3912/14696297738_a04255c858_h.jpg&quot; width=&quot;800&quot; height=&quot;312&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I thought this pond did some real good work with reflecting.&lt;/p&gt;
&lt;p&gt;Speaking of which, it feels like we‚Äôre about to move to another home or something.&lt;/p&gt;
&lt;p&gt;Also, despite:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Taking childbirth classes&lt;/li&gt;
&lt;li&gt;Assembling a crib and making space&lt;/li&gt;
&lt;li&gt;Reading up on safe living conditions for children and wrangling for them&lt;/li&gt;
&lt;li&gt;Searching for childcare&lt;/li&gt;
&lt;li&gt;Pretty much centering the last nine months on the arrival of our son&lt;/li&gt;
&lt;li&gt;Hearing about how hard the sacrifices are&lt;/li&gt;
&lt;li&gt;It being morning of the day of labor induction&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I don‚Äôt really comprehend what it‚Äôs going to be like. I want to see this guy and help him develop, but I don‚Äôt really feel the fear I should be. Fortunately, this frog-before-the-boiling attitude toward big events keeps me from useless worry, so, eh.&lt;/p&gt;
&lt;p&gt;Well, it‚Äôs been good being a non-child-having guy, but now I will see how it is being a child-having guy!
&lt;/section&gt;
&amp;nbsp;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>The mysteries of north North Cambridge</title>
      <link>http://jimkang.com/weblog/articles/north-north-cambridge/</link>
      <pubDate>Fri, 08  Aug 2014 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/north-north-cambridge/</guid>
      <author></author>
      <description>&lt;section class=&quot;center-img-zone&quot;&gt;

&lt;p&gt;&lt;a class=&quot;img-container&quot; class=&quot;img-container&quot; href=&quot;/articles/north-north-cambridge/&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3884/14869644464_dadf66129e_h.jpg&quot; width=&quot;800&quot; height=&quot;598&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;style&gt;
body {
  background-color: #1d1a14;
}

body, a, a:visited {
  color: #807A69;
}
&lt;/style&gt;

&lt;section class=&quot;center-img-zone&quot;&gt;

&lt;p&gt;This is the moon, not the sun.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14849125206&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3922/14849125206_ce1b602bbe_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Magic plant, possibly evil.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14849126956&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3922/14849126956_4eb2904fc4_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Moon vortex!&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14685575497&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3863/14685575497_29fda125ef_h.jpg&quot; width=&quot;800&quot; height=&quot;602&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Some sort of animal committee or congress.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14871774372&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3912/14871774372_b40b8206da_h.jpg&quot; width=&quot;800&quot; height=&quot;599&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We also found empty lots, weird houses, a talkative guide, a &lt;a href=&quot;https://grace.com/en-us&quot;&gt;massive corporation&lt;/a&gt;, and a cat.&lt;/p&gt;
&lt;p&gt;&lt;/section&gt;
&amp;nbsp;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Much Blue</title>
      <link>http://jimkang.com/weblog/articles/much-blue/</link>
      <pubDate>Sun, 06 Jul 2014 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/much-blue/</guid>
      <author></author>
      <description>&lt;section class=&quot;center-img-zone&quot;&gt;

&lt;p&gt;We went on a walk a bit after sunset this Sunday. A down-but-not-out sun can create an intensely saturated dark blue in the sky. We were awed. The phone didn‚Äôt capture that exact blue, but it did get some good ones.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;/articles/much-blue/&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5510/14590397224_09e0cc4616_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;
&lt;/section&gt;
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;style&gt;
body {
  background-color: #001018;  
}

body, a, a:visited {
  color: #667;
}
&lt;/style&gt;

&lt;section class=&quot;center-img-zone&quot;&gt;

&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14617464233&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3924/14617464233_f4bfa77f81_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14405696699&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3879/14405696699_e8d2b195bf_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14405861777&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm3.staticflickr.com/2927/14405861777_dd62c4a766_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14410804819&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3839/14410804819_02847e1374_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14588995321&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3853/14588995321_ed52789adc_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14612367263&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3856/14612367263_046c188d78_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14405690509&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm3.staticflickr.com/2935/14405690509_79e5d01174_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14569234496&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3895/14569234496_cafa096100_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14410960657&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3908/14410960657_e3812d87b1_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14592284295&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5596/14592284295_2f5e0e022f_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14574350356&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5485/14574350356_e7e2e282f7_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/section&gt;
&amp;nbsp;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Pink Overlord</title>
      <link>http://jimkang.com/weblog/articles/pink-overlord/</link>
      <pubDate>Sat, 28 Jun 2014 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/pink-overlord/</guid>
      <author></author>
      <description>&lt;section class=&quot;center-img-zone&quot;&gt;

&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;/articles/pink-overlord/&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3849/14347670628_6a72091546_h.jpg&quot; width=&quot;800&quot; height=&quot;345&quot; alt=&quot;Trunk full of junk&quot;&gt;&lt;/a&gt;
&lt;/section&gt;
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;section class=&quot;center-img-zone&quot;&gt;

&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14347641729&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3856/14347641729_6a14dd778f_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Little Free Library&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14347795017&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm4.staticflickr.com/3842/14347795017_d967ad22af_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14511123816&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5492/14511123816_4075d62b68_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14533267442&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm3.staticflickr.com/2915/14533267442_97acbe1949_h.jpg&quot; width=&quot;800&quot; height=&quot;450&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14349198430&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm3.staticflickr.com/2916/14349198430_36f7ebe32c_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14555963353&quot; title=&quot;Untitled by Jim, on Flickr&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5595/14555963353_5897f4658c_h.jpg&quot; width=&quot;800&quot; height=&quot;600&quot; alt=&quot;Untitled&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/section&gt;
&amp;nbsp;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Rendering faster by hiding DOM elements instead of removing them</title>
      <link>http://jimkang.com/weblog/articles/browser-disapproval-of-frequent-dom-removal/</link>
      <pubDate>Tue, 24 Jun 2014 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/browser-disapproval-of-frequent-dom-removal/</guid>
      <author></author>
      <description>&lt;p&gt;I know that DOM manipulation is expensive, but I‚Äôve found it just doesn‚Äôt make a difference in a typical web app. (And of course, DOM manipulation can rarely be avoided entirely in graphically-oriented apps; it‚Äôs a matter of reducing the amount of DOM-touching that happens in those cases.) Recently, I ran into a case in which it &lt;em&gt;did&lt;/em&gt; matter, &lt;code&gt;removeChild&lt;/code&gt; in particular.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I have been working on a &lt;a href=&quot;https://github.com/jimkang/reactivecell&quot;&gt;cellular automaton&lt;/a&gt;. The latest thing I did with it was to make it run in the browser. (Before I was running it with Node.) That part was smooth, but when I hooked it up to some &lt;a href=&quot;https://github.com/jimkang/cellgridrenderer&quot;&gt;straightforward D3 rendering code&lt;/a&gt; to render each cell at each iteration, I ran into some trouble. It was sluggish once there were about 6000 cells out.&lt;/p&gt;
&lt;p&gt;D3 apps usually work around an &lt;a href=&quot;http://bost.ocks.org/mike/join/&quot;&gt;enter/update/exit&lt;/a&gt; loop. Each iteration, you tell D3 to ‚Äújoin‚Äù the data (an array of some sort) with the DOM (usually SVG) elements that represent them. D3 figures out:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Which data elements are not currently represented in the DOM&lt;/li&gt;
&lt;li&gt;Which data elements are represented (but may need updating)&lt;/li&gt;
&lt;li&gt;Which DOM elements represent data elements that no longer exist&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It gives you the first and the last set as via &lt;code&gt;enter()&lt;/code&gt; and &lt;code&gt;exit()&lt;/code&gt;. Usually, you use the selection returned by &lt;code&gt;enter()&lt;/code&gt; to create new DOM elements to represent the new data, and you use &lt;code&gt;exit()&lt;/code&gt;‚Äòs selection to remove DOM elements. That‚Äôs what I was doing.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; function renderCells(cells) {
    var cellRenditions = tileRoot.selectAll(&amp;#39;.&amp;#39; + opts.cellClass)
      .data(cells, a.id);

    var newCellRenditions = cellRenditions.enter()
      .append(&amp;#39;g&amp;#39;).classed(opts.cellClass, true);

    newCellRenditions.append(&amp;#39;rect&amp;#39;).attr({
      x: 0,
      y: 0,
      width: 1,
      height: 1
    });

    if (opts.customizeCellRendition) {
      cellRenditions.each(opts.customizeCellRendition);
    }

    cellRenditions.attr(&amp;#39;transform&amp;#39;, a.transform);

    cellRenditions.exit().remove();
  }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I profiled some late iterations in Chrome DevTools to check out see where time was being spent in the code. Here‚Äôs what the flame graph for a single iteration‚Äôs rendering looked like:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;fit-to-width&quot; src=&quot;renderCells-profile-with-remove.png&quot; alt=&quot;Flame graph screenshot&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Rougly 80 ms was spent in &lt;code&gt;removeChild&lt;/code&gt;. The entire &lt;code&gt;renderCells&lt;/code&gt; call took 137 ms. So I thought, are &lt;code&gt;removeChild&lt;/code&gt; calls something I eliminate?&lt;/p&gt;
&lt;p&gt;Removing DOM elements makes sense for a lot of visualizations. A datum could disappear after an interation and never appear again.&lt;/p&gt;
&lt;p&gt;In a cellular automaton, all of the cells are in fixed positions. In my cellular automaton, only cells that do not match the profile of a ‚Äúdefault cell‚Äù are tracked and rendered. Thus, a cell can ‚Äúdisappear‚Äù (become a default cell) in one iteration, and then ‚Äúreappear‚Äù (become a cell that deviates from the default). So, I tried out &lt;a href=&quot;https://github.com/jimkang/cellgridrenderer/blob/master/fixedcellgridrenderer.js&quot;&gt;hiding exiting cells instead of removing them&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function renderCells(cells) {
  var cellRenditions = tileRoot.selectAll(&amp;#39;.&amp;#39; + opts.cellClass)
    .data(cells, opts.idFunction);

  var newCellRenditions = cellRenditions.enter()
    .append(&amp;#39;g&amp;#39;).classed(opts.cellClass, true);

  newCellRenditions
    .append(&amp;#39;rect&amp;#39;).attr({
      x: 0,
      y: 0,
      width: 1,
      height: 1
    })
    .attr(&amp;#39;transform&amp;#39;, a.transform);

  cellRenditions.attr(&amp;#39;opacity&amp;#39;, 1.0);

  if (opts.customUpdate) {
    opts.customUpdate(cellRenditions);
  }

  // Hide exited cells instead of removing.
  cellRenditions.exit()
    .attr(&amp;#39;opacity&amp;#39;, 0);
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here is the flame graph looked like after that change:&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;fit-to-width&quot; src=&quot;renderCells-profile-without-remove.png&quot; alt=&quot;Flame graph screenshot&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Now &lt;code&gt;renderCells&lt;/code&gt; takes about 30 ms. Most of that time is now spent in the data join. &lt;a href=&quot;http://jimkang.com/reactivecell/example/&quot;&gt;Give it a try!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ask your doctor if hiding instead of removing DOM elements in your app is right for you.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Sunday Moseying</title>
      <link>http://jimkang.com/weblog/articles/sunday-moseying/</link>
      <pubDate>Sat, 31 May 2014 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/sunday-moseying/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;section class=&quot;center-img-zone&quot;&gt;
  Here‚Äôs some stuff we saw while walking around North Cambridge and thereabouts Sunday morning.&lt;/p&gt;
&lt;p&gt;  &lt;a class=&quot;img-container&quot; href=&quot;/articles/sunday-moseying/&quot;&gt;&lt;img src=&quot;https://farm3.staticflickr.com/2903/14341308253_c75873731c_c.jpg&quot; alt=&quot;Sunday moseying&quot; /&gt;&lt;/a&gt;
&lt;/section&gt;
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;section class=&quot;center-img-zone&quot;&gt;

&lt;p&gt;  Something I really like about this neighborhood is that seems to have no one telling you your house has to be beige or whatever. You can paint your house however you like. It seems unlikely we‚Äôll be able to afford to own in this area, but if we do, I want the house to be nice and saturated like this powerful yellow one.&lt;/p&gt;
&lt;p&gt;  &lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14321073655/in/set-72157644546343690&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5547/14321073655_992f05a8e0_c.jpg&quot; alt=&quot;Sunday moseying&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  In a similar vein, I like that you can basically have a meadow by your house (presumably) without complaints about dandelions.&lt;/p&gt;
&lt;p&gt;  &lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14321110075/in/set-72157644546343690&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5530/14321110075_755b39c01c_c.jpg&quot; alt=&quot;Sunday moseying&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  Katt (contemplating the tree above) says this is some variant of dogwood, except with wide, flat petals. They almost form a plane. I am into that.&lt;/p&gt;
&lt;p&gt;  There‚Äôs these lofts that you can see from the Alewife Linear Park/Minuteman Bikeway that we call ‚ÄúExpensive Lofts.‚Äù I think the development is actually called either Tannery Brook Row or Davis Lofts. (A friend of ours told us pointed out that &lt;a href=&quot;http://en.wikipedia.org/wiki/Tanning&quot;&gt;tanneries&lt;/a&gt; are actually fairly toxic, so it‚Äôs like this place is actually built on some poison burial grounds. If you don‚Äôt eat plants grown in the soil, you‚Äôre probably fine, though.)&lt;/p&gt;
&lt;p&gt;  &lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14317718821/in/set-72157644546343690&quot;&gt;&lt;img src=&quot;https://farm3.staticflickr.com/2939/14317718821_4147c41344_c.jpg&quot; alt=&quot;Sunday moseying&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  We checked out the other side of it today, and it‚Äôs kinda nifty. There‚Äôs little ponds and gardens. This picture has some really out-of-control exposure, but some of the passages look like some kinda wooded elf town.&lt;/p&gt;
&lt;p&gt;  &lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14134420119/in/set-72157644546343690&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5114/14134420119_69b29bcd8f_c.jpg&quot; alt=&quot;Sunday moseying&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  There‚Äôs the ruins of a small house. In front, there are the matching ruins of a driveway. Perhaps there was some contention between that house and its bigger neighbor; small house lost. The big house razed the small house to its foundations, leaving just a bit standing as a monument to its power.&lt;/p&gt;
&lt;p&gt;  &lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14134529817/in/set-72157644546343690&quot;&gt;&lt;img src=&quot;https://farm3.staticflickr.com/2926/14134529817_9b62be418b_c.jpg&quot; alt=&quot;Sunday moseying&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  I liked this secret porch set up. You can enjoy the outside while not being obvious to passersby. Wearing the proper camo, you could possibly even be invisible.&lt;/p&gt;
&lt;p&gt;  &lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14317713991/in/set-72157644546343690&quot;&gt;&lt;img src=&quot;https://farm3.staticflickr.com/2930/14317713991_e49c74cc95_c.jpg&quot; alt=&quot;Sunday moseying&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  This was a pretty cool contrail.  &lt;/p&gt;
&lt;p&gt;  &lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14297907336/in/set-72157644546343690&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5233/14297907336_c5d137a9ae_c.jpg&quot; alt=&quot;Sunday moseying&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  A tree with a chunk missing by Davis Station. Was this tree struck by lightning? I thought it may have been &lt;a href=&quot;https://www.flickr.com/photos/ignignokt/8674311065/&quot;&gt;this tree&lt;/a&gt;, but that was a different one, blown over by the wind.&lt;/p&gt;
&lt;p&gt;  &lt;a class=&quot;img-container&quot; href=&quot;https://www.flickr.com/photos/ignignokt/14134386578/in/set-72157644546343690&quot;&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5315/14134386578_1edd0bd69c_c.jpg&quot; alt=&quot;Sunday moseying&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  Things were very dappled today. So much dappling!&lt;/p&gt;
&lt;p&gt;&lt;/section&gt;
BTW, if you also have a static html blog like this one and a Flickr account and want to put together a photo post with them, you may find it can be kind of annoying to get all the picture links you want out of a photo set. So, I wrote &lt;a href=&quot;https://github.com/jimkang/flickrset-to-html&quot;&gt;flickrset-to-html&lt;/a&gt; to do that for me, then just posted the resulting html into this post.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Between 480,000 and 960,000</title>
      <link>http://jimkang.com/weblog/articles/between-480000-and-960000/</link>
      <pubDate>Sat, 17 May 2014 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/between-480000-and-960000/</guid>
      <author></author>
      <description>&lt;style&gt;
  .tagbox {
    font-size: 32px;
  }

  .pipe {
    fill: hsla(0, 100%, 0%, 0.0);
    stroke-width: 1;
    stroke: #888;
  }

  svg {
    font-size: 20px;
  }

  svg text {
    fill: #585858;
  }

  .station {
    stroke: #777;
    stroke-width: 3;
    fill: #fff;
  }

  .station-label {
    font-size: 24px;
    text-align: center;
    text-anchor: middle;
  }

  #block-layer text {
    fill: hsl(0, 60%, 60%);
  }
&lt;/style&gt;

&lt;p&gt;I‚Äôve been working on a &lt;a href=&quot;https://github.com/jimkang/roguemap-parse-stream&quot;&gt;simple streaming parser&lt;/a&gt; for plain text maps. While writing the browser example (I originally wrote it for Node), I began to wonder if I could use the &lt;a href=&quot;https://github.com/substack/stream-handbook&quot;&gt;Power of Streaming&lt;/a&gt; to use it to render some really huge maps.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;
I gave it a map file with about 16 million entities that were each to render to three SVG entities. After fiddling with each of the streams involved to make them respect backpressure, I was able to keep the browser responsive for a while while it rendered these entities. However, at some point, the page would inevitably become unresponsive and the tab would crash.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Who to blame?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I stepped away from the JavaScript and made a huge static HTML file. It has 960,000 SVG &lt;code&gt;&amp;lt;g&amp;gt;&lt;/code&gt; elements, each containing a &lt;code&gt;&amp;lt;rect&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;text&amp;gt;&lt;/code&gt; element.&lt;/p&gt;
&lt;p&gt;Chrome 34.0.1847.131 quits on it (‚ÄúAw, Snap!‚Äù page) on a Mac running Mavericks with a 2.8 GHz Core i7 and 16 GB RAM. &lt;a href=&quot;https://dl.dropboxusercontent.com/u/263768/lotsofelements.html&quot;&gt;You can try it yourself.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(However, Chrome &lt;em&gt;will&lt;/em&gt; successfully load a page with 480,000 &lt;code&gt;&amp;lt;g&amp;gt;&lt;/code&gt;s!)&lt;/p&gt;
&lt;p&gt;So, if you find yourself having to create this many elements via JavaScript, keep in mind that &lt;em&gt;the fans may scream because of sheer rendering stress, not necessarily because there‚Äôs something wrong with your code.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Streaming into a lagoon&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I think there‚Äôs a lesson here about streaming as well. Streams are about processing data a manageable chunk at a time, but if you can‚Äôt dispose of those chunks after you‚Äôre done with them, those chunks pool up, and the chunk-at-a-time benefit of streams is negated. &lt;/p&gt;
&lt;p&gt;In the situation I set up &amp;mdash; piping a huge text file to a parser stream, then piping the parsed tokens to a renderer &amp;mdash; streams of text were transformed into streams of token objects which were then transformed into SVG elements. But those SVG elements did not ‚Äúpass through.‚Äù They piled up in the DOM, eating up memory.&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;stream-overload-diagram-anchor&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;svg width=&quot;800&quot; height=&quot;600&quot; id=&quot;stream-overload-diagram&quot;&gt;
  &lt;defs&gt;
    &lt;radialGradient id=&quot;sphere-gradient&quot;&gt;
      &lt;stop offset=&quot;0&quot; stop-color=&quot;hsl(30, 100%, 80%)&quot;/&gt;
      &lt;stop offset=&quot;0.75&quot; stop-color=&quot;hsl(20, 100%, 60%)&quot;&gt;
        &lt;animate attributeName=&quot;offset&quot; values=&quot;0.75;0.9;0.75&quot; keySplines=&quot;0.1 0.8 0.2 1; 0.1 0.8 0.2 1; 0.1 0.8 0.2 1&quot; dur=&quot;4s&quot; repeatCount=&quot;indefinite&quot; /&gt;
      &lt;/stop&gt;
      &lt;stop offset=&quot;1&quot; stop-color=&quot;hsl(10, 100%, 50%)&quot;&gt;
        &lt;animate attributeName=&quot;stop-color&quot; values=&quot;hsl(10, 100%, 50%);hsl(40, 100%, 70%);hsl(10, 100%, 50%)&quot; keySplines=&quot;0.1 0.8 0.2 1; 0.1 0.8 0.2 1; 0.1 0.8 0.2 1&quot; dur=&quot;4s&quot; repeatCount=&quot;indefinite&quot; /&gt;
      &lt;/stop&gt;
    &lt;/radialGradient&gt;

    &amp;lt;linearGradient id=‚Äùpipe-gradient‚Äù x1=‚Äù0‚Äù y1=‚Äù0‚Äù x2=‚Äù100%‚Äù, y2=‚Äù0‚Äù&amp;gt;
      &lt;stop offset=&quot;0&quot; stop-color=&quot;hsl(200, 100%, 10%)&quot; /&gt;
      &lt;stop offset=&quot;0.5&quot; stop-color=&quot;hsl(180, 100%, 20%)&quot;&gt;
        &lt;animate attributeName=&quot;offset&quot; values=&quot;0.5;0.9;0.5&quot; keySplines=&quot;0.1 0.8 0.2 1; 0.1 0.8 0.2 1; 0.1 0.8 0.2 1&quot; dur=&quot;10s&quot; repeatCount=&quot;indefinite&quot; /&gt;
      &lt;/stop&gt;
      &lt;stop offset=&quot;1&quot; stop-color=&quot;hsl(200, 100%, 30%)&quot;&gt;
      &lt;/stop&gt;
    &lt;/linearGradient&gt;
  &lt;/defs&gt;
  &lt;g class=&quot;background-layer&quot;&gt;
  &lt;/g&gt;
  &lt;g id=&quot;chunk-layer&quot;&gt;
  &lt;/g&gt;
  &lt;g id=&quot;static-layer&quot;&gt;
    &lt;g&gt;
      &lt;rect id=&quot;reader&quot; x=&quot;30&quot; y=&quot;300&quot; width=&quot;200&quot; height=&quot;120&quot; 
      class=&quot;station&quot; /&gt;
      &lt;text x=&quot;30&quot; dx=&quot;4.2em&quot; y=&quot;300&quot; dy=&quot;2.8em&quot; width=&quot;200&quot; class=&quot;station-label&quot;&gt;Internet requester&lt;/text&gt;
    &lt;/g&gt;

    &lt;g&gt;
      &lt;path d=&quot; M 250 4
                L 440 4
                L 345 154
                Z&quot;
            class=&quot;station&quot;
            id=&quot;parser&quot; x=&quot;250&quot; y=&quot;4&quot; width=&quot;100&quot; height=&quot;100&quot; /&gt;
      &lt;text x=&quot;250&quot; y=&quot;4&quot; dx=&quot;4em&quot; dy=&quot;2.35em&quot; class=&quot;station-label&quot;&gt;Parser&lt;/text&gt;
    &lt;/g&gt;

    &lt;g&gt;
      &lt;circle id=&quot;renderer&quot; x=&quot;525&quot; y=&quot;175&quot; width=&quot;150&quot; height=&quot;150&quot;
      r=&quot;75&quot; cx=&quot;600&quot; cy=&quot;250&quot; class=&quot;station&quot;&gt;&lt;/circle&gt;
      &lt;text x=&quot;525&quot; y=&quot;175&quot; dx=&quot;3.1em&quot; dy=&quot;2.25em&quot; class=&quot;station-label&quot;&gt;Renderer&lt;/text&gt;
    &lt;/g&gt;
  &lt;/g&gt;
  &lt;g id=&quot;block-layer&quot;&gt;
  &lt;/g&gt;

&lt;/svg&gt;  

&lt;p&gt;Not every object benefits from being hit with a hammer, and some situations benefit less than others from having a streaming pattern applied.&lt;/p&gt;
&lt;script src=&quot;d3.v3.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;basicrequest.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;wordgetter.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;scrollwatcher.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;gravitybox.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;idmaker.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;mover.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;flowcontroller.js&quot;&gt;&lt;/script&gt;
</description>
    </item>
    <item>
      <title>How quadtrees work</title>
      <link>http://jimkang.com/weblog/articles/quadtreevis/</link>
      <pubDate>Mon, 21 Apr 2014 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/quadtreevis/</guid>
      <author></author>
      <description>&lt;p&gt;An interactive explanation of quadtrees relate to spaces, with some details about D3‚Äôs implementation of the quadtree.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Writing Chrome Extensions and bookmarklets that mess with the DOM</title>
      <link>http://jimkang.com/weblog/articles/writing-dom-modifying-extensions/</link>
      <pubDate>Sat, 29 Mar 2014 20:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://jimkang.com/weblog/articles/writing-dom-modifying-extensions/</guid>
      <author></author>
      <description>&lt;p&gt;Let‚Äôs say you want to vandalize with a web page that you didn‚Äôt author. You want to see the New York Times in Comic Sans. Or you want to show only the last letter of every paragraph in the &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/UserExperience/Conceptual/AppleHIGuidelines/Intro/Intro.html&quot;&gt;HIG&lt;/a&gt; to see if there‚Äôs some &lt;a href=&quot;http://en.wikipedia.org/wiki/Bible_code&quot;&gt;secret message&lt;/a&gt;. Or perhaps you want to do something useful with the web page.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;
One way to do this is open the developer tools in your browser and directly change things in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM&quot;&gt;DOM&lt;/a&gt;. But if you want the world to also be able to do the same, you need to ship a program that does it. For quite a long time, people have been used &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/greasemonkey/&quot;&gt;Greasemonkey&lt;/a&gt; scripts in Firefox deliver them.&lt;/p&gt;
&lt;p&gt;On Chrome, &lt;a href=&quot;http://developer.chrome.com/extensions/index&quot;&gt;Chrome extensions&lt;/a&gt; do this. There‚Äôs also &lt;a href=&quot;http://en.wikipedia.org/wiki/Bookmarklet&quot;&gt;bookmarklets&lt;/a&gt;, which are less capable but will work across all browsers.&lt;/p&gt;
&lt;p&gt;Here‚Äôs a look at what it takes to make a DOM-altering Chrome extension or bookmarklet. (If you know that what you want to do is make a bookmarklet, though, I recommend you just &lt;a href=&quot;http://jimkang.com/articles/writing-dom-modifying-extensions/#contentscript&quot;&gt;skip down to the content script and bookmarklet parts&lt;/a&gt;.)&lt;/p&gt;
&lt;h1&gt;Extension structure&lt;/h1&gt;

&lt;p&gt;A Chrome extension is a package of JavaScript, CSS, and resource files. They‚Äôre balled up into a crx file on the Chrome Web Store, but in development, you can load an unpacked directory in &lt;a href=&quot;chrome://extensions&quot;&gt;chrome://extensions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There‚Äôs a &lt;a href=&quot;http://developer.chrome.com/extensions/manifest&quot;&gt;manifest.json&lt;/a&gt; that you need to fill out. Salient fields:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;permissions&amp;quot;: [
  &amp;quot;https://twitter.com/*&amp;quot;
],
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This tells Chrome that this extension will operate on pages that have URLs that begin with &lt;code&gt;https://twitter.com&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;browser_action&amp;quot;: {
    &amp;quot;default_icon&amp;quot;: {
      &amp;quot;19&amp;quot;: &amp;quot;onebyone_icon_19.png&amp;quot;,
      &amp;quot;38&amp;quot;: &amp;quot;onebyone_icon_38.png&amp;quot;
    }
  },
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you specify a &lt;code&gt;browser_action&lt;/code&gt; field, Chrome will put a button in the toolbar for you using the image files you specify. There‚Äôs a button click event your script can listen for. You can use this to do something when the user clicks your extension‚Äôs button.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;background&amp;quot;: {
  &amp;quot;scripts&amp;quot;: [&amp;quot;node_modules/scriptchain/scriptchain.js&amp;quot;, &amp;quot;background.js&amp;quot;],
  &amp;quot;persistent&amp;quot;: false
},
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here, we‚Äôre specifying the &lt;a href=&quot;https://developer.chrome.com/extensions/background_pages&quot;&gt;background scripts&lt;/a&gt; we want to have at the ready to respond to user-instigated events. Usually, I have a background.js file which listens for clicks to the extension‚Äôs button, then executes scripts in the context of the active tab. Executing scripts in the context of the active tab is kinda like going to the web page you want to mess with, then running code in the JavaScript console.&lt;/p&gt;
&lt;p&gt;Background script example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var scriptchain = createScriptChain(
  [&amp;#39;readability.js&amp;#39;, &amp;#39;parser.js&amp;#39;, &amp;#39;onebyone.js&amp;#39;], null, false
);

chrome.browserAction.onClicked.addListener(function respondToClick(tab) {
  scriptchain.loadChain();
});
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It‚Äôs registering for the &lt;code&gt;chrome.browserAction.onClicked&lt;/code&gt; event and responding to that event by calling &lt;code&gt;scriptchain.loadChain&lt;/code&gt;. &lt;a href=&quot;https://www.npmjs.org/package/scriptchain&quot;&gt;scriptchain&lt;/a&gt; is a helper I wrote that runs a list of scripts on the active tab in order. It‚Äôs a convenience, but alternatively, you can call &lt;a href=&quot;http://developer.chrome.com/extensions/tabs#method-executeScript&quot;&gt;chrome.tabs.executeScript&lt;/a&gt; to run your scripts on the tab.&lt;/p&gt;
&lt;p&gt;To sum up, the flow of execution goes like this:&lt;/p&gt;
&lt;ol start=&quot;0&quot;&gt;
&lt;li&gt;User visits a page that is included in the manifest‚Äôs &lt;code&gt;permissions&lt;/code&gt; property.&lt;/li&gt;
&lt;li&gt;Chrome loads the background scripts you specified in the manifest. One of them subscribes to the browser button click event.&lt;/li&gt;
&lt;li&gt;User clicks on the extension button in the Chrome toolbar.&lt;/li&gt;
&lt;li&gt;The background script gets the event and responds by executing a script in the context of the tab.&lt;/li&gt;
&lt;li&gt;That script does some cool stuff with the web page in the tab.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a name=&quot;contentscript&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;The content script: Actually doing stuff to the web page, finally&lt;/h1&gt;

&lt;p&gt;Once you‚Äôre finally executing code in the context of the web page, it‚Äôs a lot like being at a web page, opening the Web Inspector console, and running code. This is where you do your business, so to speak.&lt;/p&gt;
&lt;p&gt;Typically, you want to select DOM elements, read them and then change them or add to them or delete them. You may want to avoid including a big library like jQuery that abstracts that kind of thing in order to keep things light, especially if you‚Äôre going to be creating a bookmarklet version of your extension. Fortunately, the DOM API, while clunkier, is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/document.querySelectorAll&quot;&gt;not really all that different&lt;/a&gt; from the abstraction libraries these days.&lt;/p&gt;
&lt;p&gt;Here‚Äôs an example from &lt;a href=&quot;http://jimkang.com/twittershuffle/&quot;&gt;Twitter Shuffle&lt;/a&gt;, an extension and bookmarklet I wrote to shuffle around tweets and their authors for some misattribution fun and confusion. (&lt;a href=&quot;https://github.com/jimkang/twitter-shuffle-chrome-extension&quot;&gt;The unabridged file is here.&lt;/a&gt;)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;((function shuffleTweets() {
  ...

  var tweetTexts = document.querySelectorAll(&amp;#39;.tweet-text&amp;#39;);
  var tweetContents = [];
  tweetTexts.forEach(function getContents(tweet) {
    tweetContents.push(tweet.innerHTML);
  });
  var shuffledContents = shuffle(tweetContents);

  tweetTexts.forEach(function replaceWithShuffled(tweetText, i) {
    tweetText.innerHTML = shuffledContents[i];
  });

})());
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here is where you‚Äôd do the thing you want to do with the web page. You could do anything here. It‚Äôs like a &lt;a href=&quot;http://html5zombo.com/&quot;&gt;Zombo.com&lt;/a&gt; inside of that &lt;a href=&quot;http://benalman.com/news/2010/11/immediately-invoked-function-expression/&quot;&gt;IIFE&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;bookmarkletize&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Bookmarkletize&lt;/h1&gt;

&lt;p&gt;So, how would this work as a bookmarklet? You just have get a bookmark created on your users‚Äô browsers that has a URL that looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;javascript:&amp;lt;Your IIFE&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can‚Äôt really tell most users ‚Äúcopy this code, then edit a bookmark and paste it into the URL field.‚Äù You need to create a web page that has a link that contains your code in the &lt;code&gt;href&lt;/code&gt; and tell them to drag it to the bookmarks bar. Like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;Drag this to your bookmarks bar:&amp;lt;/p&amp;gt;      
&amp;lt;p&amp;gt;
  &amp;lt;a class=&amp;quot;bookmarklet&amp;quot; href=&amp;quot;javascript:&amp;lt;Your IIFE&amp;quot;&amp;gt;Greatest Bookmarklet of All Time!&amp;lt;/a&amp;gt;
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It‚Äôd be great if bookmarklet installation could be even simpler (some people don‚Äôt have their bookmarks bar showing), but I think it‚Äôs the best we can do for now.&lt;/p&gt;
&lt;p&gt;To squeeze your IIFE into an &lt;code&gt;href&lt;/code&gt;, you‚Äôll need to crunch it down to one line Minification wouldn‚Äôt hurt, either. You can do it by hand, but I recommend your run it through &lt;a href=&quot;https://github.com/mishoo/UglifyJS2&quot;&gt;UglifyJS&lt;/a&gt;. On a Mac, you do this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;uglifyjs yourcontentscript.js -m | pbcopy
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The minified code will be in your pasteboard. You can cmd+V it into your &lt;code&gt;href=&amp;quot;javascript:&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;Why even bother with a Chrome extension, then?&lt;/h1&gt;

&lt;p&gt;Well, there‚Äôs stuff you can do in a Chrome extension that you can‚Äôt do in a bookmarklet. Chrome extensions are also easier to install. At least on Chrome. But yeah, if you know you don‚Äôt need any of that, just make a bookmarklet.&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>